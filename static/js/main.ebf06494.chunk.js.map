{"version":3,"sources":["enums.ts","hooks.ts","components/AppWrappers/AppDragContext.tsx","static/appConfig.ts","components/AppWrappers/AppTimers.tsx","utils.ts","components/Background/TestShader1.js","components/Background/BackgroundShader.js","components/Background.tsx","components/CardContent/CardIFrame.tsx","components/CardContent/CardImage.tsx","components/CardContent.tsx","components/Shared/Pulsar.tsx","components/DragAndDrop/IXDrop.tsx","components/Widgets/Clock.tsx","components/Shared/Modal.tsx","components/Shared/Panel.tsx","components/HowToUse/HowToUsePopUp.tsx","components/Shared/Button.tsx","components/Widgets/HowToUse.tsx","components/Widgets/WidgetRenderer.tsx","components/CardLayout/ViewCard/CardBackdrop.tsx","components/CardLayout/ViewCard/CardInfo.tsx","components/CardLayout/ViewCard/CardMotionWrapper.tsx","components/CardLayout/ViewCard/DeleteButton.tsx","components/CardLayout/ViewCard/SettingsButton.tsx","components/CardLayout/ViewCard/ViewCard.tsx","components/CardLayout/GuideGrid.tsx","components/CardLayout/CardLayout.tsx","components/Shared/FlexColumn.tsx","components/Shared/FlexRow.tsx","components/EditorPanel/EditorTabs/TabPane.tsx","components/EditorPanel/EditorTabs/AppTab/AppTab.tsx","components/DragAndDrop/DraggableRow.tsx","IFrameValidator.ts","components/Loader.tsx","components/EditorPanel/PopOver.tsx","components/EditorPanel/TableHeader.tsx","components/EditorPanel/EditorTabs/ContentsTab/ContentsTab.tsx","components/EditorPanel/EditorTabs/IssuesTab/IssuesTable.tsx","components/EditorPanel/EditorTabs/IssuesTab/IssuesTab.tsx","components/EditorPanel/EditorTabs/LayoutTab/GoogleFormPopup/GoogleFormIframe.tsx","components/EditorPanel/EditorTabs/LayoutTab/GoogleFormPopup.tsx","components/EditorPanel/EditorTabs/LayoutTab/LayoutTable.tsx","components/EditorPanel/EditorTabs/LayoutTab/LayoutTab.tsx","components/DragAndDrop/DraggableWidget.tsx","components/EditorPanel/EditorTabs/WidgetsTab/WidgetsTab.tsx","components/EditorPanel/EditorTabs/EditorTabs.tsx","components/EditorPanel/SettingsMenu.tsx","components/EditorPanel/EditorPanel.tsx","components/ModeChangeButton.tsx","components/Shared/Screen.tsx","components/Shared/Timer.tsx","LoadingScreen.tsx","App.tsx","data_structs/CardData.ts","data_structs/WidgetData.ts","static/widgets.ts","model/appModel.ts","model/appSettingsModel.ts","data_structs/GoogleSheetData.ts","model/googleSheetsModel.ts","static/extendedLayoutTest.ts","data_structs/LayoutData.ts","model/index.ts","model/layoutsModel.ts","store.ts","index.tsx"],"names":["AppMode","CardView","DragType","InteractionType","DndTypes","DragSource","appModelHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","useCardEditor","actions","layoutsModel","setCardScale","setCardBackgroundColor","setCardContentFit","setEditingCard","appModel","editingCard","state","cardScale","cardBackgroundColor","cardContentFit","clearEditingCard","undefined","useAppSettings","setRotationSpeed","appSettingsModel","setShowQrCodes","setBlockIframeInteractions","setEnableIframeInteractions","setMuteIframeAudio","setEnableIframeAudio","setRotateLayouts","rotationSpeed","enableIframeAudio","rotateLayouts","enableQrCodes","enableIframeInteractions","useSheets","fetchTopLevelSheet","googleSheetsModel","fetchParentSheet","urlQueryLink","urlSheet","parentSheetUrl","cardSheetUrl","layoutSheetUrl","setUrlSheet","formUrl","refreshSheets","useErrors","appErrors","layoutErrors","googleSheetsErrors","allErrors","useApp","toggleAppMode","sheetsAreLoaded","transitionLayout","addAppError","appMode","useLayout","activeCards","activeWidgets","externalLayouts","swapCard","swapCardContent","deleteCard","addCard","setBufferLayout","activeLayout","useNextLayout","setNextLayout","setActiveLayout","clearCards","resetLayout","useEventListener","eventName","handler","element","savedHandler","useRef","useEffect","targetElement","current","window","addEventListener","eventListener","event","removeEventListener","useWindowSize","useState","width","height","windowSize","setWindowSize","handleSize","innerWidth","innerHeight","useLayoutEffect","stringToGridPos","cardId","posString","split","x","Number","parseInt","charAt","y","AppDragContext","children","externalLayoutsState","onDragEnd","response","destination","droppableId","source","draggableId","CARD_TABLE","startsWith","cardPos","sourceId","targetPosition","targetId","WIDGETS_TABLE","LAYOUT_TABLE","newLayout","filter","l","id","console","log","defaultAppTimers","idleTime","noUrlTimeout","rotationDuration","appConfig","backupParentSheetUrl","process","defaultIframeScale","defaultEmbedScale","widgetIds","showModeSwitchButton","useStaticLayout","timers","gridSettings","gridRows","gridCols","gridBottomPadding","AppTimers","isIdle","useIdle","reset","callback","delay","savedCallback","intervalReference","setInterval","clearInterval","useCallback","stop","useInterval","DISPLAY","EDIT","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","toString","slice","length","join","randomIntFromInterval","min","max","Math","floor","random","randomNumber","TestShader1","uniforms","time","value","vertexShader","fragmentShader","randomisePosition","THREE","rgb","r","g","b","baseColors","pink","brightPink","darkPurple","orange","darkgrey","lightgrey","red","u_bg","type","u_bgMain","u_color1","u_color2","u_time","u_randomisePosition","ShadedGeometry1","position","shaderMaterialRef","t","j","vCheck","useFrame","clock","cos","R","sin","G","B","rotation","degToRad","attach","args","ref","BackgroundShader","cam","gl","antialias","alpha","PerspectiveCamera","fov","aspect","near","far","faceResolution","OrbitControls","Background","backgroundColor","backgroundStyle","setBackgroundStyle","style","top","left","transition","backgroundClass","classNames","ReactDOM","createPortal","className","document","querySelector","React","memo","CardIFrame","onLoad","onError","card","cardSettings","cardView","scale","src","transform","pointerEvents","transformOrigin","CardImage","objectFit","contentFit","objectPosition","PREVIEW","ReactPlayer","_ReactPlayer","IFrameView","active","setActive","valid","setIsLoaded","indexFrameContainerClass","contentType","onDoubleClick","onReady","ResponsivePlayer","controls","muted","playing","url","Pulsar","AddIcon","size","IXDrop","properties","cardType","provided","snapshot","innerRef","isDraggingOver","placeholder","Clock","setDate","timerID","boxSizing","color","fontWeight","overflow","padding","fontSize","toLocaleTimeString","hour12","timeStyle","Modal","containerClassName","onClose","backdropOpacity","motion","div","animate","display","justifyContent","alignItems","zIndex","MyBackdrop","onMouseUp","opacity","Panel","flexDirection","panelStyle","HowToUsePopUp","borderRadius","variants","hidden","visible","duration","Heading","Text","Button","onClick","text","appearance","iconBefore","containerClass","intent","cursor","HowToUse","initialValue","setValue","useToggle","toggleVisible","HandUpIcon","WidgetRenderer","widget","colWidth","rowHeight","w","h","widgetId","widg","renderWidget","CardBackdrop","boxShadow","border","CardInfo","data","title","CardMotionWrapper","animation","preview","none","error","loaded","out","initial","layoutId","DeleteButton","action","onTouchEnd","e","DeleteIcon","SettingsButton","bottom","background","CogIcon","ViewCard","useAnimation","GRID","oldCardView","setCardView","setIsError","animationVariant","setAnimationVariant","animationCounter","reference","useLocalStore","handleCardPress","thunk","_","getState","rootel","setTimeout","getElementById","setBackgroundColor","setScale","setShowMenu","show","showMenu","toggleMenu","devTools","cardModalBackdrop","FULL_SCREEN","cardChildContainer","keyCode","disabled","enable","disable","handleAction","preventDefault","useKeyboardShortcut","showDeleteButton","renderCardInfo","containerReference","listener","contains","target","errorType","description","link","renderReturnButton","ReturnButton","GuideGrid","ResponsiveGridLayout","WidthProvider","Responsive","guideCards","rows","cols","allGridSpots","push","emptyCards","map","rr","i","minW","maxW","minH","maxH","static","isDraggable","isResizable","resizeHandles","lg","md","sm","xs","xxs","generateFilledLayout","justCardNames","c","layouts","preventCollision","p","index","key","PLACEHOLDER","CardLayout","layout","margin","onLayoutChange","cards","widgets","sharedGridSettings","breakpoints","compactType","onDragStart","oldItem","newItem","verticalCompact","exit","IFRAME","find","s","contentCard","FlexColumn","FlexRow","TabPane","SwitchContainer","onChange","checked","setChecked","paddingLeft","Switch","defaultChecked","Label","AppTab","SheetLinks","links","titles","SheetLink","href","rel","textOverflow","maxWidth","DraggableRow","dndType","dragAll","isValidElement","createElement","body","append","remove","useDraggableInPortal","dragHandleProperties","dragHandleProps","isDragging","draggableProps","offsetLeft","offsetTop","cloneElement","defaultProps","IFrameLoadError","IFrameLoadWarning","getDefaultStyle","Loader","ariaLabel","wrapperStyle","wrapperClass","fill","viewBox","xmlns","attributeName","dur","from","repeatCount","to","PopOver","AnimatePresence","ease","transformBox","TableHeader","headerTitle","setFilter","setFilterDirection","activeFilter","sortDirection","setSortDirection","showSortArrow","string","regex","toLowerCase","match","forEach","char","replace","toUpperCase","titleCapitilization","TitleWithIcon","iconId","setPosition","hovered","setHovered","setPreviewLoaded","delayHandler","setDelayHandler","onMouseEnter","pageY","parentElement","getBoundingClientRect","onMouseLeave","_event","clearTimeout","isActive","fallbackImage","_c","marginTop","marginBottom","textAlign","ContentsTab","availableCards","filterKey","setFilterKey","filterDirection","cardItems","setCardItems","searchTerm","setSearchTerm","filteredCards","setFilteredCards","aboveThreshholdCardTitles","fuzzysort","go","filtered","includes","sortedItems","sort","a","aText","bText","reverse","test","setTest","SearchInput","Tooltip","content","IconButton","icon","RefreshIcon","CLOCK","isDropDisabled","autoHeight","autoHeightMax","autoHeightMin","added","author","interaction","CARD_ROW","isDragDisabled","ErrorMessage","marginRight","borderBottom","textTransform","IssuesTable","setReference","setSize","offsetWidth","offsetHeight","useElementSize","squareReference","overflowY","IssuesTab","GoogleFormIframe","frameBorder","marginHeight","marginWidth","GoogleFormPopup","onCloseComplete","isCopiedJSON","setIsCopiedJson","layoutString","JSON","stringify","ReactDom","ClipboardIcon","navigator","clipboard","writeText","LayoutTable","activeLayoutState","StatusIndicator","LayoutTitle","layoutCardIds","sources","layoutWidgetsIds","availableWidgets","pageX","textDecoration","layoutSettings","LayoutTab","showNewLayoutPopup","setShowNewLayoutPopup","DraggableWidget","currentLayoutState","isInLayout","WidgetsTab","widgetsToRender","setWidgetsToRender","WIDGET","WidgetWrapper","editorPanelReference","scalar","setScalar","Editor","ErrorsNofictions","aspectRatio","marginLeft","InputRow","ScaleControls","localScale","setLocalScale","ChevronLeftIcon","defaultValue","ChevronRightIcon","SettingsMenu","getCardSettings","currentCardSettings","cardSettingsToGet","setcardSettingsToGet","classNamePrefix","selected","option","options","label","EditorPanel","minimized","setMinimized","editorPanelClass","editorClass","bounds","right","defaultClassName","defaultPosition","handle","PlusIcon","MinusIcon","EditorTabs","PanelHeader","BarButton","ModeChangeButton","toggleModeAction","longPressEvent","useLongPress","modeChangeButtonStyle","whileTap","Screen","Timer","seconds","onEnd","timeLeft","setTimeLeft","intervalId","LoadingScreenContext","createContext","setVisible","v","LoadingScreen","Provider","minHeight","backdropFilter","in","Spinner","NoUrlError","useContext","WarningSignIcon","Body","effect","query","search","useLocation","useMemo","URLSearchParams","useQuery","get","setGridLayout","App","IFrameValidator","errors","warnings","this","malformedUrlCheckArray","warningsArray","RegExp","MALFORMED_URL","validURL","CROSS_ORIGIN","CardData","row","metaData","validator","failed","isImgLink","isVideo","isEmbed","isWebsite","widgetType","WidgetData","info","Object","values","widgetInfo","errorsString","newError","isLoaded","manageViewModeChange","viewModeEnum","setAppMode","CYCLE","onCardSheetLoadSuccess","thunkOn","storeActions","setAppGoogleSheetData","payload","getSheetRows","then","rawCardRowsArray","sourceid","entries","setAvailableCards","onSetActiveLayout","activeSourceIds","Set","setActiveWidgets","availableCardsUpdated","has","setActiveCards","onSwapCardContent","newCards","cardDataArray","widgetDataArray","should","speed","GoogleSheetData","sheetId","sheets","Map","Promise","resolve","reject","rowArray","set","addGoogleSheetError","googleSheetError","cardDataGoogleSheet","getSheetData","sheetRow","setFormUrl","googleForm","setLayoutsSheetUrl","layoutsSheet","setCardSheetUrl","cardsSheet","setParentSheetUrl","fetchSheet","name","googleSheetUrlToCSVUrl","catch","REACT_APP_SHEET_URL","sheetResponses","allSettled","results","sheetData","goodValues","result","status","addSheet","sheetTitle","setCardDataGoogleSheet","setLayoutDataGoogleSheet","layoutDataGoogleSheet","parentGoogleSheet","requests","googleSheet","sheet","computed","every","sheetKey","gid","sheetUrl","Papa","parse","complete","delimiter","download","dynamicTyping","header","extendedLayoutTest","defaultBackgroundColor","defaultCardSettings","defaultGridSettings","LayoutData","sourceLayout","layoutWidgets","testGetLayout","timestamp","swapInfo","k","toRemoveId","toAdd","pos","cs","newGridLayout","keys","object","model","cardAddEvent","getStoreState","cardToAdd","buf","bufferLayout","addLayoutError","backupData","cardToDelete","removeCard","layoutsString","onSetAppGoogleSheetData","rawLayoutRows","currentLayoutIds","receivedLayoutsIds","indexOfLayoutToRemove","indexOf","splice","defaultLayout","setExternalLayouts","onToggleViewMode","newActiveLayout","setAnimationCounter","setCardSettings","settings","newLayoutArray","currentIndex","selectedRandom","updateLayout","swap","old","store","createStore","render"],"mappings":"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","file":"static/js/main.ebf06494.chunk.js","sourcesContent":["export enum AppMode {\r\n  DISPLAY = \"DISPLAY\",\r\n  EDIT = \"EDIT\",\r\n  CYCLE = \"CYCLE\",\r\n}\r\n\r\nexport enum CardView {\r\n  GRID = \"GRID\",\r\n  PREVIEW = \"PREVIEW\",\r\n  FULL_SCREEN = \"FULL_SCREEN\",\r\n}\r\n\r\nexport enum DragType {\r\n  CARD_TABLE_DATA = \"CARD_TABLE_DATA\",\r\n  DISPLAY_CARD = \"DISPLAY_CARD\",\r\n}\r\n\r\nexport enum InteractionType {\r\n  ACTIVE = \"ACTIVE\",\r\n  STATIC = \"STATIC\",\r\n  FIXED = \"FIXED\",\r\n  IMAGE = \"IMAGE\",\r\n}\r\n\r\nexport enum DndTypes {\r\n  PLACEHOLDER = \"PLACEHOLDER\",\r\n  CLOCK = \"CLOCK\",\r\n  IFRAME = \"IFRAME\",\r\n  CARD_ROW = \"CARD_ROW\",\r\n  LAYOUT = \"LAYOUT\",\r\n  WIDGET = \"WIDGET\",\r\n}\r\n\r\nexport enum DragSource {\r\n  LAYOUT_TABLE = \"LAYOUT_TABLE\",\r\n  CARD_TABLE = \"CARD_TABLE\",\r\n  CARD_GRID = \"CARD_GRID\",\r\n  WIDGETS_TABLE = \"WIDGETS_TABLE\"\r\n}\r\n\r\nexport type SheetNames = \"CARDS\" | \"LAYOUTS\" | \"TOP_LEVEL\"","import type { ActionCreator, ThunkCreator } from \"easy-peasy\";\r\nimport { createTypedHooks } from \"easy-peasy\";\r\nimport type { EffectCallback, RefObject } from \"react\";\r\nimport React, {\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport type CardData from \"./data_structs/CardData\";\r\nimport type LayoutData from \"./data_structs/LayoutData\";\r\nimport type WidgetData from \"./data_structs/WidgetData\";\r\nimport type { AppMode } from \"./enums\";\r\nimport type AppError from \"./interfaces/AppError\";\r\nimport type { CardAddEvent, CardSwapEvent } from \"./interfaces/CardEvents\";\r\nimport type { StoreModel } from \"./model\";\r\n\r\nconst appModelHooks = createTypedHooks<StoreModel>();\r\n\r\nexport const useStoreActions = appModelHooks.useStoreActions;\r\nexport const useStoreDispatch = appModelHooks.useStoreDispatch;\r\nexport const useStoreState = appModelHooks.useStoreState;\r\n\r\nexport function useToggle(initialValue: boolean): [boolean, () => void] {\r\n  const [value, setValue] = useState<boolean>(initialValue);\r\n\r\n  const toggleValue = () => setValue(!value);\r\n\r\n  return [value, toggleValue];\r\n}\r\n\r\ninterface UseCardEditorProperties {\r\n  cardBackgroundColor: string | undefined;\r\n  setEditingCard: ActionCreator<CardData | undefined>;\r\n  setCardScale: ActionCreator<{\r\n    cardId: string;\r\n    scale: number;\r\n  }>;\r\n  setCardBackgroundColor: ActionCreator<{\r\n    cardId: string;\r\n    color: string;\r\n  }>;\r\n  setCardContentFit: ActionCreator<{\r\n    cardId: string;\r\n    contentFit: string;\r\n  }>;\r\n  clearEditingCard: () => void;\r\n  cardScale: number | undefined;\r\n  editingCard: CardData | undefined;\r\n  cardContentFit: string | undefined;\r\n}\r\n\r\nexport const useCardEditor = (): UseCardEditorProperties => {\r\n  const { setCardScale, setCardBackgroundColor, setCardContentFit } =\r\n    useStoreActions((actions) => actions.layoutsModel);\r\n  const { setEditingCard } = useStoreActions((actions) => actions.appModel);\r\n  const { editingCard } = useStoreState((state) => state.appModel);\r\n  const { cardScale, cardBackgroundColor, cardContentFit } = useStoreState(\r\n    (state) => state.layoutsModel\r\n  );\r\n\r\n  const clearEditingCard = () => {\r\n    // eslint-disable-next-line unicorn/no-useless-undefined\r\n    setEditingCard(undefined);\r\n  };\r\n\r\n  return {\r\n    setEditingCard,\r\n    editingCard,\r\n    setCardScale,\r\n    setCardBackgroundColor,\r\n    clearEditingCard,\r\n    cardScale,\r\n    cardBackgroundColor,\r\n    cardContentFit,\r\n    setCardContentFit,\r\n  };\r\n};\r\n\r\ninterface UseAppSettingsProperties {\r\n  enableIframeAudio: boolean;\r\n  enableQrCodes: boolean;\r\n  rotateLayouts: boolean;\r\n  rotationSpeed: number;\r\n  enableIframeInteractions: boolean;\r\n  setBlockIframeInteractions: ActionCreator<boolean>;\r\n  setShowQrCodes: ActionCreator<boolean>;\r\n  setRotationSpeed: ActionCreator<number>;\r\n  setMuteIframeAudio: ActionCreator<boolean>;\r\n  setRotateLayouts: ActionCreator<boolean>;\r\n}\r\n\r\nexport const useAppSettings = (): UseAppSettingsProperties => {\r\n  const setRotationSpeed = useStoreActions(\r\n    (actions) => actions.appSettingsModel.setRotationSpeed\r\n  );\r\n  const setShowQrCodes = useStoreActions(\r\n    (actions) => actions.appSettingsModel.setShowQrCodes\r\n  );\r\n  const setBlockIframeInteractions = useStoreActions(\r\n    (actions) => actions.appSettingsModel.setEnableIframeInteractions\r\n  );\r\n  const setMuteIframeAudio = useStoreActions(\r\n    (state) => state.appSettingsModel.setEnableIframeAudio\r\n  );\r\n  const setRotateLayouts = useStoreActions(\r\n    (actions) => actions.appSettingsModel.setRotateLayouts\r\n  );\r\n  const rotationSpeed = useStoreState(\r\n    (state) => state.appSettingsModel.rotationSpeed\r\n  );\r\n  const enableIframeAudio = useStoreState(\r\n    (state) => state.appSettingsModel.enableIframeAudio\r\n  );\r\n  const rotateLayouts = useStoreState(\r\n    (state) => state.appSettingsModel.rotateLayouts\r\n  );\r\n  const enableQrCodes = useStoreState(\r\n    (state) => state.appSettingsModel.enableQrCodes\r\n  );\r\n  const enableIframeInteractions = useStoreState(\r\n    (state) => state.appSettingsModel.enableIframeInteractions\r\n  );\r\n\r\n  return {\r\n    rotationSpeed,\r\n    enableQrCodes,\r\n    enableIframeInteractions,\r\n    rotateLayouts,\r\n    enableIframeAudio,\r\n    setRotationSpeed,\r\n    setShowQrCodes,\r\n    setBlockIframeInteractions,\r\n    setRotateLayouts,\r\n    setMuteIframeAudio,\r\n  };\r\n};\r\n\r\ninterface UseSheetsProperties {\r\n  cardSheetUrl: string | undefined;\r\n  fetchTopLevelSheet: ThunkCreator<string, any>;\r\n  formUrl: string | undefined;\r\n  layoutSheetUrl: string | undefined;\r\n  parentSheetUrl: string | undefined;\r\n  refreshSheets: ThunkCreator<void, any>;\r\n  setUrlSheet: ActionCreator<string | null>;\r\n  urlQueryLink: string | null;\r\n}\r\n\r\nexport const useSheets = (): UseSheetsProperties => {\r\n  const fetchTopLevelSheet = useStoreActions(\r\n    (actions) => actions.googleSheetsModel.fetchParentSheet\r\n  );\r\n  const urlQueryLink = useStoreState(\r\n    (state) => state.googleSheetsModel.urlSheet\r\n  );\r\n\r\n  const parentSheetUrl = useStoreState(\r\n    (state) => state.googleSheetsModel.parentSheetUrl\r\n  );\r\n  const cardSheetUrl = useStoreState(\r\n    (state) => state.googleSheetsModel.cardSheetUrl\r\n  );\r\n  const layoutSheetUrl = useStoreState(\r\n    (state) => state.googleSheetsModel.layoutSheetUrl\r\n  );\r\n  const setUrlSheet = useStoreActions(\r\n    (actions) => actions.googleSheetsModel.setUrlSheet\r\n  );\r\n  const formUrl = useStoreState((state) => state.googleSheetsModel.formUrl);\r\n\r\n  const refreshSheets = useStoreActions(\r\n    (actions) => actions.googleSheetsModel.refreshSheets\r\n  );\r\n\r\n  return {\r\n    fetchTopLevelSheet,\r\n    parentSheetUrl,\r\n    cardSheetUrl,\r\n    layoutSheetUrl,\r\n    formUrl,\r\n    setUrlSheet,\r\n    refreshSheets,\r\n    urlQueryLink,\r\n  };\r\n};\r\n\r\ninterface UseErrorProperties {\r\n  allErrors: AppError[];\r\n  appErrors: AppError[];\r\n  googleSheetsErrors: AppError[];\r\n  layoutErrors: AppError[];\r\n}\r\n\r\nexport const useErrors = (): UseErrorProperties => {\r\n  const appErrors = useStoreState((state) => state.appModel.appErrors);\r\n  const layoutErrors = useStoreState(\r\n    (state) => state.layoutsModel.layoutErrors\r\n  );\r\n  const googleSheetsErrors = useStoreState(\r\n    (state) => state.googleSheetsModel.googleSheetsErrors\r\n  );\r\n  const allErrors = [...appErrors, ...layoutErrors, ...googleSheetsErrors];\r\n  return {\r\n    appErrors,\r\n    layoutErrors,\r\n    googleSheetsErrors,\r\n    allErrors,\r\n  };\r\n};\r\n\r\ninterface UseAppProperties {\r\n  addAppError: ActionCreator<AppError>;\r\n  appMode: AppMode;\r\n  editingCard: CardData | undefined;\r\n  rotateLayouts: boolean;\r\n  rotationSpeed: number;\r\n  setEditingCard: ActionCreator<CardData>;\r\n  setRotateLayouts: ActionCreator<boolean>;\r\n  setRotationSpeed: ActionCreator<number>;\r\n  sheetsAreLoaded: boolean;\r\n  toggleAppMode: ThunkCreator<void, any>;\r\n  transitionLayout: ThunkCreator<number, any>;\r\n}\r\n\r\nexport const useApp = (): UseAppProperties => {\r\n  const toggleAppMode = useStoreActions(\r\n    (actions) => actions.appModel.toggleAppMode\r\n  );\r\n\r\n  const rotationSpeed = useStoreState((state) => state.appModel.rotationSpeed);\r\n  const editingCard = useStoreState((state) => state.appModel.editingCard);\r\n  const rotateLayouts = useStoreState((state) => state.appModel.rotateLayouts);\r\n  const sheetsAreLoaded = useStoreState(\r\n    (state) => state.googleSheetsModel.sheetsAreLoaded\r\n  );\r\n\r\n  const setRotationSpeed = useStoreActions(\r\n    (actions) => actions.appModel.setRotationSpeed\r\n  );\r\n  const transitionLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.transitionLayout\r\n  );\r\n  const setRotateLayouts = useStoreActions(\r\n    (actions) => actions.appModel.setRotateLayouts\r\n  );\r\n  const addAppError = useStoreActions(\r\n    (actions) => actions.appModel.addAppError\r\n  );\r\n  const setEditingCard = useStoreActions(\r\n    (actions) => actions.appModel.setEditingCard\r\n  );\r\n  const appMode = useStoreState((state) => state.appModel.appMode);\r\n\r\n  return {\r\n    appMode,\r\n    rotationSpeed,\r\n    setRotationSpeed,\r\n    editingCard,\r\n    toggleAppMode,\r\n    rotateLayouts,\r\n    setRotateLayouts,\r\n    addAppError,\r\n    sheetsAreLoaded,\r\n    transitionLayout,\r\n    setEditingCard,\r\n  };\r\n};\r\n\r\nexport function useQuery() {\r\n  const { search } = useLocation();\r\n  return React.useMemo(() => new URLSearchParams(search), [search]);\r\n}\r\n\r\ninterface UseLayoutProperties {\r\n  activeCards: CardData[];\r\n  activeLayout: LayoutData | undefined;\r\n  setBufferLayout: ActionCreator<ReactGridLayout.Layouts>;\r\n  activeWidgets: WidgetData[];\r\n  clearCards: ThunkCreator<void, any>;\r\n  addCard: ThunkCreator<CardAddEvent, any>;\r\n  swapCard: ThunkCreator<CardSwapEvent, any>;\r\n  // addWidget: ThunkCreator<CardAddEvent, any>;\r\n  setActiveLayout: ActionCreator<LayoutData>;\r\n  useNextLayout: ThunkCreator<void, any>;\r\n  deleteCard: ThunkCreator<string, any>;\r\n  resetLayout: ThunkCreator<void, any>;\r\n  externalLayouts: LayoutData[];\r\n}\r\n\r\nexport const useLayout = (): UseLayoutProperties => {\r\n  const activeCards = useStoreState((state) => state.appModel.activeCards);\r\n  const activeWidgets = useStoreState((state) => state.appModel.activeWidgets);\r\n  const externalLayouts = useStoreState(\r\n    (state) => state.layoutsModel.externalLayouts\r\n  );\r\n  const swapCard = useStoreActions(\r\n    (actions) => actions.layoutsModel.swapCardContent\r\n  );\r\n\r\n  // const addWidget = useStoreActions(\r\n  //   (actions) => actions.layoutsModel.addWidget\r\n  // );\r\n\r\n  const deleteCard = useStoreActions(\r\n    (actions) => actions.layoutsModel.deleteCard\r\n  );\r\n  const addCard = useStoreActions((actions) => actions.layoutsModel.addCard);\r\n\r\n  const setBufferLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.setBufferLayout\r\n  );\r\n  // const set\r\n  const activeLayout = useStoreState(\r\n    (state) => state.layoutsModel.activeLayout\r\n  );\r\n\r\n  const useNextLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.setNextLayout\r\n  );\r\n\r\n  const setActiveLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.setActiveLayout\r\n  );\r\n  const clearCards = useStoreActions(\r\n    (actions) => actions.layoutsModel.clearCards\r\n  );\r\n\r\n  const resetLayout = useStoreActions(\r\n    (actions) => actions.layoutsModel.resetLayout\r\n  );\r\n\r\n  return {\r\n    activeCards,\r\n    activeWidgets,\r\n    setBufferLayout,\r\n    activeLayout,\r\n    deleteCard,\r\n    addCard,\r\n    swapCard,\r\n    // addWidget,\r\n    setActiveLayout,\r\n    useNextLayout,\r\n    clearCards,\r\n    resetLayout,\r\n    externalLayouts,\r\n  };\r\n};\r\nexport const useKeyboardShortcut = ({\r\n  keyCode,\r\n  action,\r\n  disabled,\r\n}: {\r\n  action: (event: KeyboardEvent) => void;\r\n  keyCode: number;\r\n  disabled: boolean;\r\n}): { disable: () => void; enable: () => void } => {\r\n  React.useEffect(() => {\r\n    if (!disabled) {\r\n      enable();\r\n    }\r\n    return () => {\r\n      disable();\r\n    };\r\n  });\r\n\r\n  const enable = () => {\r\n    document.addEventListener(\"keydown\", handleAction);\r\n  };\r\n\r\n  const disable = () => {\r\n    document.removeEventListener(\"keydown\", handleAction);\r\n  };\r\n\r\n  const handleAction = (e: KeyboardEvent) => {\r\n    if (e.keyCode === keyCode) {\r\n      e.preventDefault();\r\n      action(e);\r\n    }\r\n  };\r\n\r\n  return { enable, disable };\r\n};\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent;\r\n\r\nexport function useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  reference: RefObject<T>,\r\n  handler: (event: AnyEvent) => void\r\n): void {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const element = reference?.current;\r\n\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!element || element.contains(event.target as Node)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(`mousedown`, listener);\r\n    document.addEventListener(`touchstart`, listener);\r\n\r\n    return () => {\r\n      // \\\r\n\r\n      document.removeEventListener(`mousedown`, listener);\r\n      document.removeEventListener(`touchstart`, listener);\r\n    };\r\n\r\n    // Reload only if ref or handler changes\r\n  }, [reference, handler]);\r\n}\r\n\r\nexport function useEffectOnce(effect: EffectCallback): void {\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(effect, []);\r\n}\r\n\r\nexport function useTimeout(\r\n  callback: () => void,\r\n  delay: number | null\r\n): { reset: () => void; stop: () => void } {\r\n  const savedCallback = useRef(callback);\r\n  const timeOutReference = useRef<NodeJS.Timeout>();\r\n\r\n  // Remember the latest callback if it changes.\r\n  useLayoutEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    // Don't schedule if no delay is specified.\r\n    // Note: 0 is a valid value for delay.\r\n    if (!delay && delay !== 0) {\r\n      return;\r\n    }\r\n\r\n    const id = setTimeout(() => savedCallback.current(), delay);\r\n    timeOutReference.current = id;\r\n    return () => clearTimeout(id);\r\n  }, [delay]);\r\n\r\n  const reset = useCallback(() => {\r\n    if (timeOutReference.current && delay) {\r\n      clearTimeout(timeOutReference.current);\r\n      timeOutReference.current = setTimeout(savedCallback.current, delay);\r\n    }\r\n  }, [delay]);\r\n\r\n  const stop = useCallback(() => {\r\n    if (timeOutReference.current) {\r\n      clearTimeout(timeOutReference.current);\r\n    }\r\n  }, []);\r\n\r\n  return { reset, stop };\r\n}\r\nexport function useInterval(\r\n  callback: () => void,\r\n  delay: number | null\r\n): { reset: () => void; stop: () => void } {\r\n  const savedCallback = useRef(callback);\r\n  const intervalReference = useRef<NodeJS.Timeout>();\r\n\r\n  // Remember the latest callback if it changes.\r\n  useLayoutEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    // Don't schedule if no delay is specified.\r\n    // Note: 0 is a valid value for delay.\r\n    if (!delay && delay !== 0) {\r\n      return;\r\n    }\r\n\r\n    const id = setInterval(() => savedCallback.current(), delay);\r\n    intervalReference.current = id;\r\n    return () => clearInterval(id);\r\n  }, [delay]);\r\n\r\n  const reset = useCallback(() => {\r\n    if (intervalReference.current && delay) {\r\n      clearInterval(intervalReference.current);\r\n      intervalReference.current = setInterval(savedCallback.current, delay);\r\n    }\r\n  }, [delay]);\r\n\r\n  const stop = useCallback(() => {\r\n    if (intervalReference.current) {\r\n      clearInterval(intervalReference.current);\r\n    }\r\n  }, []);\r\n\r\n  return { reset, stop };\r\n}\r\n\r\nfunction useEventListener<K extends keyof WindowEventMap>(\r\n  eventName: K,\r\n  handler: (event: WindowEventMap[K]) => void\r\n): void;\r\nfunction useEventListener<\r\n  K extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement = HTMLDivElement\r\n>(\r\n  eventName: K,\r\n  handler: (event: HTMLElementEventMap[K]) => void,\r\n  element: RefObject<T>\r\n): void;\r\n\r\nfunction useEventListener<\r\n  KW extends keyof WindowEventMap,\r\n  KH extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement | void = void\r\n>(\r\n  eventName: KW | KH,\r\n  handler: (\r\n    event: WindowEventMap[KW] | HTMLElementEventMap[KH] | Event\r\n  ) => void,\r\n  element?: RefObject<T>\r\n) {\r\n  // Create a ref that stores handler\r\n  const savedHandler = useRef<typeof handler>();\r\n\r\n  useEffect(() => {\r\n    // Define the listening target\r\n    const targetElement: T | Window = element?.current || window;\r\n    if (!(targetElement && targetElement.addEventListener)) {\r\n      return;\r\n    }\r\n\r\n    // Update saved handler if necessary\r\n    if (savedHandler.current !== handler) {\r\n      savedHandler.current = handler;\r\n    }\r\n\r\n    // Create event listener that calls handler function stored in ref\r\n    const eventListener: typeof handler = (event) => {\r\n      // eslint-disable-next-line no-extra-boolean-cast\r\n      if (!!savedHandler?.current) {\r\n        savedHandler.current(event);\r\n      }\r\n    };\r\n\r\n    targetElement.addEventListener(eventName, eventListener);\r\n\r\n    // Remove event listener on cleanup\r\n    return () => {\r\n      targetElement.removeEventListener(eventName, eventListener);\r\n    };\r\n  }, [eventName, element, handler]);\r\n}\r\n\r\n// See: https://usehooks-ts.com/react-hook/use-event-listener\r\n\r\ninterface Size {\r\n  height: number;\r\n  width: number;\r\n}\r\n\r\nexport function useElementSize<T extends HTMLElement = HTMLDivElement>(): [\r\n  (node: T | null) => void,\r\n  Size\r\n] {\r\n  // Mutable values like 'ref.current' aren't valid dependencies\r\n  // because mutating them doesn't re-render the component.\r\n  // Instead, we use a state as a ref to be reactive.\r\n  const [reference, setReference] = useState<T | null>(null);\r\n  const [size, setSize] = useState<Size>({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  // Prevent too many rendering using useCallback\r\n  const handleSize = useCallback(() => {\r\n    setSize({\r\n      width: reference?.offsetWidth || 0,\r\n      height: reference?.offsetHeight || 0,\r\n    });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [reference?.offsetHeight, reference?.offsetWidth]);\r\n\r\n  useEventListener(\"resize\", handleSize);\r\n\r\n  useLayoutEffect(() => {\r\n    handleSize();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [reference?.offsetHeight, reference?.offsetWidth]);\r\n\r\n  return [setReference, size];\r\n}\r\n\r\nexport function useHover<T extends HTMLElement = HTMLElement>(\r\n  elementReference: RefObject<T>\r\n): boolean {\r\n  const [value, setValue] = useState<boolean>(false);\r\n\r\n  const handleMouseEnter = () => setValue(true);\r\n  const handleMouseLeave = () => setValue(false);\r\n\r\n  useEventListener(\"mouseenter\", handleMouseEnter, elementReference);\r\n  useEventListener(\"mouseleave\", handleMouseLeave, elementReference);\r\n\r\n  return value;\r\n}\r\n\r\ninterface WindowSize {\r\n  height: number;\r\n  width: number;\r\n}\r\n\r\nexport function useWindowSize(): WindowSize {\r\n  const [windowSize, setWindowSize] = useState<WindowSize>({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  const handleSize = () => {\r\n    setWindowSize({\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    });\r\n  };\r\n\r\n  useEventListener(\"resize\", handleSize);\r\n\r\n  // Set size at the first client-side load\r\n  useLayoutEffect(() => {\r\n    handleSize();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n\r\ntype Handler = (event: MouseEvent) => void;\r\n\r\nexport function useClickAnyWhere(handler: Handler) {\r\n  useEventListener(\"click\", (event) => {\r\n    handler(event);\r\n  });\r\n}\r\n","import React from \"react\";\nimport type { DropResult } from \"react-beautiful-dnd\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nimport { DragSource } from \"../../enums\";\nimport { useLayout, useStoreState } from \"../../hooks\";\nimport type { CardAddEvent, CardSwapEvent } from \"../../interfaces/CardEvents\";\nimport type { GridPosition } from \"../../interfaces/GridPosition\";\n\n/**\n * Handles all functionality for dragging and dropping content into the layout\n */\n\nconst stringToGridPos = (cardId: string): GridPosition => {\n  //card id's of empty cards is of \"empty_card_[x, y]\" format\n\n  const posString = cardId.split(\"[\")[1];\n  //x,y]\n  const x = Number.parseInt(posString.charAt(0));\n  //x\n  const y = Number.parseInt(posString.charAt(3));\n  //y\n  return {\n    x: x,\n    y: y,\n  } as GridPosition;\n};\n\nconst cardIsEmpty = (cardId: string): boolean => {\n  return cardId.startsWith(\"empty\");\n};\n\nconst AppDragContext = ({\n  children,\n}: {\n  children: JSX.Element | JSX.Element[];\n}): JSX.Element => {\n  const { addCard, swapCard, setActiveLayout } = useLayout();\n\n  const externalLayoutsState = useStoreState(\n    (state) => state.layoutsModel.externalLayouts\n  );\n\n  const onDragEnd = (response: DropResult): void => {\n    if (response.destination?.droppableId == response.source?.droppableId)\n      return;\n    const { source, destination, draggableId } = response;\n\n    if (!destination) return;\n    switch (source.droppableId) {\n      case DragSource.CARD_TABLE:\n        if (destination.droppableId) {\n          if (cardIsEmpty(destination.droppableId)) {\n            const cardPos = stringToGridPos(destination.droppableId);\n            const addEvent = {\n              sourceId: draggableId,\n              targetPosition: cardPos,\n            } as CardAddEvent;\n            addCard(addEvent);\n          } else {\n            swapCard({\n              sourceId: draggableId,\n              targetId: destination.droppableId,\n            } as CardSwapEvent);\n          }\n        }\n        break;\n      case DragSource.WIDGETS_TABLE:\n        const cardPos = stringToGridPos(destination.droppableId);\n        const addEvent = {\n          sourceId: draggableId,\n          targetPosition: cardPos,\n        } as CardAddEvent;\n        addCard(addEvent);\n        break;\n      case DragSource.LAYOUT_TABLE:\n        const newLayout = externalLayoutsState.filter(\n          (l) => l.id === draggableId\n        )[0];\n        setActiveLayout(newLayout);\n        break;\n      default:\n        console.log(\"got unkown drag source\");\n    }\n  };\n\n  return <DragDropContext onDragEnd={onDragEnd}>{children}</DragDropContext>;\n};\n\nexport default AppDragContext;\n","interface AppConfig {\n  /**if there is no url?= parameter,use this url to fetch a backup csv stored in the public folder */\n  backupParentSheetUrl: string;\n  /**default scaling of card content. Useful for high resolution screens. Default value is 1. */\n  defaultIframeScale: number;\n  //scale of content which meant for embedding, i.e. includes \"embed\" in the url\n  defaultEmbedScale: number;\n  //scale for regular web pages\n  showModeSwitchButton: boolean;\n  useStaticLayout: boolean;\n  widgetIds: string[];\n  gridSettings: GridSettings;\n  timers: AppTimers;\n}\n\ninterface AppTimers {\n  /**time for the app to return to display mode after no interactions in edit mode */\n  idleTime: number;\n  //**if no url query is provided for parent sheet, seconds before switching to backup layout */\n  noUrlTimeout: number;\n  //**amount of time a layout is displayed before cycling to the next layout */\n  rotationDuration: number;\n}\n\nconst defaultAppTimers = {\n  idleTime: process.env.NODE_ENV === \"development\" ? 100_000_000 : 10_000_000, //s\n  noUrlTimeout: 10, //s\n  rotationDuration: 100_000, //ms\n};\n\ninterface GridSettings {\n  //**number of rows in the card grid */\n  gridRows: number;\n  //**number of columns in the card grid */\n  gridCols: number;\n  //**bottom padding in px for the card grid */\n  gridBottomPadding: number;\n}\n\nconst defaultGridSettings = {\n  gridRows: 6,\n  gridCols: 4,\n  gridBottomPadding: 50,\n};\n\nconst appConfig: AppConfig = {\n  backupParentSheetUrl: `${process.env.PUBLIC_URL}/backupSheets/BACKUP_PARENT_SHEET.csv`,\n  defaultIframeScale: 0.5,\n  defaultEmbedScale: 1,\n  widgetIds: [\"clock\", \"group label\", \"info\"],\n  showModeSwitchButton: false,\n  useStaticLayout: false,\n  timers: defaultAppTimers,\n  gridSettings: defaultGridSettings,\n};\n\nexport default appConfig;\n","// eslint-disable-next-line simple-import-sort/imports\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  useApp,\r\n  useAppSettings,\r\n  useClickAnyWhere,\r\n  useInterval,\r\n  useLayout,\r\n} from \"../../hooks\";\r\nimport { AppMode } from \"../../enums\";\r\nimport appConfig from \"../../static/appConfig\";\r\nimport { useIdle } from \"react-use\";\r\n\r\nconst AppTimers = ({ children }: { children: JSX.Element }): JSX.Element => {\r\n  const isIdle = useIdle(appConfig.timers.idleTime, false);\r\n  const { rotationSpeed, rotateLayouts } = useAppSettings();\r\n  const { appMode, toggleAppMode, transitionLayout } = useApp();\r\n\r\n  const { reset } = useInterval(() => {\r\n    if (appMode === AppMode.DISPLAY && rotateLayouts) {\r\n      transitionLayout(1);\r\n    }\r\n  }, rotationSpeed);\r\n\r\n  useClickAnyWhere(() => {\r\n    reset();\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (appMode === AppMode.EDIT) {\r\n      toggleAppMode();\r\n    }\r\n  }, [isIdle]);\r\n\r\n  return children;\r\n};\r\n\r\nexport default AppTimers;\r\n","import type GoogleSheet from \"./interfaces/GoogleSheet\";\nimport type SheetId from \"./interfaces/SheetId\";\n\n// export function getSheet<T>(sheetId: SheetId): Promise<GoogleSheet<T>> {\n//   return new Promise<GoogleSheet<T>>(function (resolve, reject) {\n//     fetch(\n//       \"https://spreadsheets.google.com/feeds/list/1wQ1TGqnCTmaqqDak1rTRxPMSGSGLMilwrecf7TuqDGc/1/public/values?alt=json\"\n//     ).then((res) => {\n//       console.log(res);\n//       res.json();\n//     });\n//     // labeledCols(sheetId.key, sheetId.sheet_number)\n//     GetSheetDone.labeledCols(sheetId.key, sheetId.sheet_number)\n//       .then((sheet: GoogleSheet<T>) => {\n//         console.log(sheet);\n//         resolve(sheet);\n//       })\n//       .catch((error: unknown) => {\n//         console.error(\n//           `Error: ${error} fetching DOC_KEY ${sheetId.key}, sheet number ${sheetId.sheet_number}`\n//         );\n//       });\n//   });\n// }\n\nexport function formatDate(date: Date | undefined): string {\n  if (date) {\n    const d = new Date(date);\n    let month = \"\" + (d.getMonth() + 1);\n    let day = \"\" + d.getDate();\n    const year = d.getFullYear().toString().slice(2);\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n\n    return [month, day, year].join(\".\");\n  } else {\n    return \"faulty date\";\n  }\n}\n\n// String.prototype.toTitleCase = function () { return this.valueOf().toLowerCase().replace(this.valueOf()[0], this.valueOf()[0].toUpperCase()); }\nexport function toTitleCase(string: string) {\n  const words = string.split(\" \");\n  return words.map((w) => titleCapitilization(w)).join(\" \");\n}\nfunction titleCapitilization(string: string) {\n  const regex = /^[a-z]{0,1}|\\s\\w/gi;\n\n  string = string.toLowerCase();\n\n  string.match(regex)?.forEach((char) => {\n    string = string.replace(char, char.toUpperCase());\n  });\n\n  return string;\n}\n\nexport function randomIntFromInterval(min: number, max: number) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport function randomNumber(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\n// function\n\n// const toTitleCase = (str: string) => {\n//   const articles = ['a', 'an', 'the'];\n//   const conjunctions = ['for', 'and', 'nor', 'but', 'or', 'yet', 'so'];\n//   const prepositions = [\n//     'with', 'at', 'from', 'into','upon', 'of', 'to', 'in', 'for',\n//     'on', 'by', 'like', 'over', 'plus', 'but', 'up', 'down', 'off', 'near'\n//   ];\n\n//   // The list of spacial characters can be tweaked here\n//   const replaceCharsWithSpace = (str) => str.replace(/[^0-9a-z&/\\\\]/gi, ' ').replace(/(\\s\\s+)/gi, ' ');\n//   const capitalizeFirstLetter = (str) => str.charAt(0).toUpperCase() + str.substr(1);\n//   const normalizeStr = (str) => str.toLowerCase().trim();\n//   const shouldCapitalize = (word, fullWordList, posWithinStr) => {\n//     if ((posWithinStr == 0) || (posWithinStr == fullWordList.length - 1)) {\n//       return true;\n//     }\n\n//     return !(articles.includes(word) || conjunctions.includes(word) || prepositions.includes(word));\n//   }\n\n//   str = replaceCharsWithSpace(str);\n//   str = normalizeStr(str);\n\n//   let words = str.split(' ');\n//   if (words.length <= 2) { // Strings less than 3 words long should always have first words capitalized\n//     words = words.map(w => capitalizeFirstLetter(w));\n//   }\n//   else {\n//     for (let i = 0; i < words.length; i++) {\n//       words[i] = (shouldCapitalize(words[i], words, i) ? capitalizeFirstLetter(words[i], words, i) : words[i]);\n//     }\n//   }\n\n//   return words.join(' ');\n// }\n","const TestShader1 = {\n    uniforms: {\n      time: { value: 0.0 }\n    },\n    vertexShader: `\n    vec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n  \n    float snoise(vec2 v) {\n        const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                            0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                            -0.577350269189626,  // -1.0 + 2.0 * C.x\n                            0.024390243902439); // 1.0 / 41.0\n        vec2 i  = floor(v + dot(v, C.yy) );\n        vec2 x0 = v -   i + dot(i, C.xx);\n        vec2 i1;\n        i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n        vec4 x12 = x0.xyxy + C.xxzz;\n        x12.xy -= i1;\n        i = mod289(i); // Avoid truncation effects in permutation\n        vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n            + i.x + vec3(0.0, i1.x, 1.0 ));\n  \n        vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n        m = m*m ;\n        m = m*m ;\n        vec3 x = 2.0 * fract(p * C.www) - 1.0;\n        vec3 h = abs(x) - 0.5;\n        vec3 ox = floor(x + 0.5);\n        vec3 a0 = x - ox;\n        m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n        vec3 g;\n        g.x  = a0.x  * x0.x  + h.x  * x0.y;\n        g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n        return 130.0 * dot(m, g);\n    }\n  \n  \n    \n  \n    uniform float u_time;\n    uniform vec2 u_randomisePosition;\n  \n    varying float vDistortion;\n    varying float xDistortion;\n    varying vec2 vUv;\n  \n    void main() {\n        vUv = uv;\n        vDistortion = snoise(vUv.xx * 3. - u_randomisePosition * 0.15);\n        xDistortion = snoise(vUv.yy * 1. - u_randomisePosition * 0.05);\n        vec3 pos = position;\n        pos.z += (vDistortion * 35.);\n        pos.x += (xDistortion * 25.);\n  \n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n    }\n    `,\n    fragmentShader: `\n    vec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n    vec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n  \n    float snoise(vec2 v) {\n        const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                            0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                            -0.577350269189626,  // -1.0 + 2.0 * C.x\n                            0.024390243902439); // 1.0 / 41.0\n        vec2 i  = floor(v + dot(v, C.yy) );\n        vec2 x0 = v -   i + dot(i, C.xx);\n        vec2 i1;\n        i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n        vec4 x12 = x0.xyxy + C.xxzz;\n        x12.xy -= i1;\n        i = mod289(i); // Avoid truncation effects in permutation\n        vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n            + i.x + vec3(0.0, i1.x, 1.0 ));\n  \n        vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n        m = m*m ;\n        m = m*m ;\n        vec3 x = 2.0 * fract(p * C.www) - 1.0;\n        vec3 h = abs(x) - 0.5;\n        vec3 ox = floor(x + 0.5);\n        vec3 a0 = x - ox;\n        m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n        vec3 g;\n        g.x  = a0.x  * x0.x  + h.x  * x0.y;\n        g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n        return 130.0 * dot(m, g);\n    }\n  \n  \n  \n  \n  \n    vec3 rgb(float r, float g, float b) {\n      return vec3(r / 255., g / 255., b / 255.);\n  }\n  \n  vec3 rgb(float c) {\n      return vec3(c / 255., c / 255., c / 255.);\n  }\n  \n  uniform vec3 u_bg;\n  uniform vec3 u_bgMain;\n  uniform vec3 u_color1;\n  uniform vec3 u_color2;\n  uniform float u_time;\n  \n  varying vec2 vUv;\n  varying float vDistortion;\n  \n  void main() {\n      vec3 bg = rgb(u_bg.r, u_bg.g, u_bg.b);\n      vec3 c1 = rgb(u_color1.r, u_color1.g, u_color1.b);\n      vec3 c2 = rgb(u_color2.r, u_color2.g, u_color2.b);\n      vec3 bgMain = rgb(u_bgMain.r, u_bgMain.g, u_bgMain.b);\n  \n      float noise1 = snoise(vUv + u_time * 0.08);\n      float noise2 = snoise(vUv * 2. + u_time * 0.1);\n  \n      vec3 color = bg;\n      color = mix(color, c1, noise1 * 0.6);\n      color = mix(color, c2, noise2 * .4);\n  \n      color = mix(color, mix(c1, c2, vUv.x), vDistortion);\n  \n      float border = smoothstep(0.1, 0.6, vUv.x);\n  \n      color = mix(color, bgMain, 1. -border);\n  \n      gl_FragColor = vec4(color, 1.0);\n  }\n    `\n  }\n  \n  export default TestShader1","import { OrbitControls, PerspectiveCamera } from \"@react-three/drei\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport React, { useRef } from \"react\";\nimport * as THREE from \"three\";\n\nimport { randomIntFromInterval } from \"../../utils\";\nimport TestShader1 from \"./TestShader1\";\n\nvar randomisePosition = new THREE.Vector2(1, 2);\n\nfunction rgb(r, g, b) {\n  return new THREE.Vector3(r, g, b);\n}\n\nconst segmentsResolution = 45;\n\nconst baseColors = {\n  pink: rgb(182, 9, 76),\n  brightPink: rgb(241, 3, 66),\n  darkPurple: rgb(42, 8, 56),\n  orange: rgb(244, 93, 31),\n  darkgrey: rgb(50, 50, 50),\n  lightgrey: rgb(150, 150, 150),\n  red: rgb(204, 0, 0),\n};\n\nconst uniforms = {\n  u_bg: { type: \"v3\", value: baseColors.lightgrey },\n  u_bgMain: { type: \"v3\", value: baseColors.lightgrey },\n  u_color1: { type: \"v3\", value: baseColors.lightgrey },\n  u_color2: { type: \"v3\", value: baseColors.lightgrey },\n  u_time: { type: \"f\", value: 0 },\n  u_randomisePosition: { type: \"v2\", value: randomisePosition },\n};\nconst R = function (x, y, t) {\n  return Math.floor(192 + 64 * Math.cos((x * x - y * y) / 300 + t));\n};\n\nconst G = function (x, y, t) {\n  return Math.floor(\n    192 +\n      64 * Math.sin((x * x * Math.cos(t / 4) + y * y * Math.sin(t / 3)) / 300)\n  );\n};\n\nconst B = function (x, y, t) {\n  return Math.floor(\n    192 +\n      64 *\n        Math.sin(\n          5 * Math.sin(t / 9) +\n            ((x - 100) * (x - 100) + (y - 100) * (y - 100)) / 1100\n        )\n  );\n};\n\nconst ShadedGeometry1 = ({ position }) => {\n  const shaderMaterialRef = useRef();\n  let t = 0;\n  let j = 0;\n\n  let x = randomIntFromInterval(0, 32);\n  let y = randomIntFromInterval(0, 32);\n  let vCheck = false;\n\n  useFrame(({ clock }) => {\n    shaderMaterialRef.current.uniforms.u_randomisePosition.value =\n      new THREE.Vector2(j, j);\n    shaderMaterialRef.current.uniforms.u_color1.value = new THREE.Vector3(\n      R(x, y, t / 2),\n      G(x, y, t / 2),\n      B(x, y, t / 2)\n    );\n\n    shaderMaterialRef.current.uniforms.u_time.value = t;\n    if (t % 0.1 === 0) {\n      if (vCheck === false) {\n        x -= 1;\n        if (x <= 0) {\n          vCheck = true;\n        }\n      } else {\n        x += 1;\n        if (x >= 32) {\n          vCheck = false;\n        }\n      }\n    }\n    // Increase t by a certain value every frame\n    j = j + 0.01;\n    t = t + 0.01;\n  });\n\n  return (\n    <mesh\n      position={position}\n      rotation={[\n        THREE.MathUtils.degToRad(0),\n        THREE.MathUtils.degToRad(0),\n        THREE.MathUtils.degToRad(90),\n      ]}\n    >\n      <planeGeometry\n        attach=\"geometry\"\n        args={[\n          400,\n          window.innerWidth / 2,\n          segmentsResolution,\n          segmentsResolution,\n        ]}\n      />\n      <shaderMaterial\n        attach=\"material\"\n        vertexShader={TestShader1.vertexShader}\n        fragmentShader={TestShader1.fragmentShader}\n        uniforms={uniforms}\n        ref={shaderMaterialRef}\n      />\n    </mesh>\n  );\n};\n\nconst BackgroundShader = () => {\n  const cam = useRef();\n  return (\n    <Canvas gl={{ antialias: false, alpha: false }}>\n      <PerspectiveCamera\n        ref={cam}\n        position={[0, 0, 0]}\n        fov={75}\n        aspect={window.innerWidth / window.innerHeight}\n        near={0.1}\n        far={1000}\n      />\n      <ShadedGeometry1 position={[0, 0, -100]} faceResolution={100} />\n      <OrbitControls />\n    </Canvas>\n  );\n};\n\nexport default BackgroundShader;\n","import \"../css/background.css\";\n\nimport classNames from \"classnames\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { AppMode } from \"../enums\";\nimport { useApp } from \"../hooks\";\nimport BackgroundShader from \"./Background/BackgroundShader\";\n\nconst Background = (): JSX.Element => {\n  const { appMode } = useApp();\n\n  const [backgroundStyle, setBackgroundStyle] = useState({\n    backgroundColor: \"gray\",\n  } as React.CSSProperties);\n  useEffect(() => {\n    const style = {\n      position: \"absolute\",\n      height: \"100vh\",\n      width: \"100vw\",\n      top: 0,\n      left: 0,\n      backgroundColor: appMode === AppMode.EDIT ? \"#2d2d2d\" : \"gray\",\n      transition: \"background-color 0.5s ease\",\n    } as React.CSSProperties;\n    setBackgroundStyle(style);\n  }, [appMode]);\n\n  const backgroundClass = classNames(\"background-container\", {\n    \"background-container-display-mode\": appMode == AppMode.DISPLAY,\n    \"background-container-edit-mode\": appMode == AppMode.EDIT,\n  });\n\n  const bgFillSolid = {\n    position: \"absolute\",\n    height: \"100vh\",\n    width: \"100vw\",\n    top: 0,\n    left: 0,\n    backgroundColor: \"lightgrey\",\n    transition: \"background-color 0.5s ease\",\n  } as React.CSSProperties;\n\n  return ReactDOM.createPortal(\n    <div className={backgroundClass} style={backgroundStyle}>\n      {appMode === AppMode.EDIT ? (\n        <div style={bgFillSolid}></div>\n      ) : (\n        <div className=\"background-container\">\n          <div className=\"shader-container\">\n            <BackgroundShader />\n          </div>\n          <div className=\"particle-container\"></div>\n        </div>\n      )}\n    </div>,\n    document.querySelector(\"#background\") as HTMLElement\n  );\n};\n\nexport default React.memo(Background);\n","import React, { useEffect, useRef,useState } from \"react\";\r\n\r\nimport { CardView } from \"../../enums\";\r\nimport { useAppSettings } from \"../../hooks\";\r\nimport type { CardContentProperties } from \"../CardContent\";\r\n\r\ntype CardIFrameProperties = Pick<\r\n  CardContentProperties,\r\n  \"onLoad\" | \"onError\" | \"cardSettings\" | \"card\" | \"cardView\"\r\n>;\r\n\r\nconst CardIFrame = ({\r\n  onLoad,\r\n  onError,\r\n  card,\r\n  cardSettings,\r\n  cardView,\r\n}: CardIFrameProperties): JSX.Element => {\r\n  const { enableIframeInteractions } = useAppSettings();\r\n  //   const { scale } = cardSettings;\r\n  const scale = cardSettings?.scale ?? 1;\r\n  const { src } = card;\r\n  return (\r\n    <iframe\r\n      onError={(event) => {\r\n        onError(event, card);\r\n      }}\r\n      onLoad={(event) => {\r\n        onLoad(event, card);\r\n      }}\r\n      src={src}\r\n      style={{\r\n        transform: `scale(${scale})`,\r\n        pointerEvents: enableIframeInteractions ? \"all\" : \"none\",\r\n        width: `${100 * (1 / scale)}%`,\r\n        height: `${100 * (1 / scale)}%`,\r\n        transformOrigin: \"top left\",\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default CardIFrame;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { CardView } from \"../../enums\";\r\nimport type { CardContentProperties } from \"../CardContent\";\r\n\r\ntype CardImageProperties = Pick<\r\n  CardContentProperties,\r\n  \"onLoad\" | \"onError\" | \"cardSettings\" | \"card\" | \"cardView\"\r\n>;\r\n\r\nconst CardImage = ({\r\n  onLoad,\r\n  onError,\r\n  card,\r\n  cardSettings,\r\n  cardView,\r\n}: CardImageProperties): JSX.Element => {\r\n  const { src } = card;\r\n  return (\r\n    <img\r\n      onError={(event) => {\r\n        onError(event, card);\r\n      }}\r\n      onLoad={(event) => {\r\n        // setIsLoaded(true);\r\n        onLoad(event, card);\r\n      }}\r\n      src={src}\r\n      style={{\r\n        transform: `scale(${cardSettings?.scale ?? 1})`,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        //@ts-ignore\r\n        objectFit: cardSettings?.contentFit ?? \"cover\",\r\n        objectPosition: cardView === CardView.PREVIEW ? \"contain\" : \"center\",\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default CardImage;\r\n","import \"../css/iframeView.css\";\r\n\r\nimport classNames from \"classnames\";\r\nimport type { FC } from \"react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport type { ReactPlayerProps } from \"react-player\";\r\nimport _ReactPlayer from \"react-player\"; // https://github.com/cookpete/react-player/issues/1436\r\n\r\nimport type CardData from \"../data_structs/CardData\";\r\nimport type { CardView } from \"../enums\";\r\nimport type { CardSettings } from \"../interfaces/CardSettings\";\r\nimport CardIFrame from \"./CardContent/CardIFrame\";\r\nimport CardImage from \"./CardContent/CardImage\";\r\nimport type {\r\n  CardErrorHandler,\r\n  CardLoadHandler,\r\n} from \"./CardLayout/ViewCard/ViewCard\";\r\n\r\nconst ReactPlayer = _ReactPlayer as unknown as React.FC<ReactPlayerProps>;\r\n\r\nexport interface CardContentProperties {\r\n  card: CardData;\r\n  cardSettings?: CardSettings;\r\n  cardView: CardView;\r\n  objectFit?: string;\r\n  onError: CardErrorHandler;\r\n  onLoad: CardLoadHandler;\r\n  scale: number;\r\n}\r\n/**\r\n * Minimal warpper for an <iframe>. Can be toggled between a full screen, active view, and a regular card view.\r\n * @component\r\n * @example\r\n * const my_url = \"https://www.youtube.com/embed/tgbNymZ7vqY\";\r\n * return(\r\n *  <IFrameView src = {my_url}/>\r\n * )\r\n */\r\nconst IFrameView: FC<CardContentProperties> = ({\r\n  card,\r\n  scale,\r\n  cardView,\r\n  onError,\r\n  onLoad,\r\n  objectFit,\r\n  cardSettings,\r\n}) => {\r\n  const [active, setActive] = useState(false);\r\n  const [valid, setIsValid] = useState(true);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const indexFrameContainerClass = classNames(\"iframe-container\", {\r\n    \"iframe-container-hidden\": !valid,\r\n  });\r\n\r\n  useEffect(() => {}, [cardView]);\r\n\r\n  // const qrContainerStyle = {\r\n  //   width: \"100%\",\r\n  //   position: \"absolute\",\r\n  //   top: 0,\r\n  //   left: 0,\r\n  //   zIndex: 10,\r\n  // } as React.CSSProperties;\r\n\r\n  const { src, contentType } = card;\r\n\r\n  return (\r\n    <div\r\n      className={indexFrameContainerClass}\r\n      onDoubleClick={() => {\r\n        setActive(!active);\r\n      }}\r\n    >\r\n      {contentType === \"video\" ? (\r\n        <ResponsivePlayer\r\n          onReady={(event) => {\r\n            setIsLoaded(true);\r\n          }}\r\n          src={src}\r\n        />\r\n      ) : contentType === \"image\" ? (\r\n        <CardImage\r\n          card={card}\r\n          cardSettings={cardSettings}\r\n          cardView={cardView}\r\n          onError={onError}\r\n          onLoad={onLoad}\r\n        />\r\n      ) : (\r\n        <CardIFrame\r\n          card={card}\r\n          cardSettings={cardSettings}\r\n          cardView={cardView}\r\n          onError={onError}\r\n          onLoad={onLoad}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(IFrameView);\r\n\r\nconst ResponsivePlayer = ({\r\n  src,\r\n  onReady,\r\n}: {\r\n  onReady: (e: _ReactPlayer) => void;\r\n  src: string;\r\n}): JSX.Element => {\r\n  return (\r\n    <div className=\"player-wrapper\">\r\n      <ReactPlayer\r\n        className=\"react-player\"\r\n        controls\r\n        height=\"100%\"\r\n        muted\r\n        onReady={onReady}\r\n        playing\r\n        url={src}\r\n        width=\"100%\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import \"../../css/pulsar.css\";\r\n\r\nimport { AddIcon } from \"evergreen-ui\";\r\nimport React from \"react\";\r\ninterface PulsarProperties {}\r\n\r\nconst Pulsar = () => {\r\n  return (\r\n    <div className=\"pulsar\">\r\n      <AddIcon size={150}></AddIcon>\r\n      {/* <div className={\"ring\"}></div> */}\r\n      {/* <div className={\"ring\"}></div>\r\n      <div className={\"ring\"}></div>\r\n      <div className={\"ring\"}></div>\r\n      <div className={\"ring\"}></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pulsar;\r\n","import \"../../css/droppable.css\";\n\nimport { AddIcon } from \"evergreen-ui\";\nimport type { FC, ReactNode } from \"react\";\nimport React, { useEffect } from \"react\";\nimport type { DroppableProps } from \"react-beautiful-dnd\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nimport type { DndTypes } from \"../../enums\";\nimport Pulsar from \"../Shared/Pulsar\";\ninterface IXDrop extends Omit<DroppableProps, \"children\"> {\n  children: ReactNode;\n  cardType: DndTypes;\n  className?: string;\n}\n\n/**A droppable container. Wraps child widgets in a react-beautiful-dnd Droppable component, and renders a \"+\" if a draggable is dragging over the container */\nconst IXDrop: FC<IXDrop> = ({\n  children,\n  className,\n  cardType,\n  ...properties\n}) => {\n  return (\n    <Droppable {...properties} type=\"DEFAULT\">\n      {(provided, snapshot) => {\n        return (\n          <div\n            {...provided.innerRef}\n            className={\n              snapshot.isDraggingOver\n                ? \"droppable-hovered\" + \" \" + className\n                : \"droppable\" + \" \" + className\n            }\n            ref={provided.innerRef}\n          >\n            <div\n              className={\n                snapshot.isDraggingOver\n                  ? \"droppable-overlay droppable-overlay-visible\"\n                  : \"droppable-overlay droppable-overlay-hidden\"\n              }\n            >\n              <Pulsar />\n            </div>\n            {children}\n            {provided.placeholder}\n          </div>\n        );\n      }}\n    </Droppable>\n  );\n};\n\nexport default IXDrop;\n","import \"../../css/clock.css\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n/**\r\n * Simple clock widget for displaying the current time.\r\n */\r\nconst Clock = (): JSX.Element => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const containerStyle = {\r\n    boxSizing: \"border-box\",\r\n    color: \"white\",\r\n    fontWeight: 600,\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n    padding: \"3vmin\",\r\n    width: \"100%\",\r\n  } as React.CSSProperties;\r\n\r\n  useEffect(() => {\r\n    const timerID = setInterval(() => tick(), 1000);\r\n    return function cleanup() {\r\n      clearInterval(timerID);\r\n    };\r\n  });\r\n\r\n  function tick(): void {\r\n    setDate(new Date());\r\n  }\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div style={{ color: \"white\", fontSize: \"8vmin\" }}>\r\n        Data Experience Lab\r\n      </div>\r\n      <div style={{ color: \"white\", fontSize: \"8vmin\" }}>\r\n        {date.toLocaleTimeString(\"en-IT\", { hour12: true, timeStyle: \"short\" })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","//TODO: UNIFY MODAL CSS\nimport \"../../css/howToUse.css\";\nimport \"../../css/popup.css\";\n\nimport { motion } from \"framer-motion\";\nimport React, { useEffect,useRef, useState } from \"react\";\n\nconst Modal = ({\n  children,\n  active,\n  containerClassName,\n  onClose,\n  backdropOpacity,\n}: {\n  active: boolean;\n  children: JSX.Element | JSX.Element[];\n\n  onClose: () => void;\n  backdropOpacity?: number;\n  containerClassName?: string;\n}): JSX.Element => {\n  return (\n    <motion.div\n      animate={{ y: 0 }}\n      className=\"modal-container\"\n      style={{\n        display: active ? \"flex\" : \"none\",\n        width: \"100vw\",\n        height: \"100vh\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        // y: -200,\n      }}\n    >\n      <MyBackdrop backdropOpacity={backdropOpacity ?? 0} onClose={onClose} />\n      <div className={containerClassName} style={{ zIndex: 1000 }}>\n        {children}\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Modal;\n\ninterface BackdropProperties {\n  backdropOpacity: number;\n  onClose: () => void;\n}\nconst MyBackdrop = ({ onClose, backdropOpacity }: BackdropProperties) => {\n  return (\n    <div\n      className=\"pop-up-background\"\n      onMouseUp={onClose}\n      style={{ opacity: backdropOpacity, zIndex: 200 }}\n    ></div>\n  );\n};\n","import \"../../css/panel.css\";\n\nimport { AddIcon } from \"evergreen-ui\";\nimport React from \"react\";\n\ninterface PanelProperties{\n    children: JSX.Element | JSX.Element[]\n    padding?: string;\n    flexDirection?: \"column\" | \"row\"; \n    className?: string;\n\n}\n\nconst Panel = ({children, className, padding, flexDirection}:PanelProperties): JSX.Element => {\n  const panelStyle = {\n      padding: padding??\"0em\",\n      flexDirection: flexDirection??\"column\"\n  } as React.CSSProperties\n\n  return (\n    <div className={\"panel\"+ \" \" + className??\"\"} style = {panelStyle}>\n        {children}\n    </div>\n  );\n};\n\nexport default Panel;\n","import \"../../css/howToUse.css\";\n\nimport { Heading, Text } from \"evergreen-ui\";\nimport { motion } from \"framer-motion\";\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Modal from \"../Shared/Modal\";\nimport Panel from \"../Shared/Panel\";\n\nconst HowToUsePopUp = ({\n  active,\n  onClose,\n}: {\n  active: boolean;\n  onClose: () => void;\n}): JSX.Element => {\n  const variants = {\n    hidden: {\n      y: 100,\n      opacity: 0,\n    },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.5,\n      },\n    },\n  };\n\n  useEffect(() => {\n    console.log(active);\n  }, [active]);\n  return ReactDOM.createPortal(\n    <Modal\n      active={active}\n      // containerClassName=\"how-to-use-popup\"\n      backdropOpacity={0}\n      onClose={onClose}\n    >\n      <motion.div\n        animate={active ? \"visible\" : \"hidden\"}\n        style={{\n          width: \"30vw\",\n          height: \"80vh\",\n          backgroundColor: \"white\",\n          borderRadius: 10,\n          padding: \"1em\",\n        }}\n        variants={variants}\n      >\n        <Panel>\n          <Heading>Connect Labtop</Heading>\n          <hr></hr>\n          <Text>Connect your labtop to use this screen as a display.</Text>\n          <img\n            className=\"how-to-image\"\n            src={process.env.PUBLIC_URL + \"/labtopdiagram.png\"}\n          />\n          <Heading>Explore Content</Heading>\n          <hr></hr>\n          <Text>Click on a card to explore data related content.</Text>\n          <img\n            className=\"how-to-image\"\n            src={process.env.PUBLIC_URL + \"/masonary.png\"}\n          />\n        </Panel>\n      </motion.div>\n    </Modal>,\n    document.querySelector(\"#popup-container\") as HTMLDivElement\n  );\n};\n\nexport default HowToUsePopUp;\n","import type { ButtonAppearance, IntentTypes } from \"evergreen-ui\";\r\nimport { Button as EverGreenButton } from \"evergreen-ui\";\r\nimport React from \"react\";\r\n\r\n/**\r\n * Wraps an Evergreen UI Button, providing it with an onClick property.\r\n */\r\n\r\ninterface ButtonProperties {\r\n  onClick: React.MouseEventHandler<HTMLDivElement>;\r\n  text?: string;\r\n  appearance?: ButtonAppearance;\r\n  className?: string;\r\n  iconBefore?: JSX.Element;\r\n  width?: number | string;\r\n  height?: number | string;\r\n  containerClass?: string;\r\n  style?: React.CSSProperties;\r\n  fontSize?: string;\r\n  intent?: IntentTypes;\r\n}\r\nconst Button = ({\r\n  onClick,\r\n  text,\r\n  appearance,\r\n  className,\r\n  iconBefore,\r\n  width,\r\n  height,\r\n  style,\r\n  containerClass,\r\n  fontSize,\r\n  intent,\r\n}: ButtonProperties): JSX.Element => {\r\n  return (\r\n    <div\r\n      className={containerClass}\r\n      onMouseUp={onClick}\r\n      style={{ width: width, height: \"100%\" }}\r\n    >\r\n      <EverGreenButton\r\n        appearance={appearance ?? \"default\"}\r\n        //use evergreen's default button with if no width is provided\r\n        className={className}\r\n        cursor=\"pointer\"\r\n        fontSize={fontSize}\r\n        height={height ?? undefined}\r\n        iconBefore={iconBefore ?? undefined}\r\n        intent={intent ?? \"none\"}\r\n        style={style}\r\n        width={width ?? undefined}\r\n      >\r\n        {text}\r\n      </EverGreenButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import \"../../css/clock.css\";\n\nimport { HandUpIcon } from \"evergreen-ui\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { AppMode } from \"../../enums\";\nimport { useApp, useToggle } from \"../../hooks\";\nimport HowToUsePopUp from \"../HowToUse/HowToUsePopUp\";\nimport Button from \"../Shared/Button\";\n\n/**\n * Simple clock widget for displaying the current time.\n * @component\n */\nconst HowToUse = (): JSX.Element => {\n  const [date, setDate] = useState(new Date());\n\n  const containerStyle = {\n    height: \"100%\",\n    // padding: \".25em\",\n    width: \"100%\",\n    fontSize: \"9vmin\",\n    fontWeight: 600,\n    color: \"white\",\n    boxSizing: \"border-box\",\n    backgroundColor: \"blue\",\n  } as React.CSSProperties;\n\n  const [visible, toggleVisible] = useToggle(false);\n\n  useEffect(() => {\n    const timerID = setInterval(() => tick(), 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n\n  function tick(): void {\n    setDate(new Date());\n  }\n\n  const { appMode } = useApp();\n\n  return (\n    <div id=\"how-to-use-button-widget\" style={containerStyle}>\n      {/* {appMode === AppMode.DISPLAY && ( */}\n      <HowToUsePopUp active={visible} onClose={toggleVisible} />\n      {/* )} */}\n      {/* {appMode === AppMode.DISPLAY && ( */}\n      <Button\n        appearance=\"primary\"\n        className=\"how-to-use-button\"\n        fontSize=\"xx-large\"\n        // height=\"4vh\"\n        height=\"100%\"\n        iconBefore={<HandUpIcon />}\n        onClick={toggleVisible}\n        // width=\"35vw\"\n        text=\"Learn how to use this display\"\n        width=\"100%\"\n      />\n      {/* )} */}\n    </div>\n  );\n};\n\nexport default HowToUse;\n","import React from \"react\";\r\n\r\nimport type { WidgetType } from \"../../data_structs/WidgetData\";\r\nimport type WidgetData from \"../../data_structs/WidgetData\";\r\nimport type { CardSettings } from \"../../interfaces/CardSettings\";\r\nimport Clock from \"./Clock\";\r\nimport HowToUse from \"./HowToUse\";\r\n\r\nconst WidgetRenderer = ({\r\n  widget,\r\n  scale,\r\n  colWidth,\r\n  rowHeight,\r\n  cardSettings,\r\n}: {\r\n  widget: WidgetData;\r\n  scale?: number;\r\n  colWidth?: number;\r\n  rowHeight?: number;\r\n  cardSettings?: CardSettings;\r\n}): JSX.Element => {\r\n  const renderWidget = (widgetId: WidgetType) => {\r\n    let widg = <div></div>;\r\n    switch (widgetId) {\r\n      case \"clock\":\r\n        widg = <Clock />;\r\n        break;\r\n      case \"info\":\r\n        widg = <HowToUse />;\r\n        break;\r\n      default:\r\n        widg = <div></div>;\r\n    }\r\n\r\n    return widg;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card-display\"\r\n      style={{\r\n        width: colWidth ? widget.w * colWidth : \"100%\",\r\n        height: rowHeight ? widget.h * rowHeight : \"100%\",\r\n        transform: `scale(${scale})`,\r\n        transformOrigin: \"top left\",\r\n        borderRadius: \".5em\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      {renderWidget(widget.id)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WidgetRenderer;\r\n","import type { ReactNode } from \"react\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport type CardData from \"../../../data_structs/CardData\";\r\nimport type WidgetData from \"../../../data_structs/WidgetData\";\r\nimport { useCardEditor } from \"../../../hooks\";\r\nimport type { CardSettings } from \"../../../interfaces/CardSettings\";\r\n\r\nconst CardBackdrop = ({\r\n  children,\r\n  card,\r\n  cardSettings,\r\n}: {\r\n  cardSettings?: CardSettings;\r\n  children: ReactNode;\r\n  card: WidgetData | CardData;\r\n}): JSX.Element => {\r\n  const { editingCard } = useCardEditor();\r\n  return (\r\n    <div\r\n      className=\"card-backdrop\"\r\n      style={{\r\n        overflow: \"hidden\",\r\n        borderRadius: \"0.5em\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundColor: cardSettings?.backgroundColor ?? \"\",\r\n        boxShadow: \"0 8px 32px 0 rgba(49, 49, 49, 0.37)\",\r\n        border:\r\n          card.id === editingCard?.id\r\n            ? \"3px solid white\"\r\n            : \"1px solid rgba(255, 255, 255, 0.294)\",\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardBackdrop;\r\n","import \"../../../css/cardInfo.css\"\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nimport type CardData from \"../../../data_structs/CardData\";\r\n/**\r\n * Formats text from a CardData object, including it's title and source url.\r\n * @component\r\n */\r\nconst CardInfo = ({\r\n  data,\r\n  className,\r\n}: {\r\n  data: CardData;\r\n  className: string;\r\n}): JSX.Element => {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const titleStyle = {\r\n    // fontSize: \"large\",\r\n  };\r\n  return (\r\n    <div className=\"card-footer\">\r\n        <h2 style={titleStyle}>{data.title}</h2>\r\n        {/* <a>{data.src}</a> */}\r\n        <p>\r\n          Lorem Ipsum is simply dummy text of the printing and typesetting\r\n          industry. Lorem Ipsum has been the industry&apos standard dummy text\r\n          ever since the 1500s, when an unknown printer took a galley of type\r\n          and scrambled it to make a type specimen book{\" \"}\r\n        </p>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default CardInfo;\r\n","import { motion } from \"framer-motion\";\r\nimport React from \"react\";\r\n\r\nimport type CardData from \"../../../data_structs/CardData\";\r\nimport type WidgetData from \"../../../data_structs/WidgetData\";\r\nimport { AppMode } from \"../../../enums\";\r\nimport { useApp } from \"../../../hooks\";\r\nimport { randomNumber } from \"../../../utils\";\r\n\r\nconst CardMotionWrapper = ({\r\n  children,\r\n  animation,\r\n  card,\r\n  backgroundColor,\r\n}: {\r\n  card: WidgetData | CardData;\r\n  animation: string;\r\n  children: JSX.Element | JSX.Element[] | undefined;\r\n  backgroundColor: string;\r\n}): JSX.Element => {\r\n  const variants = {\r\n    active: {\r\n      opacity: 1,\r\n      transition: {\r\n        delay: randomNumber(0.4, 0.5),\r\n        duration: 0.5,\r\n      },\r\n    },\r\n    preview: {\r\n      opacity: 1,\r\n      transition: {\r\n        duration: 0.2,\r\n      },\r\n    },\r\n    none: {\r\n      opacity: 1,\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n    error: {\r\n      backgroundColor: \"red\",\r\n    },\r\n    loaded: {\r\n      opacity: 1,\r\n      transition: {\r\n        delay: randomNumber(0.4, 0.5),\r\n        duration: 0.5,\r\n      },\r\n      x: 0,\r\n    },\r\n    out: {\r\n      y: randomNumber(-50, -75),\r\n      opacity: 0,\r\n      transition: {\r\n        delay: randomNumber(0.1, 0.5),\r\n        duration: 0.5,\r\n      },\r\n    },\r\n  };\r\n\r\n  const { appMode } = useApp();\r\n\r\n  return (\r\n    <motion.div\r\n      animate={animation}\r\n      initial={card?.contentType === \"widget\" ? \"loaded\" : \"\"}\r\n      layoutId=\"viewcard\"\r\n      style={{\r\n        // boxShadow: \"0 8px 32px 0 rgba(49, 49, 49, 0.37)\",\r\n        // border: \"1px solid rgba(255, 255, 255, 0.294)\",\r\n        // transformOrigin: \"center\",\r\n        // willChange: \"transform\",\r\n        // height: \"100%\",\r\n        // backgroundColor: backgroundColor,\r\n        opacity: appMode === AppMode.DISPLAY ? 0 : 1,\r\n        y: 0,\r\n      }}\r\n      variants={variants}\r\n    >\r\n      {children}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default CardMotionWrapper;\r\n","import \"../../../css/deleteButton.css\";\n\nimport { DeleteIcon } from \"evergreen-ui\";\nimport React from \"react\";\n\ninterface DeleteButtonProperties {\n    action: ()=>void;\n    onClick: React.MouseEventHandler<HTMLDivElement>;\n  }\n  \n\nconst DeleteButton = ({ onClick, action }: DeleteButtonProperties): JSX.Element => {\n    return (\n      <div\n        className=\"delete-button-container\"\n        onClick={onClick}\n        onMouseUp={onClick}\n        onTouchEnd={(e)=>{action}}\n      >\n        <div\n          // onClick={onClick}\n        style={{display: \"flex\"}}\n        >\n          <DeleteIcon size={30} />\n        </div>\n      </div>\n    );\n  };\n  \n\n  export default DeleteButton","import \"../../../css/card/settingsButton.css\";\n\nimport { CogIcon, Popover } from \"evergreen-ui\";\nimport React, { useRef } from \"react\";\n\nimport SettingsMenu from \"../../EditorPanel/SettingsMenu\";\n\nconst SettingsButton = ({\n  onClick,\n}: {\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}): JSX.Element => {\n  return (\n    <div\n      // className=\"settings-button-container\"\n      onMouseUp={onClick}\n      style={{\n        position: \"absolute\",\n        /* top: -2em; */\n        bottom: \"40%\",\n        left: 0,\n        width: 40,\n        height: 40,\n        // width: \"20px !important\",\n        // height: \"20px !important\",\n        borderRadius: \"50%\",\n        overflow: \"hidden\",\n        boxShadow: \"var(--shadow)\",\n        zIndex: 100,\n        background: \"white\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        display: \"flex\",\n        transform: \"translate(-50%, 0px)\",\n      }}\n    >\n      <div\n        //   onClick={onClick}\n        style={{ display: \"flex\" }}\n      >\n        <CogIcon size={30} />\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsButton;\n","import \"../../../css/viewCard.css\";\r\n\r\nimport classNames from \"classnames\";\r\nimport type { Action, Thunk } from \"easy-peasy\";\r\nimport { action, thunk, useLocalStore } from \"easy-peasy\";\r\nimport type { FC, MouseEventHandler, ReactNode, SyntheticEvent } from \"react\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport type { Layouts } from \"react-grid-layout\";\r\nimport QRCode from \"react-qr-code\";\r\n\r\nimport type CardData from \"../../../data_structs/CardData\";\r\nimport type WidgetData from \"../../../data_structs/WidgetData\";\r\nimport type { DndTypes } from \"../../../enums\";\r\nimport { AppMode, CardView } from \"../../../enums\";\r\nimport {\r\n  useApp,\r\n  useCardEditor,\r\n  useKeyboardShortcut,\r\n  useLayout,\r\n  useOnClickOutside,\r\n  useStoreState,\r\n} from \"../../../hooks\";\r\nimport type { CardSettings } from \"../../../interfaces/CardSettings\";\r\nimport Button from \"../../Shared/Button\";\r\nimport CardBackdrop from \"./CardBackdrop\";\r\nimport CardInfo from \"./CardInfo\";\r\nimport CardMotionWrapper from \"./CardMotionWrapper\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport SettingsButton from \"./SettingsButton\";\r\n/**\r\n * Wraps each of the cards in the card layouts.\r\n */\r\nexport interface CardModel {\r\n  cardBackgroundColor: string;\r\n  cardType: DndTypes;\r\n  cardView: CardView;\r\n  handleCardPress: Thunk<CardModel>;\r\n  scale: number;\r\n  setBackgroundColor: Action<CardModel, string>;\r\n  setCardView: Action<CardModel, CardView>;\r\n  setScale: Action<CardModel, number>;\r\n  setShowMenu: Action<CardModel, boolean>;\r\n  showMenu: boolean;\r\n  toggleMenu: Action<CardModel>;\r\n}\r\n\r\nexport type CardErrorHandler = (\r\n  event: SyntheticEvent<HTMLDivElement | HTMLIFrameElement | HTMLImageElement>,\r\n  card: CardData\r\n) => void;\r\nexport type CardLoadHandler = (\r\n  event: SyntheticEvent<HTMLDivElement | HTMLIFrameElement | HTMLImageElement>,\r\n  card: CardData\r\n) => void;\r\n\r\ninterface ViewCardProperties {\r\n  cardId?: string;\r\n  cardSettings?: CardSettings;\r\n  cardType: DndTypes;\r\n  children?: (\r\n    scale: number,\r\n    cardView: CardView,\r\n    onError: CardErrorHandler,\r\n    onLoad: CardLoadHandler,\r\n    cardSettings: CardSettings\r\n  ) => ReactNode;\r\n  data?: CardData | WidgetData;\r\n  dataGrid?: Layouts;\r\n  onClick?: () => void;\r\n  useAnimation: boolean;\r\n}\r\n\r\nconst ViewCard: FC<ViewCardProperties> = ({\r\n  cardType,\r\n  children,\r\n  cardId,\r\n  data,\r\n  onClick,\r\n  cardSettings,\r\n  useAnimation,\r\n}: ViewCardProperties) => {\r\n  const { appMode, addAppError, setEditingCard } = useApp();\r\n  const { deleteCard } = useLayout();\r\n  const [oldCardView, setCardView] = useState(CardView.GRID);\r\n  const [isError, setIsError] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const [animationVariant, setAnimationVariant] = useState(\r\n    data?.contentType === \"widget\" ? \"loaded\" : \"\"\r\n  );\r\n\r\n  const { setCardScale } = useCardEditor();\r\n\r\n  const animationCounter = useStoreState(\r\n    (state) => state.layoutsModel.animationCounter\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (appMode === AppMode.DISPLAY) {\r\n      setAnimationVariant(\"out\");\r\n    }\r\n    if (data?.contentType === \"widget\") {\r\n      setAnimationVariant(\"loaded\");\r\n    }\r\n  }, [animationCounter, appMode, data?.contentType]);\r\n\r\n  const [state, actions] = useLocalStore<CardModel>(\r\n    () => ({\r\n      cardBackgroundColor: \"\",\r\n      cardType: cardType,\r\n      cardView: CardView.GRID,\r\n      handleCardPress: thunk((actions, _, { getState }) => {\r\n        const rootel = document.querySelector(\"#root\") as HTMLDivElement;\r\n        if ((rootel.style.pointerEvents = \"all\")) {\r\n          rootel.style.pointerEvents = \"none\";\r\n        }\r\n\r\n        setTimeout(() => {\r\n          rootel.style.pointerEvents = \"all\";\r\n        }, 1000);\r\n        if (appMode === AppMode.DISPLAY && cardId != undefined) {\r\n          switch (getState().cardView) {\r\n            case CardView.GRID:\r\n              break;\r\n            case CardView.PREVIEW:\r\n              actions.setCardView(CardView.GRID);\r\n              const element = document.getElementById(\r\n                data?.id ?? \"view_card\"\r\n              ) as HTMLDivElement;\r\n              element.style.zIndex = \"0\";\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n      }),\r\n      scale: cardSettings?.scale ?? 1,\r\n      setBackgroundColor: action((state, color) => {\r\n        state.cardBackgroundColor = color;\r\n      }),\r\n      setCardView: action((state, cardView) => {\r\n        state.cardView = cardView;\r\n      }),\r\n      setScale: action((state, scale) => {\r\n        state.scale += scale;\r\n        if (data) {\r\n          setCardScale({ cardId: data?.id, scale: state.scale });\r\n        }\r\n      }),\r\n      setShowMenu: action((state, show) => {\r\n        state.showMenu = show;\r\n      }),\r\n      showMenu: false,\r\n      toggleMenu: action((state) => {\r\n        state.showMenu = !state.showMenu;\r\n      }),\r\n    }),\r\n    [appMode],\r\n    () => {\r\n      return { devTools: false };\r\n    }\r\n  );\r\n\r\n  const cardModalBackdrop = classNames(\"card-modal-backdrop\", {\r\n    \"card-modal-backdrop-active\":\r\n      oldCardView === CardView.PREVIEW || oldCardView === CardView.FULL_SCREEN,\r\n    \"card-modal-backdrop-inactive\": oldCardView === CardView.GRID,\r\n  });\r\n\r\n  const cardChildContainer = classNames(\"card-child-container\", {\r\n    \"card-child-container-preview\": state.cardView === CardView.PREVIEW,\r\n    \"card-child-container-fullscreen\": state.cardView === CardView.FULL_SCREEN,\r\n    \"card-child-container-grid\": state.cardView === CardView.GRID,\r\n  });\r\n\r\n  const { enable, disable } = useKeyboardShortcut({\r\n    keyCode: 27, //escape\r\n    action: () => {\r\n      if (\r\n        oldCardView === CardView.FULL_SCREEN ||\r\n        oldCardView === CardView.PREVIEW\r\n      ) {\r\n        setCardView(CardView.GRID);\r\n      }\r\n    },\r\n    disabled: false,\r\n  });\r\n\r\n  const showDeleteButton = (): JSX.Element | undefined => {\r\n    if (appMode == AppMode.EDIT && data) {\r\n      return (\r\n        <>\r\n          <DeleteButton\r\n            action={() => {\r\n              deleteCard(data.id);\r\n            }}\r\n            onClick={() => {\r\n              deleteCard(data.id);\r\n            }}\r\n          />\r\n          {data.contentType !== \"widget\" && (\r\n            <SettingsButton\r\n              onClick={(e) => {\r\n                if (data.contentType !== \"widget\") {\r\n                  setEditingCard(data as CardData);\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderCardInfo = (): JSX.Element | undefined => {\r\n    if (\r\n      oldCardView === CardView.PREVIEW &&\r\n      data &&\r\n      data.contentType !== \"widget\"\r\n    ) {\r\n      return <CardInfo className=\"\" data={data as CardData} />;\r\n    }\r\n  };\r\n\r\n  const renderInternals = () => {\r\n    return data?.contentType !== \"widget\"\r\n      ? [showDeleteButton(), renderCardInfo()]\r\n      : [showDeleteButton()];\r\n  };\r\n\r\n  const renderReturnButton = (): JSX.Element | undefined => {\r\n    if (oldCardView === CardView.FULL_SCREEN) {\r\n      return (\r\n        <ReturnButton\r\n          onClick={() => {\r\n            setCardView(CardView.GRID);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const containerReference = useRef(null);\r\n  useOnClickOutside(containerReference, (e) => {\r\n    e.preventDefault();\r\n    if (state.cardView == CardView.PREVIEW) {\r\n      actions.setCardView(CardView.GRID);\r\n    }\r\n  });\r\n\r\n  const qrContainerStyle = {\r\n    bottom: 0,\r\n    position: \"absolute\",\r\n    right: 0,\r\n    transform: \"translate(50%, 50%)\",\r\n    width: \"fit-content\",\r\n    zIndex: 1,\r\n  } as React.CSSProperties;\r\n\r\n  const renderQrCode = (): JSX.Element | undefined => {\r\n    if (state.cardView === CardView.PREVIEW && data?.contentType !== \"widget\") {\r\n      const cd = data as CardData;\r\n      return (\r\n        <div style={qrContainerStyle}>\r\n          <QRCode size={128} value={cd?.src ?? \"\"} />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const onError: CardErrorHandler = (event, card) => {\r\n    const { title, src } = card;\r\n    addAppError({\r\n      errorType: \"failed to load content\",\r\n      description: \"description\",\r\n      source: `Card: ${title}`,\r\n      link: src,\r\n    });\r\n    setIsError(true);\r\n  };\r\n\r\n  const onLoad: CardLoadHandler = (event, card) => {\r\n    if (appMode === AppMode.DISPLAY) {\r\n      setAnimationVariant(\"loaded\");\r\n    }\r\n    setIsLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (state.cardView === CardView.PREVIEW) {\r\n      // setAnimationVariant(\"preview\");\r\n    }\r\n    if (state.cardView === CardView.GRID) {\r\n      // setAnimationVariant(\"none\");\r\n    }\r\n    // if (state.)\r\n  }, [state.cardView]);\r\n\r\n  useEffect(() => {\r\n    console.log(animationVariant);\r\n  }, [animationVariant]);\r\n\r\n  return (\r\n    <>\r\n      {data && (\r\n        <CardMotionWrapper\r\n          animation={animationVariant}\r\n          backgroundColor={state.cardBackgroundColor}\r\n          card={data}\r\n        >\r\n          {children && (\r\n            <div className={cardModalBackdrop}>\r\n              <div\r\n                className={cardChildContainer}\r\n                onMouseUp={() => {\r\n                  actions.handleCardPress();\r\n                  if (onClick) {\r\n                    onClick();\r\n                  }\r\n                }}\r\n                ref={containerReference}\r\n              >\r\n                {/* {renderQrCode()} */}\r\n                {renderInternals()}\r\n                <CardBackdrop card={data} cardSettings={cardSettings}>\r\n                  {children(\r\n                    state.scale,\r\n                    state.cardView,\r\n                    onError,\r\n                    onLoad,\r\n                    cardSettings ?? {\r\n                      id: \"not found\",\r\n                      scale: 1,\r\n                    }\r\n                  )}\r\n                </CardBackdrop>\r\n              </div>\r\n              {renderReturnButton()}\r\n            </div>\r\n          )}\r\n        </CardMotionWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst calculateTransform2 = (boundingBox: DOMRect): [number, number] => {\r\n  const windowWidth = window.innerWidth;\r\n  const windowHeight = window.innerHeight;\r\n  const vw = window.innerWidth / 100;\r\n  const vh = window.innerWidth / 100;\r\n  const futureWidth = boundingBox.width * 1.5;\r\n  const futureHeight = boundingBox.height * 1.5;\r\n\r\n  const centeredX = windowWidth / 2 - futureWidth / 2;\r\n  const centeredY = windowHeight / 2 - futureHeight / 2;\r\n\r\n  const currentX = boundingBox.x;\r\n  const currentY = boundingBox.y;\r\n  let differenceX = centeredX - currentX;\r\n  let differenceY = centeredY - currentY;\r\n\r\n  if (centeredX < currentX) {\r\n    differenceX = currentX - centeredX;\r\n    differenceX *= -1;\r\n  }\r\n  if (centeredY < currentY) {\r\n    differenceY = currentY - centeredY;\r\n    differenceY *= -1;\r\n  }\r\n  return [differenceX, differenceY];\r\n};\r\n\r\nconst ReturnButton = ({\r\n  onClick,\r\n}: {\r\n  onClick: MouseEventHandler<HTMLDivElement>;\r\n}): JSX.Element => {\r\n  return (\r\n    <div className=\"return-button-container\">\r\n      <Button onClick={onClick} text=\"Return\" width={300} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ViewCard);\r\n","// eslint-disable-next-line simple-import-sort/imports\nimport React, { useState } from \"react\";\nimport ViewCard from \"./ViewCard/ViewCard\";\nimport { DndTypes } from \"../../enums\";\nimport type { Layout, Layouts } from \"react-grid-layout\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nimport \"../../css/cardLayout.css\";\nimport appConfig from \"../../static/appConfig\";\nimport type { GridPosition } from \"../../interfaces/GridPosition\";\nimport IXDrop from \"../DragAndDrop/IXDrop\";\n\ntype GuideGridSettings = Partial<ReactGridLayout.ResponsiveProps>;\n\nexport const GuideGrid = ({\n  gridSettings,\n}: {\n  gridSettings: GuideGridSettings;\n}): JSX.Element => {\n  const ResponsiveGridLayout = WidthProvider(Responsive);\n  const guideCards = generateFilledLayout(\n    appConfig.gridSettings.gridRows,\n    appConfig.gridSettings.gridCols\n  );\n  const justCardNames = guideCards.lg.map((c) => c.i);\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        zIndex: 0,\n      }}\n    >\n      <ResponsiveGridLayout\n        {...gridSettings}\n        className=\"card-layout\"\n        isDraggable={false}\n        isResizable={false}\n        layouts={guideCards}\n        preventCollision\n        resizeHandles={[]}\n      >\n        {justCardNames.map((p, index) => {\n          return (\n            <div key={p}>\n              <IXDrop\n                cardType={DndTypes.PLACEHOLDER}\n                className=\"droppable-guide\"\n                droppableId={p}\n                key={index}\n              >\n                <ViewCard\n                  cardId={p}\n                  // eslint-disable-next-line react/jsx-sort-props\n                  cardType={DndTypes.PLACEHOLDER}\n                  key={p}\n                  useAnimation={false}\n                ></ViewCard>\n              </IXDrop>\n            </div>\n          );\n        })}\n      </ResponsiveGridLayout>\n    </div>\n  );\n};\nexport default React.memo(GuideGrid);\n\nfunction generateFilledLayout(rows: number, cols: number): Layouts {\n  const allGridSpots: GridPosition[] = [];\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      allGridSpots.push({ x: x, y: y });\n    }\n  }\n\n  const emptyCards = allGridSpots.map((rr) => {\n    return {\n      x: rr.x,\n      y: rr.y,\n      w: 1,\n      h: 1,\n      i: `empty_card_[${rr.x}, ${rr.y}]`,\n      minW: 1,\n      maxW: 1,\n      minH: 1,\n      maxH: 1,\n      static: false,\n      // static: true,\n      isDraggable: false,\n      isResizable: false,\n      resizeHandles: [],\n    } as Layout;\n  });\n\n  //TODO: MORE FUNCTIONAL SOLUTION\n  // const filled = layout.concat(emptyCards);\n  //pop off the first two positions where the clock is\n  // emptyCards.shift();\n  // emptyCards.shift();\n  return {\n    lg: emptyCards,\n    md: emptyCards,\n    sm: emptyCards,\n    xs: emptyCards,\n    xxs: emptyCards,\n  };\n}\n","import \"../../css/cardLayout.css\";\nimport \"../../css/libs/reactDraggable.css\";\n\nimport { AnimatePresence, motion, Variants } from \"framer-motion\";\nimport React, { useEffect } from \"react\";\nimport type { Layout, Layouts } from \"react-grid-layout\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\n\nimport type CardData from \"../../data_structs/CardData\";\nimport LayoutData from \"../../data_structs/LayoutData\";\nimport type WidgetData from \"../../data_structs/WidgetData\";\nimport type { AppMode } from \"../../enums\";\nimport { DndTypes } from \"../../enums\";\nimport type { CardSettings } from \"../../interfaces/CardSettings\";\nimport appConfig from \"../../static/appConfig\";\nimport IFrameView from \"../CardContent\";\nimport IXDrop from \"../DragAndDrop/IXDrop\";\nimport WidgetRenderer from \"../Widgets/WidgetRenderer\";\nimport GuideGrid from \"./GuideGrid\";\nimport ViewCard from \"./ViewCard/ViewCard\";\nimport WidgetWrapper from \"./ViewCard/WidgetWrapper\";\n\nexport const CardLayout = ({\n  appMode,\n  layout,\n  cardSettings,\n  width,\n  height,\n  margin,\n  onLayoutChange,\n  cards,\n  widgets,\n  cols,\n  rows,\n  isDraggable,\n  isResizable,\n}: {\n  appMode: AppMode;\n  cards: CardData[];\n  cols: number;\n  cardSettings: CardSettings[];\n  height: number;\n  layout: Layouts | undefined;\n  margin: [number, number];\n  rows: number;\n  onLayoutChange?: (l: Layout[]) => void;\n  isDraggable?: boolean;\n  isResizable?: boolean;\n  widgets: WidgetData[];\n  width: number;\n}): JSX.Element => {\n  const activeLayout = layout;\n\n  useEffect(() => {\n    console.log(activeLayout?.id);\n  }, [activeLayout?.id]);\n\n  console.log(activeLayout);\n\n  const ResponsiveGridLayout = WidthProvider(Responsive);\n\n  const sharedGridSettings = {\n    breakpoints: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },\n    cols: {\n      lg: cols,\n      md: cols,\n      sm: cols,\n      xs: cols,\n      xxs: cols,\n    },\n    // rowHeight: 500,\n    rowHeight: height / appConfig.gridSettings.gridRows,\n    // rowHeight: (height - appConfig.gridBottomPadding) / appConfig.gridRows,\n    margin: margin,\n    preventCollision: true,\n    compactType: null,\n    // containerPadding: [0, 0],\n  };\n\n  console.log(widgets);\n  return (\n    <div>\n      <motion.div\n        animate={{ opacity: 1, y: 0, transition: { delay: 1 } }}\n        className=\"card-grid-container\"\n        initial={{ opacity: 0, y: 50 }}\n      >\n        <ResponsiveGridLayout\n          {...sharedGridSettings}\n          className=\"card-layout\"\n          isDraggable={isDraggable ?? false}\n          isResizable={isResizable ?? false}\n          layouts={layout ?? { lg: [] }}\n          onDragStart={(layout, oldItem, newItem, placeholder, e, element) => {\n            const previousStyle = element.style;\n            previousStyle.border = \"2px solid cyan\";\n            element.style.border = \"4px solid cyan\";\n          }}\n          onLayoutChange={onLayoutChange}\n          preventCollision\n          resizeHandles={[\"se\"]}\n          verticalCompact\n        >\n          {[...cards, ...widgets].map(\n            (card: CardData | WidgetData, index: number) => {\n              return (\n                <motion.div\n                  className=\"card-container\"\n                  exit={{ y: -100 }}\n                  id={`${card.id}_grid_container`}\n                  key={card.id}\n                  style={{ width: \"100%\" }}\n                >\n                  <IXDrop\n                    cardType={DndTypes.IFRAME}\n                    className=\"droppable-card\"\n                    droppableId={card.id}\n                    key={index}\n                  >\n                    <ViewCard\n                      cardId={index.toString()}\n                      cardSettings={cardSettings.find((s) => s.id === card.id)}\n                      cardType={DndTypes.IFRAME}\n                      data={card}\n                      useAnimation={card.contentType !== \"widget\"}\n                    >\n                      {card.contentType !== \"widget\"\n                        ? (scale, cardView, onError, onLoad, cardSettings) => {\n                            const contentCard = card as CardData;\n                            return (\n                              <IFrameView\n                                card={contentCard}\n                                cardSettings={cardSettings}\n                                cardView={cardView}\n                                onError={onError}\n                                onLoad={onLoad}\n                                scale={scale}\n                              />\n                            );\n                          }\n                        : (scale, cardView, onError, onLoad, cardSettings) => {\n                            return (\n                              <WidgetRenderer\n                                cardSettings={cardSettings}\n                                scale={1}\n                                widget={card as WidgetData}\n                              />\n                            );\n                          }}\n                      {}\n                    </ViewCard>\n                  </IXDrop>\n                </motion.div>\n              );\n            }\n          )}\n        </ResponsiveGridLayout>\n      </motion.div>\n      <GuideGrid gridSettings={sharedGridSettings} />\n    </div>\n  );\n};\nexport default CardLayout;\n","import React, { useEffect,useState } from \"react\";\r\n\r\ntype FlexColumnProperties = Omit<React.HTMLProps<HTMLDivElement>, \"as\" | \"ref\">\r\n\r\nconst FlexColumn = (properties: FlexColumnProperties): JSX.Element => {\r\n  return (\r\n    <div\r\n      {...properties}\r\n      style={{\r\n        ...(properties.style || {}),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\nexport default FlexColumn;\r\n","import React, { useEffect,useState } from \"react\";\r\n\r\ntype FlexRowProperties = Omit<React.HTMLProps<HTMLDivElement>, \"as\" | \"ref\">\r\n\r\nconst FlexRow = (properties: FlexRowProperties): JSX.Element => {\r\n  return (\r\n    <div\r\n      {...properties}\r\n      style={{\r\n        ...(properties.style || {}),\r\n        display: \"flex\",\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\nexport default FlexRow;\r\n","import React, { useEffect, useRef,useState } from \"react\";\r\n\r\ntype TabPaneProperties = Omit<React.HTMLProps<HTMLDivElement>, \"as\" | \"ref\">\r\n\r\nconst TabPane = (\r\n  properties: TabPaneProperties\r\n  //   children: JSX.Element | JSX.Element[]\r\n): JSX.Element => {\r\n  return (\r\n    <div\r\n      {...properties}\r\n      style={{\r\n        ...(properties.style || {}),\r\n        width: properties?.style?.width ?? \"inherit\",\r\n        padding: \".5em\",\r\n      }}\r\n    >\r\n      {properties.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabPane;\r\n","import { Heading, Switch } from \"evergreen-ui\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport { useAppSettings, useSheets } from \"../../../../hooks\";\r\nimport FlexColumn from \"../../../Shared/FlexColumn\";\r\nimport FlexRow from \"../../../Shared/FlexRow\";\r\nimport TabPane from \"../TabPane\";\r\n\r\nconst AppTab = (): JSX.Element => {\r\n  const {\r\n    setRotationSpeed,\r\n    setBlockIframeInteractions,\r\n    setShowQrCodes,\r\n    enableIframeInteractions,\r\n    setRotateLayouts,\r\n    setMuteIframeAudio,\r\n    enableIframeAudio,\r\n    rotateLayouts,\r\n  } = useAppSettings();\r\n\r\n  return (\r\n    <TabPane>\r\n      <Heading size={600} style={{ color: \"white\" }}>\r\n        General\r\n      </Heading>\r\n      <div style={{ margin: \".5em\" }}>\r\n        <FlexColumn>\r\n          <SwitchContainer\r\n            onChange={(value) => setRotateLayouts(value)}\r\n            value={rotateLayouts}\r\n          >\r\n            RotateLayouts\r\n          </SwitchContainer>\r\n          <SwitchContainer\r\n            onChange={(value) => setBlockIframeInteractions(value)}\r\n            value={enableIframeInteractions}\r\n          >\r\n            Enable IFrame Interactions\r\n          </SwitchContainer>\r\n          <SwitchContainer\r\n            onChange={(value) => setMuteIframeAudio(value)}\r\n            value={enableIframeAudio}\r\n          >\r\n            Enable IFrame Audio\r\n          </SwitchContainer>\r\n        </FlexColumn>\r\n      </div>\r\n      {/* </div> */}\r\n      <SheetLinks />\r\n      {/* <input\r\n        // label={<Label>Layout Duration</Label>}\r\n        // description=\"Duration that layout is displayed\"\r\n        // placeholder={rotationSpeed.toString()}\r\n        // type=\"text\"\r\n        required\r\n        // value={rotationSpeed.toString()}\r\n        // validationMessage=\"This field is required\"\r\n        // pattern=\"[0-9]*\"\r\n        // disabled={false}\r\n        // onChange={onChange}\r\n        // defaul\r\n        value={val}\r\n        type=\"text\"\r\n        defaultValue={\"hello\"}\r\n        //@ts-ignore\r\n        // onChange={(e) => setRotationSpeed(parseInt(e.target.value))}\r\n        onChange={(e) => setval(e.target.value)}\r\n        //   // e()\r\n        // }}\r\n      /> */}\r\n    </TabPane>\r\n  );\r\n};\r\n\r\nconst SwitchContainer = ({\r\n  children,\r\n  onChange,\r\n  value,\r\n}: {\r\n  children: string;\r\n  onChange: (value_: boolean) => void;\r\n  value: boolean;\r\n}): JSX.Element => {\r\n  const [checked, setChecked] = useState(value);\r\n  return (\r\n    <FlexRow\r\n      style={{ margin: \".5em\", justifyContent: \"space-between\", width: \"50%\" }}\r\n    >\r\n      <Label>{children}</Label>\r\n      <div style={{ paddingLeft: \".5em\" }}>\r\n        <Switch\r\n          checked={checked}\r\n          defaultChecked={false}\r\n          onChange={(e) => {\r\n            console.log(e.target.value);\r\n            onChange(e.target.checked);\r\n            setChecked(e.target.checked);\r\n          }}\r\n          style={{ margin: \"auto\" }}\r\n        />\r\n      </div>\r\n    </FlexRow>\r\n  );\r\n};\r\n\r\nconst Label = ({ children }: { children: string }) => {\r\n  return <div style={{ color: \"white\" }}>{children}</div>;\r\n};\r\n\r\nexport default AppTab;\r\n\r\nconst SheetLinks = (): JSX.Element => {\r\n  const { cardSheetUrl, layoutSheetUrl, formUrl, parentSheetUrl } = useSheets();\r\n  const links = [parentSheetUrl, cardSheetUrl, layoutSheetUrl, formUrl];\r\n  const titles = [\"Parent Sheet\", \"Content\", \"Layouts\", \"Google Form\"];\r\n\r\n  return (\r\n    <FlexColumn>\r\n      <Heading size={600} style={{ color: \"white\" }}>\r\n        Google Sheets\r\n      </Heading>\r\n      <FlexColumn\r\n        style={{\r\n          padding: \".5em\",\r\n          backgroundColor: \"#1f1f1f\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        {links.map((link, index) => (\r\n          <SheetLink link={link ?? \"not provided\"} title={titles[index]} />\r\n        ))}\r\n      </FlexColumn>\r\n    </FlexColumn>\r\n  );\r\n};\r\n\r\nconst SheetLink = ({\r\n  title,\r\n  link,\r\n}: {\r\n  title: string;\r\n  link: string;\r\n}): JSX.Element => {\r\n  return (\r\n    <FlexRow\r\n      style={{\r\n        padding: \".5em\",\r\n        backgroundColor: \"#1f1f1f\",\r\n        overflow: \"hidden\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      <Heading style={{ color: \"white\" }}>{title + \":  \"}</Heading>\r\n      <a\r\n        href={link}\r\n        rel=\"noreferrer\"\r\n        style={{\r\n          color: \"white\",\r\n          overflow: \"hidden\",\r\n          textOverflow: \"ellipsis\",\r\n          maxWidth: \"80%\",\r\n        }}\r\n        target=\"_blank\"\r\n      >\r\n        {link}\r\n      </a>\r\n    </FlexRow>\r\n  );\r\n};\r\n","import type { ReactElement, ReactNode} from \"react\";\nimport React, { FC, useEffect, useRef } from \"react\";\nimport type {\n  DraggableProps,\n  DraggableProvided,\n  DraggingStyle} from \"react-beautiful-dnd\";\nimport {\n  Draggable\n} from \"react-beautiful-dnd\";\nimport { createPortal } from \"react-dom\";\n\nimport type CardData from \"../../data_structs/CardData\";\nimport type { DndTypes } from \"../../enums\";\nimport { CardView } from \"../../enums\";\nimport IFrameView from \"../CardContent\";\n\ninterface DraggableRowProperties extends Omit<DraggableProps, \"children\"> {\n  dndType: DndTypes;\n  className?: string;\n  children: ReactNode;\n  dragAll?: boolean;\n  card: CardData;\n}\n\nconst useDraggableInPortal = () => {\n  const element = useRef<HTMLDivElement>(document.createElement(\"div\")).current;\n\n  useEffect(() => {\n    if (element) {\n      element.style.pointerEvents = \"none\";\n      element.style.position = \"absolute\";\n      element.style.height = \"100%\";\n      element.style.width = \"100%\";\n      element.style.top = \"0\";\n      // element.style.border = \"5px solid red\";\n\n      document.body.append(element);\n\n      return () => {\n        element.remove();\n      };\n    }\n  }, [element]);\n\n  return (render: (provided: DraggableProvided) => ReactElement) =>\n    (provided: DraggableProvided) => {\n      const result = render(provided);\n      const style = provided.draggableProps.style as DraggingStyle;\n      if (style.position === \"fixed\") {\n        return createPortal(result, element);\n      }\n      return result;\n    };\n};\n\n/**\n * A draggable table row. Used for dragging card content or layouts into the grid.\n */\nconst DraggableRow = ({\n  dndType,\n  className,\n  children,\n  dragAll,\n  card,\n  ...properties\n}: DraggableRowProperties): JSX.Element => {\n  if (!React.isValidElement(children)) return <div />;\n\n  const renderDraggable = useDraggableInPortal();\n\n  return (\n    <Draggable {...properties}>\n      {(provided, snapshot) => {\n        const dragHandleProperties = dragAll ? provided.dragHandleProps : {};\n        if (\n          snapshot.isDragging &&\n          provided &&\n          provided.draggableProps &&\n          provided.draggableProps.style\n        ) {\n          //@ts-ignore\n          provided.draggableProps.style.left =\n            //@ts-ignore\n            provided.draggableProps.style.offsetLeft;\n          //@ts-ignore\n          provided.draggableProps.style.top =\n            //@ts-ignore\n            provided.draggableProps.style.offsetTop;\n        }\n        return (\n          <>\n            <tr\n              className={className}\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...dragHandleProperties}\n            >\n              {React.cloneElement(children, { provided })}\n            </tr>\n            <tr\n              style={{\n                display: snapshot.isDragging ? \"table-row\" : \"none\",\n                backgroundColor: snapshot.isDragging ? \"green\" : \"none\",\n              }}\n            >\n              {React.cloneElement(children, { provided })}\n            </tr>\n            {/* {\n              //@ts-ignore\n              renderDraggable((provided, snapshot) => {\n                <IFrameView card={card} scale={1} cardView={CardView.GRID} />;\n              })\n            } */}\n          </>\n        );\n      }}\n    </Draggable>\n  );\n};\n\nDraggableRow.defaultProps = {\n  dragAll: true,\n};\n\nexport default React.memo(DraggableRow);\n","enum IFrameLoadError {\n  CROSS_ORIGIN = \"CROSS_ORIGIN\",\n}\n\nenum IFrameLoadWarning {\n  MALFORMED_URL = \"MALFORMED_URL\",\n}\n\nclass IFrameValidator {\n  url!: string;\n  errors!: IFrameLoadError[];\n  warnings!: IFrameLoadWarning[];\n  constructor(url: string) {\n    this.errors = [];\n    this.warnings = [];\n    this.url = url;\n  }\n  validate(event: React.SyntheticEvent<HTMLIFrameElement, Event>): void {\n    console.log(this.errors);\n    const malformedUrlCheckArray = validURL(this.url);\n    this.warnings.push(...malformedUrlCheckArray);\n    console.log(malformedUrlCheckArray);\n  }\n  isValid(): boolean {\n    return this.errors.length === 0;\n  }\n  errorMessages(): string[] {\n    const errors: string[] = [];\n    this.errors.map((e) => {\n      switch (e) {\n        case IFrameLoadError.CROSS_ORIGIN:\n          errors.push(\n            `Blocked a frame with origin ${this.url}; from accessing a cross-origin frame.`\n          );\n          break;\n        default:\n          console.log(\"error did not match an error enum\");\n      }\n    });\n    return errors;\n  }\n}\n\nexport default IFrameValidator;\n\n\n\nfunction validURL(string: string): IFrameLoadWarning[] {\n  const warningsArray = [];\n  const pattern = new RegExp(\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n      \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\n      \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\n    \"i\"\n  ); // fragment locator\n  if (!pattern.test(string)) {\n    warningsArray.push(IFrameLoadWarning.MALFORMED_URL);\n  }\n  return warningsArray;\n}\n","import type { FunctionComponent, ReactElement } from \"react\";\nimport React from \"react\";\r\n\r\n// https://github.com/mhnpd/react-loader-spinner/blob/master/src/type.ts\r\n\r\nexport type Style = {\r\n  [key: string]: string;\r\n};\r\n\r\nexport interface BaseProperties {\r\n  height?: string | number;\r\n  width?: string | number;\r\n  color?: string;\r\n  ariaLabel?: string;\r\n  wrapperStyle?: Style;\r\n  wrapperClass?: string;\r\n  visible?: boolean;\r\n}\r\n\r\ntype CirclesProperties = BaseProperties\r\n\r\nconst getDefaultStyle = (visible: boolean): Style => ({\r\n  display: visible ? \"flex\" : \"none\",\r\n});\r\n\r\nconst Loader: FunctionComponent<CirclesProperties> = ({\r\n  height = 80,\r\n  width = 80,\r\n  color = \"green\",\r\n  ariaLabel = \"circles-loading\",\r\n  wrapperStyle,\r\n  wrapperClass,\r\n  visible = true,\r\n}): ReactElement => (\r\n  <div\r\n    className={wrapperClass}\r\n    data-testid=\"circles-loading\"\r\n    style={{ ...getDefaultStyle(visible), ...wrapperStyle }}\r\n  >\r\n    <svg\r\n      aria-label={ariaLabel}\r\n      data-testid=\"circles-svg\"\r\n      fill={color}\r\n      height={height}\r\n      viewBox=\"0 0 135 135\"\r\n      width={width}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d=\"M67.447 58c5.523 0 10-4.477 10-10s-4.477-10-10-10-10 4.477-10 10 4.477 10 10 10zm9.448 9.447c0 5.523 4.477 10 10 10 5.522 0 10-4.477 10-10s-4.478-10-10-10c-5.523 0-10 4.477-10 10zm-9.448 9.448c-5.523 0-10 4.477-10 10 0 5.522 4.477 10 10 10s10-4.478 10-10c0-5.523-4.477-10-10-10zM58 67.447c0-5.523-4.477-10-10-10s-10 4.477-10 10 4.477 10 10 10 10-4.477 10-10z\">\r\n        <animateTransform\r\n          attributeName=\"transform\"\r\n          dur=\"2.5s\"\r\n          from=\"0 67 67\"\r\n          repeatCount=\"indefinite\"\r\n          to=\"-360 67 67\"\r\n          type=\"rotate\"\r\n        />\r\n      </path>\r\n      <path d=\"M28.19 40.31c6.627 0 12-5.374 12-12 0-6.628-5.373-12-12-12-6.628 0-12 5.372-12 12 0 6.626 5.372 12 12 12zm30.72-19.825c4.686 4.687 12.284 4.687 16.97 0 4.686-4.686 4.686-12.284 0-16.97-4.686-4.687-12.284-4.687-16.97 0-4.687 4.686-4.687 12.284 0 16.97zm35.74 7.705c0 6.627 5.37 12 12 12 6.626 0 12-5.373 12-12 0-6.628-5.374-12-12-12-6.63 0-12 5.372-12 12zm19.822 30.72c-4.686 4.686-4.686 12.284 0 16.97 4.687 4.686 12.285 4.686 16.97 0 4.687-4.686 4.687-12.284 0-16.97-4.685-4.687-12.283-4.687-16.97 0zm-7.704 35.74c-6.627 0-12 5.37-12 12 0 6.626 5.373 12 12 12s12-5.374 12-12c0-6.63-5.373-12-12-12zm-30.72 19.822c-4.686-4.686-12.284-4.686-16.97 0-4.686 4.687-4.686 12.285 0 16.97 4.686 4.687 12.284 4.687 16.97 0 4.687-4.685 4.687-12.283 0-16.97zm-35.74-7.704c0-6.627-5.372-12-12-12-6.626 0-12 5.373-12 12s5.374 12 12 12c6.628 0 12-5.373 12-12zm-19.823-30.72c4.687-4.686 4.687-12.284 0-16.97-4.686-4.686-12.284-4.686-16.97 0-4.687 4.686-4.687 12.284 0 16.97 4.686 4.687 12.284 4.687 16.97 0z\">\r\n        <animateTransform\r\n          attributeName=\"transform\"\r\n          dur=\"8s\"\r\n          from=\"0 67 67\"\r\n          repeatCount=\"indefinite\"\r\n          to=\"360 67 67\"\r\n          type=\"rotate\"\r\n        />\r\n      </path>\r\n    </svg>\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import { AnimatePresence, motion } from \"framer-motion\";\nimport React from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport { useWindowSize } from \"../../hooks\";\n\nconst PopOver = ({\n  x,\n  y,\n  children,\n  visible,\n  width,\n  height,\n}: {\n  x: number;\n  y: number;\n  children: JSX.Element | JSX.Element[];\n  visible: boolean;\n  width?: number;\n  height?: number;\n}): JSX.Element => {\n  // console.log(x, y);\n  const windowSize = useWindowSize();\n  const scale = 0.4;\n  return createPortal(\n    //@ts-ignore\n    <AnimatePresence>\n      {visible && (\n        <motion.div\n          animate={{\n            opacity: 1,\n            transition: {\n              delay: 0.1,\n              duration: 0.2,\n              ease: \"circIn\",\n            },\n          }}\n          exit={{ opacity: 0 }}\n          style={{\n            backgroundColor: \"white\",\n            boxShadow: \"0 8px 32px 0 rgba(49, 49, 49, 0.37)\",\n            width: width ?? windowSize.width * scale,\n            height: height ?? windowSize.height * scale,\n            position: \"absolute\",\n            x: x,\n            y: y,\n            transformBox: \"view-box\",\n            transformOrigin: \"top left\",\n            borderRadius: \".5em\",\n            overflow: \"hidden\",\n          }}\n        >\n          {children}\n        </motion.div>\n      )}\n    </AnimatePresence>,\n\n    document.querySelector(\"#popup-container\") as HTMLDivElement\n  );\n};\n\nexport default React.memo(PopOver);\n","import React, { useState } from \"react\";\n\nimport { toTitleCase } from \"../../utils\";\n/**\n * <th> component with a arrow indicating the filter direction\n */\nconst TableHeader = ({\n  headerTitle,\n  setFilter,\n  setFilterDirection,\n  className,\n  activeFilter,\n}: {\n  headerTitle: string;\n  setFilterDirection: (direction: boolean) => void;\n  setFilter: (filter: string) => void;\n  className?: string;\n  activeFilter: string | undefined;\n}): JSX.Element => {\n\n  const [sortDirection, setSortDirection] = useState(true);\n\n  const showSortArrow =  headerTitle === activeFilter\n\n  return (\n    <th\n      className={className ?? \"editor-panel-table-header\"}\n      onClick={() => {\n        setFilter(headerTitle);\n        setSortDirection(!sortDirection);\n        setFilterDirection(sortDirection);\n      }}\n    >\n      {toTitleCase(headerTitle)}\n      {showSortArrow && sortDirection\n        ? \"▲\"\n        : showSortArrow && !sortDirection\n        ? \"▼\"\n        : \"\"}\n    </th>\n  );\n};\n\nexport default TableHeader;\n\n","import \"../../../../css/table.css\";\n\nimport { IconButton, RefreshIcon, SearchInput, Tooltip } from \"evergreen-ui\";\nimport fuzzysort from \"fuzzysort\";\nimport React, { useEffect, useState } from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport ReactImageFallback from \"react-image-fallback\";\n\nimport type CardData from \"../../../../data_structs/CardData\";\nimport { CardView, DndTypes, DragSource } from \"../../../../enums\";\nimport { useLayout, useSheets, useStoreState } from \"../../../../hooks\";\nimport { formatDate } from \"../../../../utils\";\nimport IFrameView from \"../../../CardContent\";\nimport DraggableRow from \"../../../DragAndDrop/DraggableRow\";\nimport IXDrop from \"../../../DragAndDrop/IXDrop\";\nimport Loader from \"../../../Loader\";\nimport Button from \"../../../Shared/Button\";\nimport FlexRow from \"../../../Shared/FlexRow\";\nimport PopOver from \"../../PopOver\";\nimport TableHeader from \"../../TableHeader\";\n\n/**\n * Content tab display a list of the availalbe cards, and search bar for quickly finding cards by their title.\n */\n\nconst ContentsTab = (): JSX.Element => {\n  const availableCards = useStoreState(\n    (state) => state.appModel.availableCards\n  );\n\n  const { clearCards, resetLayout } = useLayout();\n  const { refreshSheets } = useSheets();\n\n  const [filterKey, setFilterKey] = useState<string | undefined>();\n  const [filterDirection, setFilterDirection] = useState(true);\n  const [cardItems, setCardItems] = useState(availableCards);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filteredCards, setFilteredCards] =\n    useState<CardData[]>(availableCards);\n\n  //use search input to filter cards\n  useEffect(() => {\n    if (0 < searchTerm.length) {\n      const sortResult = fuzzysort.go(\n        searchTerm,\n        cardItems.map((c) => c.title)\n      );\n      const aboveThreshholdCardTitles: string[] = sortResult.map(\n        (s) => s.target\n      );\n      const filtered = cardItems.filter((c) =>\n        aboveThreshholdCardTitles.includes(c.title)\n      );\n      setFilteredCards(filtered);\n    } else {\n      setFilteredCards(cardItems);\n    }\n  }, [searchTerm, cardItems]);\n\n  //sort values by column attribute, if filterDirection is true, sort descending, else sort ascending\n  useEffect(() => {\n    const key = filterKey as keyof CardData;\n    const clone = [...availableCards];\n\n    const sortedItems = clone.sort((a, b) => {\n      const aText = a[key];\n      const bText = b[key];\n      if (aText && bText) {\n        if (aText < bText) {\n          return -1;\n        }\n        if (bText < aText) {\n          return 1;\n        }\n      }\n      return 0;\n    });\n    !filterDirection ? sortedItems.reverse() : null;\n    setCardItems(sortedItems);\n  }, [filterKey, availableCards, filterDirection]);\n\n  const contentTabHeader = \"contents-table-header\";\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = (e: any) =>\n    setSearchTerm(e.target.value);\n  const [test, setTest] = React.useState(\"\");\n  React.useEffect(() => {\n    setTimeout(() => setTest(\"lolol\"), 1000);\n  });\n  useEffect(() => {\n    console.log(test);\n  }, [test]);\n\n  return (\n    <div className=\"contents-tab-container\">\n      {/* <input\n        // key\n        name=\"something\"\n        type=\"text\"\n        defaultValue={searchString}\n        key={searchString}\n        // defaultValue={\"hello\"}\n        value={searchString}\n        onChange={(e) => setSearchString(e.target.value)}\n      /> */}\n      {/* <OtherInput /> */}\n      <FlexRow style={{ padding: \"0.5em\" }}>\n        <SearchInput\n          // onChange={(event: React.FormEvent<HTMLInputElement>) => {\n          //   console.log(event);\n          //   setSearchTerm(event.currentTarget.value);\n          // }}\n          // onChange={(e: React.ChangeEventHandler<HTMLInputElement>) => {\n          //   // let v = e.target;\n          //   // setSearchTerm(e.);\n          //   console.log(e);\n          // }}\n          onChange={onInputChange}\n          value={searchTerm}\n          disabled={false}\n          // placeholder=\"search title\"\n          width=\"90%\"\n        />\n        <FlexRow style={{ width: \"100%\", justifyContent: \"space-around\" }}>\n          <div style={{ height: \"100%\", width: \"10%\" }}>\n            <Tooltip content=\"Reload content\">\n              <IconButton\n                height=\"100%\"\n                icon={<RefreshIcon />}\n                onClick={(\n                  _event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n                ) => {\n                  refreshSheets();\n                }}\n                width=\"20%\"\n              />\n            </Tooltip>\n          </div>\n          <Button\n            appearance=\"default\"\n            intent=\"danger\"\n            onClick={(_event) => {\n              resetLayout();\n            }}\n            text=\"Reset Layout\"\n          />\n          <Button\n            appearance=\"minimal\"\n            intent=\"danger\"\n            onClick={(_event) => {\n              clearCards();\n            }}\n            // width={\"10%\"}\n            text=\"Clear All\"\n          />\n        </FlexRow>\n      </FlexRow>\n      <IXDrop\n        cardType={DndTypes.CLOCK}\n        className=\"table-container\"\n        droppableId={DragSource.CARD_TABLE}\n        isDropDisabled\n      >\n        <table className=\"contents-tab-table\">\n          <tbody onClick={(e) => {}}>\n            <tr>\n              {[\"title\", \"author\", \"added\"].map((s, index) => {\n                return (\n                  <TableHeader\n                    activeFilter={filterKey}\n                    className={contentTabHeader}\n                    headerTitle={s}\n                    key={index}\n                    setFilter={setFilterKey}\n                    setFilterDirection={setFilterDirection}\n                  ></TableHeader>\n                );\n              })}\n            </tr>\n          </tbody>\n        </table>\n        <Scrollbars autoHeight autoHeightMax={319} autoHeightMin={100}>\n          <table style={{ padding: \"2em\" }}>\n            <tbody>\n              {filteredCards.map((card, index) => {\n                const { added, id, author, interaction, isActive } = card;\n                return (\n                  <DraggableRow\n                    card={card}\n                    className={\n                      isActive ? \"content-row-active\" : \"content-row-inactive\"\n                    }\n                    dndType={DndTypes.CARD_ROW}\n                    draggableId={id}\n                    index={index}\n                    isDragDisabled={isActive}\n                    key={index.toString()}\n                  >\n                    <>\n                      <td>\n                        <TitleWithIcon card={card} />\n                      </td>\n                      <td>{author}</td>\n                      <td>{formatDate(added)}</td>\n                    </>\n                  </DraggableRow>\n                );\n              })}\n            </tbody>\n          </table>\n        </Scrollbars>\n      </IXDrop>\n    </div>\n  );\n};\n\nconst OtherInput = (): JSX.Element => {\n  const [searchString, setSearchString] = useState<string>(\"babbba\");\n\n  useEffect(() => {\n    console.log(searchString);\n  }, [searchString]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setSearchString(name);\n    // setUser({ [name]: value });\n  };\n  return (\n    <input\n      // key\n      type=\"text\"\n      id=\"userName\"\n      value={searchString}\n      placeholder=\"Enter User Name\"\n      // required\n      // defaultValue={searchString}\n      key={searchString}\n      onChange={handleChange}\n    />\n  );\n};\n\n/**\n * Fetches a favicon for a card and displays the cards title\n */\nconst TitleWithIcon = ({ card }: { card: CardData }): JSX.Element => {\n  const { src, id, title } = card;\n\n  const iconId = id + \"_icon\";\n\n  const [position, setPosition] = useState([0, 0]);\n  const [hovered, setHovered] = useState(false);\n\n  const [preivewLoaded, setPreviewLoaded] = useState(false);\n  const [delayHandler, setDelayHandler] = useState<NodeJS.Timeout>();\n\n  const handleMouseEnter = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ): void => {\n    setDelayHandler(\n      setTimeout(() => {\n        const { pageY } = event;\n        const element = document.getElementById(iconId)\n          ?.parentElement as HTMLDivElement;\n        const { x } = element.getBoundingClientRect();\n        setPosition([x + 100, pageY]);\n        setHovered(true);\n      }, 250)\n    );\n  };\n\n  const handleMouseLeave = (\n    _event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ): void => {\n    if (delayHandler) {\n      clearTimeout(delayHandler);\n      setHovered(false);\n    }\n  };\n\n  return (\n    <div\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      style={{ display: \"flex\" }}\n    >\n      <div id={iconId} style={{ display: \"flex\", width: 20 }}>\n        <ReactImageFallback\n          className={\n            card.isActive ? \"row-favicon-active\" : \"row-favicon-inactive\"\n          }\n          fallbackImage={`${process.env.PUBLIC_URL}/question_mark.svg`}\n          src={\n            card.contentType === \"image\"\n              ? src\n              : `https://s2.googleusercontent.com/s2/favicons?domain_url=${card.src}`\n          }\n          style={{ width: \"100%\", maxWidth: 20 }}\n        />\n      </div>\n      <PopOver visible={hovered} x={position[0]} y={position[1]}>\n        <IFrameView\n          card={card}\n          cardView={CardView.GRID}\n          objectFit=\"contain\"\n          onError={(_c) => {}}\n          onLoad={(_c) => {\n            setPreviewLoaded(true);\n          }}\n          scale={1}\n        />\n      </PopOver>\n      <div\n        style={{\n          marginTop: \"auto\",\n          marginBottom: \"auto\",\n          textAlign: \"left\",\n          paddingLeft: \"1em\",\n        }}\n      >\n        {title}\n      </div>\n    </div>\n  );\n};\n\nexport default ContentsTab;\n\nconst LoaderOverlay = ({ visible }: { visible: boolean }): JSX.Element => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"red\",\n        position: \"absolute\",\n        display: \"flex\",\n        alignItems: \"center\",\n      }}\n    >\n      <Loader visible />\n    </div>\n  );\n};\n","import \"../../../../css/table.css\";\nimport \"../../../../css/editorPanel.css\";\n\nimport React from \"react\";\nimport Scrollbars from \"react-custom-scrollbars\";\n\nimport { useElementSize, useErrors } from \"../../../../hooks\";\nimport type AppError from \"../../../../interfaces/AppError\";\n\n/**\n * Table for displaying app errors from the apps store model\n */\n\nconst IssuesTable = (): JSX.Element => {\n  const { appErrors, layoutErrors, googleSheetsErrors } = useErrors();\n  const [squareReference, { height }] = useElementSize();\n  return (\n    <div\n      className=\"table-container\"\n      style={{ height: 400, width: 500, overflowY: \"scroll\" }}\n      // style={{ height: 400, width: \"100%\", overflowY: \"scroll\" }}\n    >\n      <div ref={squareReference} style={{ width: \"100%\" }}>\n        {[...appErrors, ...layoutErrors, ...googleSheetsErrors].map(\n          (error, index) => {\n            return <ErrorMessage error={error} key={index} />;\n          }\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ErrorMessage = ({ error }: { error: AppError }): JSX.Element => {\n  const { errorType, link, source } = error;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        padding: \"1vmin\",\n        flexDirection: \"column\",\n        // height: 300,\n        width: \"100%\",\n        marginRight: \"10vmin\",\n        backgroundColor: \"#421717\",\n        borderBottom: \"1px solid white\",\n        boxSizing: \"border-box\",\n      }}\n    >\n      <div\n        style={{\n          color: \"#D14343\",\n          textTransform: \"uppercase\",\n          fontWeight: \"bold\",\n        }}\n      >{`⚠ ${errorType}`}</div>\n      <div>{source}</div>\n      <div>\n        <a\n          href={link}\n          rel=\"noreferrer\"\n          style={{ color: \"lightblue\" }}\n          target=\"_blank\"\n        >\n          {link}\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default IssuesTable;\n","import React, { useEffect, useRef,useState } from \"react\";\r\n\r\nimport FlexRow from \"../../../Shared/FlexRow\";\r\nimport IssuesTable from \"./IssuesTable\";\r\n\r\nconst IssuesTab = (): JSX.Element => {\r\n  return (\r\n    <div style={{ height: \"100%\", pointerEvents: \"all\" }}>\r\n      <IssuesTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IssuesTab;\r\n","import { motion } from \"framer-motion\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSheets } from \"../../../../../hooks\";\n\nconst GoogleFormIframe = ({ active }: { active: boolean }): JSX.Element => {\n  const { formUrl } = useSheets();\n\n  return (\n    <div\n      style={{\n        width: 500,\n        height: \"100%\",\n        overflow: \"hidden\",\n        position: \"relative\",\n      }}\n    >\n      <motion.div\n        animate={active ? { opacity: 0 } : {}}\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          backgroundColor: \"red\",\n          zIndex: 1,\n          top: 0,\n          left: 0,\n          opacity: 0.5,\n          display: \"flex\",\n          alignItems: \"center\",\n          pointerEvents: active ? \"none\" : \"all\",\n        }}\n      >\n        <div\n          style={{\n            width: \"50%\",\n            margin: \"auto\",\n            fontWeight: \"bold\",\n            border: \"1px solid white\",\n            padding: \"1em\",\n            backgroundColor: \"white\",\n            opacity: 1,\n          }}\n        >\n          Press the Copy Layout Button before Submitting New Layout\n        </div>\n      </motion.div>\n      <iframe\n        frameBorder={0}\n        marginHeight={0}\n        marginWidth={0}\n        src={formUrl}\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      ></iframe>\n    </div>\n  );\n};\n\nexport default GoogleFormIframe;\n","import \"../../../../css/googleFormPopup.css\";\nimport \"../../../../css/copyField.css\";\n\nimport { ClipboardIcon, Heading } from \"evergreen-ui\";\nimport { motion } from \"framer-motion\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDom from \"react-dom\";\n\nimport { useLayout, useSheets, useStoreState } from \"../../../../hooks\";\nimport DeleteButton from \"../../../CardLayout/ViewCard/DeleteButton\";\nimport Button from \"../../../Shared/Button\";\nimport FlexColumn from \"../../../Shared/FlexColumn\";\nimport FlexRow from \"../../../Shared/FlexRow\";\nimport Modal from \"../../../Shared/Modal\";\nimport GoogleFormIframe from \"./GoogleFormPopup/GoogleFormIframe\";\n\n/**\n * Modal popup for displaying cards when in preview mode. Displays on top of the CardLayout, and renders\n * to <div id=\"google-form-popup\"></div> in index.html.\n * @component\n */\n\ninterface GoogleFormPopupProperties {\n  onCloseComplete: () => void;\n  visible: boolean;\n}\n\nconst GoogleFormPopup = ({\n  onCloseComplete,\n  visible,\n}: GoogleFormPopupProperties): JSX.Element => {\n  const { layoutSheetUrl } = useSheets();\n\n  const { activeLayout } = useLayout();\n  // const [isShown, setIsShown] = useState(visible);\n  const [isCopiedJSON, setIsCopiedJson] = useState(false);\n  const [contentString, setContentString] = useState(\"\");\n  const layoutString = useStoreState((state) =>\n    JSON.stringify(state.layoutsModel.activeLayout)\n  );\n\n  useEffect(() => {\n    // console.log(layoutString);\n    // console.log(trueLayoutString);\n    // const toEdit = JSON.parse(layoutString);\n    // delete toEdit.backupLayout;\n    // delete toEdit.sourceLayout;\n    // toEdit.layout = JSON.parse(JSON.stringify(activeLayout?.layout.lg));\n    // setContentString(JSON.stringify(toEdit));\n    // console.log(toEdit);\n  }, [layoutString, activeLayout]);\n\n  return ReactDom.createPortal(\n    <Modal\n      active={visible}\n      backdropOpacity={0.5}\n      containerClassName=\"google-form-popup\"\n      onClose={() => {}}\n    >\n      <div className=\"google-form-popup-inner-container\">\n        <DeleteButton\n          action={() => {\n            onCloseComplete;\n          }}\n          onClick={onCloseComplete}\n        />\n        <FlexColumn>\n          <div style={{ borderBottom: \"1px solid white\", padding: \"1vmin\" }}>\n            <Heading color=\"white\" size={900}>\n              Add a new layout\n            </Heading>\n            <Heading color=\"white\" size={600}>\n              {`The layout will be appear `}{\" \"}\n              <a\n                href={layoutSheetUrl}\n                rel=\"noreferrer\"\n                style={{ color: \"lightblue\" }}\n                target=\"_blank\"\n              >\n                here\n              </a>\n            </Heading>\n          </div>\n          <FlexColumn\n            style={{\n              height: \"50vh\",\n              // padding: \"4vmin\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <FlexRow style={{ width: \"min-content\" }}>\n              {/* <CopyField\n                onCloseComplete={onCloseComplete}\n                onCopy={() => {\n                  setIsCopiedJson(true);\n                }}\n                text={layoutString}\n              /> */}\n            </FlexRow>\n            <FlexRow\n              style={{\n                padding: \"1vmin\",\n                justifyContent: \"center\",\n                height: \"min-content\",\n              }}\n            >\n              <Button\n                iconBefore={<ClipboardIcon />}\n                text=\"Copy Layout\"\n                onClick={(e) => {\n                  navigator.clipboard.writeText(layoutString);\n                  setIsCopiedJson(true);\n                }}\n              />\n            </FlexRow>\n            {/* <GoogleFormIframe active={isCopiedJSON} /> */}\n            <GoogleFormIframe active={isCopiedJSON} />\n          </FlexColumn>\n        </FlexColumn>\n      </div>\n    </Modal>,\n    document.querySelector(\"#google-form-popup\") as HTMLElement\n  );\n};\nexport default GoogleFormPopup;\n\n// //TODO: IMPROVE INHERITANCE OF BUTTONS\n// const CopyField = ({\n//   text,\n//   onCloseComplete,\n//   onCopy,\n//   isCurrentClipBoardContent,\n// }: {\n//   text: string;\n//   isCurrentClipBoardContent?: boolean;\n//   onCloseComplete: () => void;\n//   onCopy: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n// }): JSX.Element => {\n//   const [isClipBoardCorrect, setIsClipBoardCorrect] = useState(false);\n//   const [isCopied, setIsCopied] = useState(false);\n\n//   useEffect(() => {\n//     navigator.clipboard\n//       .readText()\n//       .then((clipboardText) => {\n//         if (text === clipboardText) {\n//           setIsClipBoardCorrect(true);\n//           setIsCopied(true);\n//         } else {\n//           setIsCopied(false);\n//           setIsClipBoardCorrect(false);\n//         }\n//       })\n//       .catch((error: unknown) => {\n//         console.error(\"Failed to read clipboard contents:\", error);\n//       });\n//   }, [text]);\n//   return (\n//     <>\n//       <Button\n//         appearance=\"primary\"\n//         height={100}\n//         iconBefore={<ClipboardIcon />}\n//         intent=\"success\"\n//         onClick={(e) => {\n//           navigator.clipboard.writeText(text);\n//           setIsCopied(true);\n//           onCopy(e);\n//         }}\n//         text=\"Copy Layout To Clip Board\"\n//         width={250}\n//       />\n//       {/* <div>\n//         <div\n//           style={{\n//             display: \"flex\",\n//             flexDirection: \"row\",\n//             justifyContent: \"center\",\n//             paddingTop: \"1em\",\n//           }}\n//         ></div>\n//       </div> */}\n//     </>\n//   );\n// };\n\nconst SideButton = (): JSX.Element => {\n  return (\n    <div\n      style={{\n        // position: \"absolute\",\n        left: \"-100%\",\n        height: 300,\n        width: 300,\n        backgroundColor: \"red\",\n      }}\n    >\n      hello\n    </div>\n  );\n};\n\n{\n  /* <Heading color={isCopiedJSON ? \"green\" : \"\"}>\n            1. Press the Copy Button\n          </Heading> */\n}\n{\n  /* <Heading>\n            {isCopiedJSON\n              ? \"2. Fill out the form, and paste the copied text into the Content field, then submit\"\n              : \"\"}\n          </Heading> */\n}\n","import \"../../../../css/table.css\";\n\nimport { StatusIndicator } from \"evergreen-ui\";\nimport { motion } from \"framer-motion\";\nimport React, { useEffect, useState } from \"react\";\n\nimport type LayoutData from \"../../../../data_structs/LayoutData\";\nimport { AppMode, DndTypes, DragSource } from \"../../../../enums\";\nimport {\n  useApp,\n  useLayout,\n  useStoreActions,\n  useStoreState,\n  useWindowSize,\n} from \"../../../../hooks\";\nimport appConfig from \"../../../../static/appConfig\";\nimport { formatDate } from \"../../../../utils\";\nimport CardLayout from \"../../../CardLayout/CardLayout\";\nimport IXDrop from \"../../../DragAndDrop/IXDrop\";\nimport PopOver from \"../../PopOver\";\n/**\n * Displays the available layouts.\n */\n\nconst LayoutTable = (): JSX.Element => {\n  const externalLayoutsState = useStoreState(\n    (state) => state.layoutsModel.externalLayouts\n  );\n  const activeLayoutState = useStoreState(\n    (state) => state.layoutsModel.activeLayout\n  );\n\n  const { setActiveLayout } = useLayout();\n\n  return (\n    <div>\n      <IXDrop\n        cardType={DndTypes.CLOCK}\n        className=\"table-container\"\n        droppableId={DragSource.LAYOUT_TABLE}\n        isDropDisabled={false}\n      >\n        <table>\n          <tbody>\n            <tr>\n              <th>Title</th>\n              <th>Date Added</th>\n              <th>Author</th>\n            </tr>\n          </tbody>\n        </table>\n        <table>\n          <tbody>\n            {externalLayoutsState.map((l, index) => {\n              const { id, title, author, added } = l;\n              return (\n                <tr key={index} onClick={(e) => setActiveLayout(l)}>\n                  <td\n                    key={index}\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\n                  >\n                    {id === activeLayoutState?.id && (\n                      <StatusIndicator color=\"success\" />\n                    )}\n                    <LayoutTitle layout={l} />\n                  </td>\n                  <td>{formatDate(added)}</td>\n                  <td>{author}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </IXDrop>\n    </div>\n  );\n};\n\nexport default LayoutTable;\n\nconst LayoutTitle = ({ layout }: { layout: LayoutData }): JSX.Element => {\n  const [hovered, setHovered] = useState(false);\n\n  const [position, setPosition] = useState([0, 0]);\n  const { title } = layout;\n  const { width, height } = useWindowSize();\n  const scale = 0.5;\n  const { appMode } = useApp();\n\n  const layoutCardIds = layout.sources();\n  const layoutWidgetsIds = layout.widgets();\n\n  const cards = useStoreState((state) =>\n    state.appModel.availableCards.filter((c) => layoutCardIds.includes(c.src))\n  );\n\n  const widgets = useStoreState((state) =>\n    state.appModel.availableWidgets.filter((c) =>\n      layoutWidgetsIds.includes(c.id)\n    )\n  );\n\n  // const appMod\n  return (\n    <div>\n      <div\n        onMouseEnter={(e) => {\n          const { pageX, pageY } = e;\n          setPosition([pageX, pageY]);\n          setHovered(true);\n        }}\n        onMouseLeave={(e) => {\n          setHovered(false);\n        }}\n        style={{\n          textDecoration: hovered ? \"underline\" : \"\",\n        }}\n      >\n        {title}\n      </div>\n      {appMode === AppMode.EDIT && hovered && (\n        <PopOver\n          height={height * scale}\n          visible={hovered}\n          width={width * scale}\n          x={position[0]}\n          y={position[1]}\n        >\n          <div\n            style={{\n              transform: `scale(${scale})`,\n              transformOrigin: \"inherit\",\n              height,\n              width,\n            }}\n          >\n            <CardLayout\n              appMode={AppMode.DISPLAY}\n              cardSettings={layout.layoutSettings.cardSettings}\n              cards={cards}\n              cols={appConfig.gridSettings.gridCols}\n              height={height}\n              layout={layout.layout}\n              margin={[20, 20]}\n              onLayoutChange={(l) => {}}\n              rows={appConfig.gridSettings.gridRows}\n              widgets={widgets}\n              width={width}\n            />\n          </div>\n        </PopOver>\n      )}\n    </div>\n  );\n};\n","import { AddIcon, IconButton, RefreshIcon } from \"evergreen-ui\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { useLayout, useSheets, useStoreState } from \"../../../../hooks\";\nimport Button from \"../../../Shared/Button\";\nimport TabPane from \"../TabPane\";\nimport GoogleFormPopup from \"./GoogleFormPopup\";\nimport LayoutTable from \"./LayoutTable\";\n\nconst LayoutTab = (): JSX.Element => {\n  const { refreshSheets } = useSheets();\n  const [showNewLayoutPopup, setShowNewLayoutPopup] = useState(false);\n\n  return (\n    <div>\n      <TabPane\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n          justifyContent: \"flex-start\",\n        }}\n      >\n        <Button\n          appearance=\"primary\"\n          iconBefore={<AddIcon />}\n          intent=\"success\"\n          onClick={(e) => {\n            setShowNewLayoutPopup(true);\n          }}\n          text=\"Add New Layout\"\n          width=\"55%\"\n        />\n        <div style={{ height: \"auto\", width: \"10%\" }}>\n          <IconButton\n            height=\"100%\"\n            icon={<RefreshIcon />}\n            onClick={(\n              _event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n            ) => {\n              refreshSheets();\n            }}\n            width=\"20%\"\n          />\n        </div>\n      </TabPane>\n      {showNewLayoutPopup && (\n        <GoogleFormPopup\n          onCloseComplete={() => {\n            refreshSheets();\n            setShowNewLayoutPopup(false);\n          }}\n          visible={showNewLayoutPopup}\n        />\n      )}\n      <div>\n        <LayoutTable />\n      </div>\n    </div>\n  );\n};\n\nexport default LayoutTab;\n","import type { ReactNode} from \"react\";\nimport React, { ReactElement, useEffect, useRef } from \"react\";\nimport type {\n  DraggableProps} from \"react-beautiful-dnd\";\nimport {\n  Draggable,\n  DraggableProvided,\n  DraggingStyle,\n} from \"react-beautiful-dnd\";\nimport { createPortal } from \"react-dom\";\n\nimport type { DndTypes } from \"../../enums\";\nimport { useStoreState } from \"../../hooks\";\n\ninterface DraggableDiv extends Omit<DraggableProps, \"children\"> {\n  dndType: DndTypes;\n  className?: string;\n  children: ReactNode;\n  dragAll?: boolean;\n  height?: number;\n  id?: string;\n}\n\n/**\n * A draggable div for wrapping draggable widgets in the editor panel.\n */\nconst DraggableWidget = ({\n  dndType,\n  className,\n  children,\n  dragAll,\n  draggableId,\n  index,\n  height,\n  id,\n}: DraggableDiv): JSX.Element => {\n  const currentLayoutState = useStoreState(\n    (state) => state.layoutsModel.activeLayout\n  );\n\n  let isInLayout = currentLayoutState?.layout.lg\n    .map((l) => l.i)\n    .includes(draggableId);\n\n  useEffect(() => {\n    isInLayout = currentLayoutState?.layout.lg\n      .map((l) => l.i)\n      .includes(draggableId);\n  }, [currentLayoutState]);\n  const getItemStyle = () => ({\n    display: isInLayout ? \"none\" : \"block\",\n  });\n\n  // const renderDraggable = useDraggableInPortal();\n\n  if (!React.isValidElement(children)) return <div />;\n  return (\n    <div\n      style={{\n        display: isInLayout ? \"block\" : \"block\",\n        height: height ?? \"\",\n      }}\n    >\n      {/* <div style={{ display: isInLayout ? \"none\" : \"block\" }}> */}\n      <Draggable draggableId={draggableId} index={index}>\n        {\n          //@ts-ignore\n          (provided, snapshot) => {\n            // renderDraggable((provided, snapshot) => {\n            console.log(isInLayout);\n            if (\n              snapshot.isDragging &&\n              provided &&\n              provided.draggableProps &&\n              provided.draggableProps.style\n            ) {\n              //@ts-ignore\n              provided.draggableProps.style.left =\n                //@ts-ignore\n                provided.draggableProps.style.offsetLeft;\n              //@ts-ignore\n              provided.draggableProps.style.top =\n                //@ts-ignore\n                provided.draggableProps.style.offsetTop;\n            }\n            return (\n              <div\n                className={className}\n                id={id}\n                ref={provided.innerRef}\n                // style={getItemStyle()}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n              >\n                {React.cloneElement(children, { provided })}\n              </div>\n            );\n          }\n        }\n      </Draggable>\n    </div>\n  );\n};\n\nexport default DraggableWidget;\n","import \"../../../../css/table.css\";\nimport \"../../../../css/viewCard.css\";\nimport \"../../../../css/widgetsTab.css\";\n\nimport { Heading } from \"evergreen-ui\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Layout, Layouts } from \"react-grid-layout\";\n\nimport type WidgetData from \"../../../../data_structs/WidgetData\";\nimport { WidgetType } from \"../../../../data_structs/WidgetData\";\nimport { DndTypes, DragSource } from \"../../../../enums\";\nimport {\n  useApp,\n  useLayout,\n  useStoreState,\n  useWindowSize,\n} from \"../../../../hooks\";\nimport appConfig from \"../../../../static/appConfig\";\nimport DraggableWidget from \"../../../DragAndDrop/DraggableWidget\";\nimport IXDrop from \"../../../DragAndDrop/IXDrop\";\nimport Clock from \"../../../Widgets/Clock\";\nimport HowToUse from \"../../../Widgets/HowToUse\";\nimport WidgetRenderer from \"../../../Widgets/WidgetRenderer\";\nimport TabPane from \"../TabPane\";\n\n/**\n * Table for displaying the available card layouts\n */\nconst WidgetsTab = (): JSX.Element => {\n  const { activeLayout, activeWidgets } = useLayout();\n  const availableWidgets = useStoreState(\n    (state) => state.appModel.availableWidgets\n  );\n  //\n  // const {  } = useApp();\n\n  const [widgetsToRender, setWidgetsToRender] =\n    useState<WidgetData[]>(availableWidgets);\n\n  useEffect(() => {\n    setWidgetsToRender(\n      availableWidgets.filter((w) => !activeLayout?.widgets().includes(w.id))\n    );\n  }, [availableWidgets, activeLayout, activeWidgets.length]);\n\n  return (\n    <TabPane>\n      <div\n        style={{\n          backgroundColor: \"#1f1f1f\",\n          borderRadius: \".5em\",\n          overflow: \"hidden\",\n          padding: \"1em\",\n        }}\n      >\n        {widgetsToRender.length === 0 ? (\n          <div>All Widgets in Use</div>\n        ) : (\n          <IXDrop\n            cardType={DndTypes.CLOCK}\n            className=\"widgets-container\"\n            droppableId={DragSource.WIDGETS_TABLE}\n            isDropDisabled={false}\n          >\n            <WidgetWrapper>\n              {(scale, colWidth, rowHeight) => {\n                return widgetsToRender\n                  .filter((w) => !activeLayout?.widgets().includes(w.id))\n                  .map((w, index) => {\n                    return (\n                      <DraggableWidget\n                        className=\"draggable-widget\"\n                        dndType={DndTypes.WIDGET}\n                        draggableId={w.id}\n                        height={scale * w.h * rowHeight}\n                        id={`widgets-tab-draggable-${w.id}`}\n                        index={index}\n                        isDragDisabled={false}\n                        key={index}\n                      >\n                        <WidgetRenderer\n                          colWidth={colWidth}\n                          rowHeight={rowHeight}\n                          scale={scale}\n                          widget={w}\n                        />\n                      </DraggableWidget>\n                    );\n                  });\n              }}\n            </WidgetWrapper>\n          </IXDrop>\n        )}\n      </div>\n    </TabPane>\n  );\n};\n\nexport default WidgetsTab;\n\nconst WidgetWrapper = ({\n  children,\n}: {\n  children: (\n    scale: number,\n    colWidth: number,\n    rowHeight: number\n  ) => JSX.Element | JSX.Element[];\n}): JSX.Element => {\n  const editorPanelReference = useRef<HTMLDivElement>();\n  const [scalar, setScalar] = useState(1);\n  const { width, height } = useWindowSize();\n\n  const colWidth = width / appConfig.gridSettings.gridCols;\n  const rowHeight = height / appConfig.gridSettings.gridRows;\n\n  useEffect(() => {\n    editorPanelReference.current = document.querySelector(\n      \"#editor-panel\"\n    ) as HTMLDivElement;\n    console.log(editorPanelReference.current.getBoundingClientRect().width);\n    setScalar(\n      editorPanelReference.current.getBoundingClientRect().width / width\n    );\n  }, [width]);\n\n  return <div>{children(scalar * 1.5, colWidth, rowHeight)}</div>;\n};\n","import \"../../../css/editorPanel.css\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { Heading } from \"evergreen-ui\";\nimport React from \"react\";\nimport { Tab, TabList, TabPanel,Tabs } from \"react-tabs\";\n\nimport { useErrors } from \"../../../hooks\";\nimport AppTab from \"./AppTab/AppTab\";\nimport ContentTab from \"./ContentsTab/ContentsTab\";\nimport IssuesTab from \"./IssuesTab/IssuesTab\";\nimport LayoutTab from \"./LayoutTab/LayoutTab\";\nimport WidgetsTab from \"./WidgetsTab/WidgetsTab\";\n// https://github.com/goodoldneon/react-drag-and-dock#api\n\n/**Contains all the tab components for the editor panel */\nconst Editor = (): JSX.Element => {\n  return (\n    <Tabs>\n      <TabList>\n        <Tab>Content</Tab>\n        <Tab>Widgets</Tab>\n        <Tab>Layouts</Tab>\n        <Tab>App Settings</Tab>\n        <Tab>\n          Issues <ErrorsNofictions />\n        </Tab>\n      </TabList>\n      <TabPanel>\n        <ContentTab />\n      </TabPanel>\n      <TabPanel>\n        <WidgetsTab />\n      </TabPanel>\n      <TabPanel>\n        <LayoutTab />\n      </TabPanel>\n      <TabPanel>\n        <AppTab />\n      </TabPanel>\n      <TabPanel>\n        <IssuesTab />\n      </TabPanel>\n    </Tabs>\n  );\n};\n\nexport default Editor;\n\nconst ErrorsNofictions = (): JSX.Element => {\n  const { allErrors } = useErrors();\n  return (\n    <div\n      style={{\n        backgroundColor: allErrors.length > 0 ? \"#D14343\" : \"#52BD95\",\n        opacity: 0.5,\n        borderRadius: \"50%\",\n        width: 20,\n        height: 20,\n        aspectRatio: \"1/1\",\n        fontSize: \"70%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginLeft: \"1em\",\n      }}\n    >\n      {50 < allErrors.length ? \"50+\" : allErrors.length}\n    </div>\n  );\n};\n","import \"../../css/card/settingsMenu.css\";\n\nimport type { ActionCreator } from \"easy-peasy\";\nimport {\n  Button as EvergreenButton,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  Heading,\n  IconButton,\n  SelectMenu,\n} from \"evergreen-ui\";\nimport { motion } from \"framer-motion\";\nimport React, { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\n\nimport type CardData from \"../../data_structs/CardData\";\nimport { useCardEditor, useLayout } from \"../../hooks\";\nimport Button from \"../Shared/Button\";\nimport FlexColumn from \"../Shared/FlexColumn\";\nimport FlexRow from \"../Shared/FlexRow\";\nimport TabPane from \"./EditorTabs/TabPane\";\n\nconst SettingsMenu = ({ card }: { card: CardData }): JSX.Element => {\n  const {\n    setCardScale,\n    setCardBackgroundColor,\n    cardBackgroundColor,\n    clearEditingCard,\n    setCardContentFit,\n    cardContentFit,\n  } = useCardEditor();\n  const { activeLayout } = useLayout();\n\n  const [currentCardSettings, setCurrentCardSettings] = useState(\n    activeLayout?.getCardSettings(card.id)\n  );\n  const [cardSettingsToGet, setcardSettingsToGet] = useState(\n    activeLayout?.getCardSettings(card.id)\n  );\n\n  useEffect(() => {\n    setcardSettingsToGet(activeLayout?.getCardSettings(card.id));\n    console.log(cardSettingsToGet);\n  }, [card.id]);\n\n  return (\n    <motion.div\n      style={{\n        // height: \"100%\",\n        top: \"6%\",\n        height: \"95%\",\n        width: \"inherit\",\n        // height: \"inherit\",\n        pointerEvents: \"all\",\n        position: \"absolute\",\n        zIndex: 1000,\n        // top: 0,\n        backgroundColor: \"#2d2d2d\",\n        boxSizing: \"border-box\",\n      }}\n    >\n      <TabPane style={{ width: \"auto\" }}>\n        <FlexColumn>\n          <InputRow title=\"Background Color:\">\n            <input\n              className=\"nodrag\"\n              defaultValue=\"rbga(0,0,0,0)\"\n              onChange={(e) => {\n                setCardBackgroundColor({\n                  cardId: card.id,\n                  color: e.target.value,\n                });\n              }}\n              type=\"color\"\n              value={cardBackgroundColor}\n            />\n          </InputRow>\n          <InputRow title=\"Scale: \">\n            <ScaleControls\n              scale={currentCardSettings?.scale ?? 0}\n              setScale={(scale) => {\n                setCardScale({ cardId: card.id, scale });\n              }}\n            />\n          </InputRow>\n          <InputRow title=\"Object Fit: \">\n            <Select\n              className=\"basic-single\"\n              classNamePrefix=\"select\"\n              defaultValue={cardContentFit}\n              onChange={(selected: any) => {\n                console.log(selected);\n                setCardContentFit({\n                  cardId: card.id,\n                  contentFit: selected.value,\n                });\n              }}\n              style={{ option: { color: \"black\" } }}\n              //@ts-ignore\n              options={[\"contain\", \"fill\", \"cover\", \"scale-down\", \"none\"].map(\n                (l) => {\n                  return { value: l, label: l };\n                }\n              )}\n            />\n          </InputRow>\n          <FlexRow style={{ padding: \"2vmin\" }}></FlexRow>\n          <Button\n            width={\"100%\"}\n            height={60}\n            text=\"Exit Card Editor\"\n            onClick={(e) => {\n              clearEditingCard();\n            }}\n          />\n        </FlexColumn>\n      </TabPane>\n    </motion.div>\n  );\n};\n\nconst InputRow = ({\n  title,\n  children,\n}: {\n  title: string;\n  children: JSX.Element | JSX.Element[];\n}): JSX.Element => {\n  return (\n    <Heading\n      className=\"menu-input-row\"\n      size={800}\n      style={{\n        display: \"flex\",\n        color: \"white\",\n        padding: \".25em\",\n        alignItems: \"center\",\n      }}\n    >\n      {title}\n      {children}\n    </Heading>\n  );\n};\n\nconst ScaleControls = ({\n  setScale,\n  scale,\n}: {\n  setScale: (scale: number) => void;\n  scale: number;\n}): JSX.Element => {\n  const [localScale, setLocalScale] = useState(scale);\n\n  useEffect(() => {\n    setScale(localScale);\n  }, [localScale]);\n\n  return (\n    <FlexRow>\n      <IconButton\n        icon={<ChevronLeftIcon size={30} />}\n        onClick={() => {\n          setLocalScale(localScale - 0.1);\n        }}\n        style={{ width: \"30%\", height: \"100%\" }}\n      />\n      <input\n        defaultValue={0.5}\n        onChange={(e) => {\n          // setLocalScale(localScale);\n          // setScale(local);\n        }}\n        style={{ width: 30 }}\n        type=\"text\"\n        value={scale.toString().slice(0, 3)}\n      />\n      <IconButton\n        icon={<ChevronRightIcon size={30} />}\n        onClick={() => {\n          setLocalScale(localScale + 0.1);\n        }}\n        style={{ width: \"30%\", height: \"100%\" }}\n      />\n    </FlexRow>\n  );\n};\n\nexport default SettingsMenu;\n","import \"../../css/editorPanel.css\";\n\nimport classNames from \"classnames\";\nimport { MinusIcon, PlusIcon } from \"evergreen-ui\";\nimport React, { useState } from \"react\";\nimport ReactDom from \"react-dom\";\nimport Draggable from \"react-draggable\";\n\nimport { AppMode } from \"../../enums\";\nimport { useApp, useStoreState } from \"../../hooks\";\nimport EditorTabs from \"./EditorTabs/EditorTabs\";\nimport SettingsMenu from \"./SettingsMenu\";\n\n/**Draggable panel which contains the editor body, as well as a header bar with a min/max button for resizing the panel. Renders to \"editor-panel-container\" div in index.html*/\n\nconst EditorPanel = (): JSX.Element => {\n  const { appMode, editingCard } = useApp();\n\n  const [minimized, setMinimized] = useState(false);\n\n  const editorPanelClass = classNames(\"editor-panel\", {\n    \"editor-panel-full\": !minimized,\n    hidden: appMode === AppMode.DISPLAY,\n    \"editor-panel-minimized\": minimized,\n  });\n  const editorClass = classNames(\"editor\", {\n    \"editor-visible\": appMode === AppMode.EDIT,\n  });\n\n  return ReactDom.createPortal(\n    <Draggable\n      bounds={{\n        left: 0,\n        top: 0,\n        right: window.innerWidth - 50,\n        bottom: window.innerHeight - 50,\n      }}\n      defaultClassName={editorPanelClass}\n      defaultPosition={{ x: 100, y: 100 }}\n      handle=\".editor-panel-handle\"\n    >\n      <div className={editorClass} id=\"editor-panel\">\n        <PanelHeader>\n          <BarButton\n            icon={<PlusIcon />}\n            onMouseUp={() => {\n              setMinimized(false);\n            }}\n          />\n          <BarButton\n            icon={<MinusIcon />}\n            onMouseUp={() => {\n              setMinimized(true);\n            }}\n          />\n        </PanelHeader>\n        {editingCard && <SettingsMenu card={editingCard} />}\n        <EditorTabs />\n      </div>\n    </Draggable>,\n    document.querySelector(\"#editor-panel-container\") as HTMLDivElement\n  );\n};\n\nexport default React.memo(EditorPanel);\n\ninterface PanelHeaderProperties {\n  children: JSX.Element | JSX.Element[];\n}\nconst PanelHeader = ({ children }: PanelHeaderProperties): JSX.Element => {\n  return <div className=\"editor-panel-handle panel-header\">{children}</div>;\n};\n\nconst BarButton = ({\n  icon,\n  onMouseUp,\n}: {\n  icon: JSX.Element;\n  onMouseUp: React.MouseEventHandler<HTMLDivElement>;\n}): JSX.Element => {\n  return (\n    <div className=\"window-button\" onMouseUp={onMouseUp}>\n      {icon}\n    </div>\n  );\n};\n","import { motion } from \"framer-motion\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useLongPress } from \"react-use\";\n\nimport { useStoreActions } from \"../hooks\";\nimport appConfig from \"../static/appConfig\";\n\n/**Invisible button in the bottom left corner of the screen. Hold touch/click to toggle app mode */\nconst ModeChangeButton = (): JSX.Element => {\n  const toggleModeAction = useStoreActions(\n    (actions) => actions.appModel.toggleAppMode\n  );\n\n  const longPressEvent = useLongPress(() => {\n    toggleModeAction();\n  });\n\n  const modeChangeButtonStyle = {\n    position: \"absolute\",\n    width: 50,\n    height: 50,\n    border: appConfig.showModeSwitchButton ? \"1px solid red\" : \"none\",\n    bottom: 0,\n    left: 0,\n    opacity: 0,\n  } as React.CSSProperties;\n\n  return ReactDOM.createPortal(\n    <motion.div\n      style={{ ...modeChangeButtonStyle, backgroundColor: \"white\" }}\n      whileTap={{ backgroundColor: \"green\", opacity: 1 }}\n    >\n      <div style={modeChangeButtonStyle} {...longPressEvent}></div>,\n    </motion.div>,\n    document.querySelector(\"#mode-change-button\") as HTMLElement\n  );\n};\n\nexport default ModeChangeButton;\n","import React, { useEffect,useState } from \"react\";\n\nconst Screen = ({\n  children,\n  padding,\n}: {\n  children: JSX.Element | JSX.Element[];\n  padding?: string;\n}): JSX.Element => {\n  return (\n    <div style={{width: \"100vw\", height: \"100vh\"}}>\n      {children}\n    </div>\n  );\n};\n\nexport default Screen;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nconst Timer = ({ seconds, onEnd }: { seconds: number; onEnd: () => void }) => {\n  // initialize timeLeft with the seconds prop\n  const [timeLeft, setTimeLeft] = useState(seconds);\n\n  useEffect(() => {\n    // exit early when we reach 0\n    if (timeLeft == 0) {\n      onEnd();\n    }\n\n    if (!timeLeft) return;\n\n    // save intervalId to clear the interval when the\n    // component re-renders\n    const intervalId = setInterval(() => {\n      setTimeLeft(timeLeft - 1);\n    }, 1000);\n\n    // clear interval on re-render to avoid memory leaks\n    return () => clearInterval(intervalId);\n    // add timeLeft as a dependency to re-rerun the effect\n    // when we update it\n  }, [timeLeft]);\n\n  return (\n    <div>\n      <h1>{timeLeft}</h1>\n    </div>\n  );\n};\n\nexport default Timer;\n","import { Heading, Spinner, WarningSignIcon } from \"evergreen-ui\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport React, { useContext, useEffect, useState } from \"react\";\n\nimport Timer from \"./components/Shared/Timer\";\nimport { useApp, useSheets } from \"./hooks\";\nimport appConfig from \"./static/appConfig\";\n\ninterface LoadingScreenProperties {\n  setVisible: (v: boolean) => void;\n  sheetsAreLoaded: boolean;\n}\n\nconst LoadingScreenContext = React.createContext<LoadingScreenProperties>({\n  setVisible: (v: boolean) => {},\n  sheetsAreLoaded: false,\n});\n\nconst LoadingScreen = (): JSX.Element => {\n  const { sheetsAreLoaded } = useApp();\n  const { urlQueryLink, fetchTopLevelSheet } = useSheets();\n\n  console.log(sheetsAreLoaded);\n\n  const [visible, setVisible] = useState(true);\n\n  useEffect(() => {\n    if (sheetsAreLoaded) {\n      setVisible(false);\n    }\n  }, [sheetsAreLoaded]);\n\n  const variants = {\n    in: {\n      opacity: [0, 1],\n      y: [\"-30%\", \"-50%\"],\n    },\n    out: {\n      y: \"-60%\",\n      opacity: 0,\n    },\n  };\n  return (\n    <LoadingScreenContext.Provider\n      value={{\n        setVisible,\n        sheetsAreLoaded,\n      }}\n    >\n      {\n        //@ts-ignore\n        <AnimatePresence>\n          {visible && (\n            <motion.div\n              animate=\"in\"\n              exit=\"out\"\n              // initial={\"in\"}\n              style={{\n                width: \"40%\",\n                height: \"50%\",\n                minHeight: \"fit-content\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                textAlign: \"center\",\n                position: \"absolute\",\n                justifyContent: \"center\",\n                zIndex: 100,\n                left: \"50%\",\n                x: \"-50%\",\n                top: \"50%\",\n                borderRadius: \"10px\",\n                backdropFilter: \"blur(10px)\",\n                border: \" 1px solid rgba(255, 255, 255, 0.294)\",\n                boxShadow: \"0 8px 32px 0 rgba(49, 49, 49, 0.37)\",\n                padding: \"1em\",\n                opacity: 0,\n              }}\n              variants={variants}\n            >\n              {!sheetsAreLoaded && urlQueryLink && (\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    // justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Heading size={900}>\n                    Loading Content from Google Sheets\n                  </Heading>\n                  <Spinner size={100} />\n                </div>\n              )}\n\n              {!urlQueryLink && <NoUrlError />}\n            </motion.div>\n          )}\n        </AnimatePresence>\n      }\n    </LoadingScreenContext.Provider>\n  );\n};\n\nexport default LoadingScreen;\n\nconst NoUrlError = (): JSX.Element => {\n  const { setVisible } = useContext(LoadingScreenContext);\n  const { fetchTopLevelSheet } = useSheets();\n\n  return (\n    <>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <WarningSignIcon size={100} />\n      </div>\n      <Heading size={900}>{}</Heading>\n      <Heading size={900}>\n        No Google Sheet Provided via URL! <br></br>\n        <br></br>Switching to backup sheet in{\" \"}\n        {`${appConfig.timers.noUrlTimeout}`}s.\n        <Timer\n          onEnd={() => {\n            setVisible(false);\n            fetchTopLevelSheet(appConfig.backupParentSheetUrl);\n          }}\n          seconds={appConfig.timers.noUrlTimeout}\n        />\n        Visit{\" \"}\n        <a\n          href=\"https://github.com/NCSU-Libraries/cupboard-dxl-display/wiki\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          Cupboard Wiki\n        </a>{\" \"}\n        for more information on setting up your Google Sheets for Cupboard.\n      </Heading>\n    </>\n  );\n};\n","import \"./App.global.css\";\nimport \"./css/global.css\";\n\nimport { DndContext } from \"@dnd-kit/core\";\nimport React from \"react\";\nimport type { Layouts } from \"react-grid-layout\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport AppDragContext from \"./components/AppWrappers/AppDragContext\";\nimport AppTimers from \"./components/AppWrappers/AppTimers\";\nimport Background from \"./components/Background\";\nimport CardLayout from \"./components/CardLayout/CardLayout\";\nimport EditorPanel from \"./components/EditorPanel/EditorPanel\";\nimport Loader from \"./components/Loader\";\nimport ModeChangeButton from \"./components/ModeChangeButton\";\nimport Screen from \"./components/Shared/Screen\";\nimport { AppMode } from \"./enums\";\nimport {\n  useApp,\n  useEffectOnce,\n  useLayout,\n  useQuery,\n  useSheets,\n  useWindowSize,\n} from \"./hooks\";\nimport LoadingScreen from \"./LoadingScreen\";\nimport appConfig from \"./static/appConfig\";\n\n/**\n * High level container, the root component. Initial fetch requests to spreadsheets are made here via a useEffect hook.\n */\n\nconst Body = (): JSX.Element => {\n  const { fetchTopLevelSheet, setUrlSheet } = useSheets();\n\n  const { activeLayout, setBufferLayout, activeCards, activeWidgets } =\n    useLayout();\n\n  const { appMode, sheetsAreLoaded } = useApp();\n\n  const query = useQuery();\n  useEffectOnce(() => {\n    setUrlSheet(query.get(\"url\"));\n    const url = query.get(\"url\");\n    if (url) {\n      fetchTopLevelSheet(url);\n    }\n  });\n  const { width, height } = useWindowSize();\n\n  // http://localhost:3000/?url=https://docs.google.com/spreadsheets/d/e/2PACX-1vRalMG47cvXmCbEqeIJWn5qwd9bPhHUV16_VN7LuKsv53YQdn9e8XSAzNulXCtP_BIFBTUy0Z5e6KKE/pub?output=csv\n  return (\n    <>\n      <Background />\n      <ModeChangeButton />\n      <LoadingScreen />\n      {sheetsAreLoaded && (\n        <AppTimers>\n          <AppDragContext>\n            <Loader visible={sheetsAreLoaded} />\n            <EditorPanel />\n            <Screen>\n              <DndContext>\n                {activeLayout && sheetsAreLoaded && (\n                  <CardLayout\n                    appMode={appMode}\n                    cardSettings={activeLayout.layoutSettings.cardSettings}\n                    cards={[...activeCards]}\n                    cols={appConfig.gridSettings.gridCols}\n                    height={height}\n                    isDraggable={appMode === AppMode.EDIT}\n                    isResizable={appMode === AppMode.EDIT}\n                    layout={activeLayout.layout}\n                    margin={[20, 20]}\n                    onLayoutChange={(l) => {\n                      const newLayout: Layouts = {\n                        lg: l,\n                        md: l,\n                        sm: l,\n                        xs: l,\n                        xxs: l,\n                      };\n                      if (appMode === AppMode.EDIT) {\n                        activeLayout.setGridLayout(newLayout);\n                      }\n                      setBufferLayout(newLayout);\n                    }}\n                    rows={appConfig.gridSettings.gridRows}\n                    widgets={[...activeWidgets]}\n                    width={width}\n                  />\n                )}\n              </DndContext>\n            </Screen>\n          </AppDragContext>\n        </AppTimers>\n      )}\n    </>\n  );\n};\n\nconst App = (): JSX.Element => {\n  return (\n    <BrowserRouter>\n      <Body />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import imageThumbnail from \"image-thumbnail\";\n\nimport { InteractionType } from \"../enums\";\nimport IFrameValidator from \"../IFrameValidator\";\nimport type RawCardRow from \"../interfaces/RawCardRow\";\nimport type { WidgetType } from \"./WidgetData\";\n\nexport type ContentType = \"video\" | \"image\" | \"website\" | \"embed\" | \"widget\";\n\ninterface ContentCardData {\n  src: string;\n  title: string;\n  added: Date;\n  sourceId: string;\n  author: string;\n}\n\ninterface WidgetCardData {\n  widgetType: WidgetType;\n}\n/**Contains all the information needed to create a display card */\nexport default class CardData {\n  readonly id: string;\n  readonly src: string;\n  readonly title: string;\n  readonly added?: Date;\n  readonly backgroundColor?: string;\n  readonly scale?: string;\n  // readonly sourceId: string;\n  readonly author: string;\n  readonly interaction: InteractionType;\n  readonly contentType: ContentType;\n  readonly metaData: ContentCardData | WidgetCardData;\n  validator!: IFrameValidator;\n  isActive!: boolean;\n  failed!: boolean;\n\n  constructor(row: RawCardRow, index: number) {\n    // console.log(`GOT IMAGE CARD ROW: ${isImgLink(row.src)}`);\n    this.id = `row_${index}_${row.title}`;\n    // this.id = row.src;\n    this.src = row.src;\n    this.title = row.title;\n    this.added = new Date(row.added);\n    // this.sourceId = row.src;\n    this.author = row.author;\n    this.interaction =\n      InteractionType[row.interaction as keyof typeof InteractionType];\n    this.contentType = getContentType(this.src);\n    if (this.contentType === \"widget\" && row.widgetType) {\n      this.metaData = {\n        widgetType: row.widgetType,\n      };\n      this.id = row.widgetType;\n    } else {\n      this.metaData = {\n        src: row.src,\n        title: row.title,\n        added: new Date(row.added),\n        sourceId: row.src,\n        author: row.author,\n      };\n      this.id = row.src;\n    }\n\n    this.isActive = false;\n    this.validator = new IFrameValidator(this.src);\n    this.failed = false;\n\n    // if ()\n  }\n  setActive(b: boolean): void {\n    this.isActive = b;\n  }\n\n  fail(): void {\n    console.log(this.validator.errors);\n    this.failed = true;\n    // this.error =\n  }\n  // generateThumbnail(): void {\n  //   imageThumbnail('resources/images/dog.jpg')\n  //   .then(thumbnail => { console.log(thumbnail) })\n  //   .catch(err => console.error(err));\n  //   // try {\n  //   //   const thumbnail = await imageThumbnail();\n  //   //   console.log(thumbnail);\n  //   // } catch (err) {\n  //   //   console.error(err);\n  //   // }\n  // }\n}\n\nfunction getContentType(url: string): ContentType {\n  if (isImgLink(url)) return \"image\";\n  if (isVideo(url)) return \"video\";\n  if (isEmbed(url)) return \"embed\";\n  if (isWebsite(url)) return \"website\";\n  return \"widget\";\n}\n\nfunction isImgLink(url: string) {\n  if (typeof url !== \"string\") return false;\n  const imageReg = /[./](gif|jpg|jpeg|tiff|png)$/i;\n  return imageReg.test(url);\n}\n\nfunction isVideo(url: string) {\n  if (typeof url !== \"string\") return false;\n  const videoReg = /[./](mp4|webm|mov)$/i;\n  return videoReg.test(url);\n  // url.match(/^http[^\\?]*.(jpg|jpeg|gif|png|tiff|bmp)(\\?(.*))?$/gim) != null\n}\n\nfunction isEmbed(url: string) {\n  if (typeof url !== \"string\") return false;\n  return url.includes(\"embed\");\n}\n\nfunction isWebsite(url: string) {\n  if (typeof url !== \"string\") return false;\n  return url.includes(\"https\");\n}\n","import type { WidgetInfo } from \"../static/widgets\";\nimport type { ContentType } from \"./CardData\";\n\nexport type WidgetType = \"clock\" | \"info\";\n\n/**Contains all the information needed to create a display card */\nexport default class WidgetData {\n  readonly id: WidgetType;\n  readonly contentType: ContentType;\n  readonly w: number;\n  readonly h: number;\n\n  isActive: boolean;\n\n  constructor(data: WidgetInfo) {\n    // constructor(name: WidgetType) {\n    this.id = data.id;\n    this.w = data.w;\n    this.h = data.h;\n    // this.id = name as string;\n    this.isActive = false;\n    this.contentType = \"widget\";\n  }\n  setActive(b: boolean): void {\n    this.isActive = b;\n  }\n}\n","import type { WidgetType } from \"../data_structs/WidgetData\";\n\nconst clock = { id: \"clock\" as WidgetType, w: 2, h: 2 };\nconst info = { id: \"info\" as WidgetType, w: 1, h: 1 };\n\nexport interface WidgetInfo {\n  id: WidgetType;\n  w: number;\n  h: number;\n}\n\ntype Widgets = {\n  [k in WidgetType]: { id: WidgetType; w: number; h: number };\n};\n\nconst widgets: Widgets = {\n  clock,\n  info,\n};\n\nexport default widgets;\n","import type { Action, Thunk, ThunkOn } from \"easy-peasy\";\r\nimport { action, thunk, thunkOn } from \"easy-peasy\";\r\nimport _ from \"lodash\";\r\n\r\nimport CardData from \"../data_structs/CardData\";\r\nimport WidgetData from \"../data_structs/WidgetData\";\r\nimport { AppMode } from \"../enums\";\r\nimport type AppError from \"../interfaces/AppError\";\r\nimport type RawCardRow from \"../interfaces/RawCardRow\";\r\nimport appConfig from \"../static/appConfig\";\r\nimport widgets from \"../static/widgets\";\r\nimport type { StoreModel } from \"./index\";\r\n/**\r\n * Core app model\r\n * Responsible for managing the pool of active cards in a layout, global app state like if the App's\r\n * resources are loaded,\r\n */\r\n\r\nexport interface AppDataModel {\r\n  /**The active cards present in the currently displayed layout  */\r\n  activeCards: CardData[];\r\n  /**The widgets present in the currently displayed layout */\r\n  activeWidgets: WidgetData[];\r\n  /**Add a new AppError to appErrors */\r\n  addAppError: Action<AppDataModel, AppError>;\r\n  /**List of current App Errors */\r\n  appErrors: AppError[];\r\n  /**The current AppMode of the Application, \"DISPLAY\" or \"EDIT\"  @*/\r\n  appMode: AppMode;\r\n  /**The entire array of all available cards from the Cards spreadsheet */\r\n  availableCards: CardData[];\r\n  /**The entire list of available cards from the Widgets Spreadsheets */\r\n  availableWidgets: WidgetData[];\r\n  editingCard: CardData | undefined;\r\n  /**True if all sheets were successfully loaded */\r\n  isLoaded: boolean;\r\n  /**Fires when the AppMode changes */\r\n  manageViewModeChange: Thunk<AppDataModel, AppMode>;\r\n  /**Fire on succesfully loading the Google Sheet for the cards */\r\n  onCardSheetLoadSuccess: ThunkOn<AppDataModel, never, StoreModel>;\r\n  /**Fires when a layout it selected*/\r\n  onSetActiveLayout: ThunkOn<AppDataModel, never, StoreModel>;\r\n  /**Fires when a card is released on top  of another card, taking it's place */\r\n  onSwapCardContent: ThunkOn<AppDataModel, never, StoreModel>;\r\n  /**Disable or enable the rotation of layouts. If false, then layouts will not rotate */\r\n  rotateLayouts: boolean;\r\n  /**Set the time between layout rotations */\r\n  rotationSpeed: number;\r\n  /**Set AppModel.ActiveCards */\r\n  setActiveCards: Action<AppDataModel, CardData[]>;\r\n  /**set AppModel.activeWidgets */\r\n  setActiveWidgets: Action<AppDataModel, WidgetData[]>;\r\n  /**set AppModel.appMode */\r\n  setAppMode: Action<AppDataModel, AppMode>;\r\n  /**set AppModel.availableCards*/\r\n  setAvailableCards: Action<AppDataModel, CardData[]>;\r\n  /**set AppModel.editingCard */\r\n  setEditingCard: Action<AppDataModel, CardData | undefined>;\r\n  /**set AppModel.rotateLayouts*/\r\n  setRotateLayouts: Action<AppDataModel, boolean>;\r\n  /**set the duration which each layout displays before showing the next layout */\r\n  setRotationSpeed: Action<AppDataModel, number>;\r\n  /**Switch the application mode between Edit and Display Mode */\r\n  toggleAppMode: Thunk<AppDataModel, never>;\r\n}\r\n\r\nconst availableWidgets = Object.values(widgets).map(\r\n  (widgetInfo) => new WidgetData(widgetInfo)\r\n);\r\n\r\nconst appModel: AppDataModel = {\r\n  activeCards: [],\r\n  activeWidgets: [],\r\n  addAppError: action((state, error) => {\r\n    const errorsString = state.appErrors.map(\r\n      (error) => JSON.stringify(error) as string\r\n    );\r\n    const newError = JSON.stringify(error);\r\n    if (!errorsString.includes(newError)) {\r\n      state.appErrors.push(error);\r\n    }\r\n  }),\r\n  appErrors: [],\r\n  appMode: AppMode.DISPLAY,\r\n  availableCards: [],\r\n  availableWidgets: availableWidgets,\r\n  editingCard: undefined,\r\n  isLoaded: false,\r\n  manageViewModeChange: thunk((actions, viewModeEnum) => {\r\n    actions.setAppMode(viewModeEnum);\r\n    switch (viewModeEnum) {\r\n      case AppMode.EDIT:\r\n        break;\r\n      case AppMode.DISPLAY:\r\n        break;\r\n      case AppMode.CYCLE:\r\n        break;\r\n      default:\r\n        undefined;\r\n    }\r\n  }),\r\n  onCardSheetLoadSuccess: thunkOn(\r\n    (actions, storeActions) =>\r\n      storeActions.googleSheetsModel.setAppGoogleSheetData,\r\n    async (actions, target, { getState }) => {\r\n      target.payload.getSheetRows<RawCardRow>(\"CARDS\").then((rows) => {\r\n        const rawCardRowsArray = rows.map((row) => {\r\n          return {\r\n            added: row.added,\r\n            author: row.author,\r\n            interaction: row.interaction,\r\n            sourceid: row.sourceid,\r\n            src: row.src,\r\n            title: row.title,\r\n          } as RawCardRow;\r\n        });\r\n        const cards = getState().availableCards;\r\n        for (const [index, row] of rawCardRowsArray.entries()) {\r\n          if (\r\n            !getState()\r\n              .availableCards.map((c) => c.src)\r\n              .includes(row.src)\r\n          ) {\r\n            cards.push(new CardData(row, index));\r\n          }\r\n        }\r\n        actions.setAvailableCards(cards);\r\n      });\r\n    }\r\n  ),\r\n  onSetActiveLayout: thunkOn(\r\n    (actions, storeActions) => storeActions.layoutsModel.setActiveLayout,\r\n    async (actions, layout, { getState }) => {\r\n      const activeSourceIds = new Set(layout.payload.sources());\r\n\r\n      const { availableWidgets } = getState();\r\n      actions.setActiveWidgets(\r\n        availableWidgets.filter((w) => layout.payload.widgets().includes(w.id))\r\n      );\r\n\r\n      const availableCardsUpdated = getState().availableCards.map((card) => {\r\n        if (activeSourceIds.has(card.id)) {\r\n          card.setActive(true);\r\n        } else {\r\n          card.setActive(false);\r\n        }\r\n        return card;\r\n      });\r\n      const activeCards = getState().availableCards.filter((card) => {\r\n        return activeSourceIds.has(card.id);\r\n      });\r\n      actions.setAvailableCards(availableCardsUpdated);\r\n      actions.setActiveCards(activeCards);\r\n    }\r\n  ),\r\n  onSwapCardContent: thunkOn(\r\n    (actions, storeActions) => storeActions.layoutsModel.swapCardContent,\r\n    async (actions, payload, { getState }) => {\r\n      const newCards = getState().activeCards.map((c) => {\r\n        return c.id === payload.payload.targetId\r\n          ? getState().availableCards.find(\r\n              (c) => c.id === payload.payload.sourceId\r\n            )\r\n          : c;\r\n      });\r\n      if (newCards) {\r\n        actions.setActiveCards(newCards as CardData[]);\r\n      }\r\n    }\r\n  ),\r\n  rotateLayouts: true,\r\n  rotationSpeed: appConfig.timers.rotationDuration,\r\n  setActiveCards: action((state, cardDataArray) => {\r\n    state.activeCards = cardDataArray;\r\n  }),\r\n  setActiveWidgets: action((state, widgetDataArray) => {\r\n    state.activeWidgets = widgetDataArray;\r\n  }),\r\n  setAppMode: action((state, viewModeEnum) => {\r\n    state.appMode = viewModeEnum;\r\n  }),\r\n  setAvailableCards: action((state, cardDataArray) => {\r\n    state.availableCards = cardDataArray;\r\n  }),\r\n  setEditingCard: action((state, card) => {\r\n    state.editingCard = card;\r\n  }),\r\n  setRotateLayouts: action((state, should) => {\r\n    state.rotateLayouts = should;\r\n  }),\r\n\r\n  setRotationSpeed: action((state, speed) => {\r\n    state.rotationSpeed = speed;\r\n  }),\r\n\r\n  toggleAppMode: thunk((actions, _, { getState }) => {\r\n    switch (getState().appMode) {\r\n      case AppMode.EDIT:\r\n        actions.setEditingCard(undefined);\r\n        actions.setAppMode(AppMode.DISPLAY);\r\n        break;\r\n      case AppMode.DISPLAY:\r\n        actions.setAppMode(AppMode.EDIT);\r\n        break;\r\n      case AppMode.CYCLE:\r\n        break;\r\n      default:\r\n    }\r\n  }),\r\n};\r\n\r\nexport default appModel;\r\n","import type { Action } from \"easy-peasy\";\nimport { action, Thunk, thunk } from \"easy-peasy\";\n\nimport appConfig from \"../static/appConfig\";\nimport { StoreModel } from \"./index\";\n\nexport interface AppSettingsModel {\n  //state\n  rotationSpeed: number;\n  enableQrCodes: boolean;\n  enableIframeInteractions: boolean;\n  rotateLayouts: boolean;\n  enableIframeAudio: boolean;\n\n  //setter\n\n  setRotationSpeed: Action<AppSettingsModel, number>;\n  setRotateLayouts: Action<AppSettingsModel, boolean>;\n  setShowQrCodes: Action<AppSettingsModel, boolean>;\n  setEnableIframeInteractions: Action<AppSettingsModel, boolean>;\n  setEnableIframeAudio: Action<AppSettingsModel, boolean>;\n}\n\nconst appSettingsModel: AppSettingsModel = {\n  //state\n  rotationSpeed: appConfig.timers.rotationDuration,\n  enableQrCodes: true,\n  enableIframeInteractions: false,\n  rotateLayouts: true,\n  enableIframeAudio: false,\n  //setters\n  setRotationSpeed: action((state, speed) => {\n    state.rotationSpeed = speed;\n  }),\n  setShowQrCodes: action((state, enableQrCodes) => {\n    state.enableQrCodes = enableQrCodes;\n  }),\n  setEnableIframeInteractions: action((state, enableIframeInteractions) => {\n    state.enableIframeInteractions = enableIframeInteractions;\n  }),\n  setRotateLayouts: action((state, rotateLayouts) => {\n    state.rotateLayouts = rotateLayouts;\n  }),\n  setEnableIframeAudio: action((state, enableIframeAudio) => {\n    state.enableIframeAudio = enableIframeAudio;\n  }),\n};\n\nexport default appSettingsModel;\n","import type { SheetNames } from \"../enums\";\r\n\r\nexport default class GoogleSheetData {\r\n  title!: string;\r\n  sheetId!: string;\r\n  sheets!: Map<SheetNames, unknown[]>;\r\n  constructor(\r\n    title: string,\r\n    sheetId: string,\r\n  ) {\r\n    this.title = title;\r\n    this.sheetId = sheetId;\r\n    this.sheets = new Map();\r\n  }\r\n  getSheetRows<P>(title: SheetNames): Promise<P[]>{\r\n    // const typedArr = this.rows.map(r=>r as P)\r\n    return new Promise<P[]>((resolve, reject)=>{\r\n      const rowArray = this.sheets.get(title);\r\n      if (rowArray){\r\n        resolve(rowArray.map(r=>r as P))\r\n      } else {\r\n        reject(`sheet with title ${title} did not exist`)\r\n      }\r\n    })\r\n  }\r\n  addSheet(title: SheetNames, rows: unknown[]){\r\n    this.sheets.set(title, rows);\r\n  }\r\n}\r\n","import type { Action, Computed, Thunk } from \"easy-peasy\";\r\nimport { action, computed, thunk } from \"easy-peasy\";\r\nimport Papa from \"papaparse\";\r\n\r\nimport GoogleSheetData from \"../data_structs/GoogleSheetData\";\r\nimport type { SheetNames } from \"../enums\";\r\nimport type AppError from \"../interfaces/AppError\";\r\nimport type PrincipleSheetRow from \"../interfaces/PrincipleSheetRow\";\r\nimport type RawCardRow from \"../interfaces/RawCardRow\";\r\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\n\r\n/**\r\n * Responsible for making requests to google sheets. Other models must listen this model to intercept the sheet payload.\r\n  console.log(query.get(\"url\"));\r\n * Also stores the fetch data purely for debugging purposes.\r\n */\r\n\r\nexport interface GoogleSheetsModel {\r\n  //**Add a new Error related to the Google Sheets Model */\r\n  addGoogleSheetError: Action<GoogleSheetsModel, AppError>;\r\n  //**Array of sheet rows from the Cards Spreadsheet */\r\n  cardDataGoogleSheet: RawCardRow[] | null;\r\n  //**URL of the cards sheet */\r\n  cardSheetUrl: string | undefined;\r\n  //** */\r\n  fetchParentSheet: Thunk<GoogleSheetsModel, string>;\r\n  fetchSheet: Thunk<GoogleSheetsModel, { name: SheetNames; url: string }[]>;\r\n  //**Google Form url for submitting new Layouts */\r\n  formUrl: string | undefined;\r\n  //**Errors related to loading or reading the Parent, Card, or Layouts Google Sheets */\r\n  googleSheetsErrors: AppError[];\r\n  //**Array of sheet rows from the Layouts Spreadsheet */\r\n  layoutDataGoogleSheet: RawLayoutRow[] | null;\r\n  //**URL of the layouts sheet */\r\n  layoutSheetUrl: string | undefined;\r\n  /**GoogleSheetData containing links the Google Form, Cards Spreadsheet, and Layouts Spreadsheet */\r\n  parentGoogleSheet: GoogleSheetData | undefined;\r\n  //**URL of the parent sheet */\r\n  parentSheetUrl: string | undefined;\r\n  //**Returns true if the Google  */\r\n  requests: Promise<GoogleSheetData>[];\r\n  /** reload both the card and layout sheet so updates from the sheets are shown in the editor UI*/\r\n  refreshSheets: Thunk<GoogleSheetsModel>;\r\n  //**set */\r\n  setAppGoogleSheetData: Action<GoogleSheetsModel, GoogleSheetData>;\r\n  setCardDataGoogleSheet: Action<GoogleSheetsModel, RawCardRow[]>;\r\n  /**set cardSheetUrl */\r\n  setCardSheetUrl: Action<GoogleSheetsModel, string>;\r\n  //**Set formUrl */\r\n  setFormUrl: Action<GoogleSheetsModel, string>;\r\n  setLayoutDataGoogleSheet: Action<GoogleSheetsModel, RawLayoutRow[]>;\r\n  //**Set Layouts sheet url */\r\n  setLayoutsSheetUrl: Action<GoogleSheetsModel, string>;\r\n  //**Set Parent Sheet Url */\r\n  setParentSheetUrl: Action<GoogleSheetsModel, string>;\r\n  setUrlSheet: Action<GoogleSheetsModel, string | null>;\r\n  /**Set sheets are loaded */\r\n  sheetsAreLoaded: Computed<GoogleSheetsModel, boolean>;\r\n  //** */\r\n  // testLoad: boolean;\r\n  urlSheet: string | null;\r\n}\r\n\r\ninterface LoadSheetResult {\r\n  rows: unknown[];\r\n  sheetTitle: SheetNames;\r\n}\r\n\r\nconst googleSheetsModel: GoogleSheetsModel = {\r\n  addGoogleSheetError: action((state, googleSheetError) => {\r\n    const errorsString = state.googleSheetsErrors.map(\r\n      (error) => JSON.stringify(error) as string\r\n    );\r\n    const newError = JSON.stringify(googleSheetError);\r\n    if (!errorsString.includes(newError)) {\r\n      state.googleSheetsErrors.push(googleSheetError);\r\n    }\r\n  }),\r\n  cardDataGoogleSheet: null,\r\n  cardSheetUrl: undefined,\r\n  fetchParentSheet: thunk((actions, parentSheetUrl) => {\r\n    try {\r\n      getSheetData(\"TOP_LEVEL\", parentSheetUrl)\r\n        .then((r) => {\r\n          const sheetRow = r.rows[0] as PrincipleSheetRow;\r\n          actions.setFormUrl(sheetRow.googleForm);\r\n          actions.setLayoutsSheetUrl(sheetRow.layoutsSheet);\r\n          actions.setCardSheetUrl(sheetRow.cardsSheet);\r\n          actions.setParentSheetUrl(parentSheetUrl);\r\n\r\n          actions.fetchSheet([\r\n            {\r\n              name: \"LAYOUTS\",\r\n              url: googleSheetUrlToCSVUrl(sheetRow.layoutsSheet),\r\n            },\r\n            {\r\n              name: \"CARDS\",\r\n              url: googleSheetUrlToCSVUrl(sheetRow.cardsSheet),\r\n            },\r\n          ]);\r\n        })\r\n        .catch((error: unknown) => {\r\n          actions.setLayoutsSheetUrl(\r\n            googleSheetUrlToCSVUrl(\r\n              `${process.env.PUBLIC_URL}/LAYOUTS_BACKUP.csv`\r\n            )\r\n          );\r\n          actions.setCardSheetUrl(\r\n            googleSheetUrlToCSVUrl(`${process.env.PUBLIC_URL}/CARDS_BACKUP.csv`)\r\n          );\r\n          actions.fetchSheet([\r\n            {\r\n              name: \"LAYOUTS\",\r\n              url: `${process.env.PUBLIC_URL}/LAYOUTS_BACKUP.csv`,\r\n            },\r\n            {\r\n              name: \"CARDS\",\r\n              url: `${process.env.PUBLIC_URL}/CARDS_BACKUP.csv`,\r\n            },\r\n          ]);\r\n        });\r\n    } catch {\r\n      actions.addGoogleSheetError({\r\n        description:\r\n          \"failed to get the mater google sheet, reverting to local svg\",\r\n        errorType: \"failed to fetch master google sheet\",\r\n        link: process.env.REACT_APP_SHEET_URL ?? \"NA\",\r\n        source: process.env.REACT_APP_SHEET_URL ?? \"NA\",\r\n      });\r\n    }\r\n  }),\r\n  fetchSheet: thunk(async (actions, sheets, { getState }) => {\r\n    const sheetResponses = sheets.map((s) => getSheetData(s.name, s.url));\r\n    const { cardSheetUrl } = getState();\r\n\r\n    if (cardSheetUrl) {\r\n      Promise.allSettled(sheetResponses).then((results) => {\r\n        const sheetData = new GoogleSheetData(\"DSC App\", cardSheetUrl);\r\n        const goodValues: PromiseFulfilledResult<LoadSheetResult>[] = [];\r\n\r\n        for (const [number, result] of results.entries()) {\r\n          if (result.status == \"fulfilled\") {\r\n            goodValues.push(result);\r\n            sheetData.addSheet(result.value.sheetTitle, result.value.rows);\r\n          }\r\n          if (result.status == \"rejected\") {\r\n          }\r\n        }\r\n        actions.setAppGoogleSheetData(sheetData);\r\n        sheetData.getSheetRows(\"CARDS\").then((r) => {\r\n          actions.setCardDataGoogleSheet(r as RawCardRow[]);\r\n        });\r\n        sheetData.getSheetRows(\"LAYOUTS\").then((r) => {\r\n          actions.setLayoutDataGoogleSheet(r as RawLayoutRow[]);\r\n        });\r\n      });\r\n    } else {\r\n      actions.addGoogleSheetError({\r\n        description: \"\",\r\n        errorType: \"no url for cards provided\",\r\n        link: \"\",\r\n        source: \"\",\r\n      });\r\n    }\r\n  }),\r\n  formUrl: undefined,\r\n  googleSheetsErrors: [],\r\n  layoutDataGoogleSheet: null,\r\n  layoutSheetUrl: undefined,\r\n  parentGoogleSheet: undefined,\r\n  parentSheetUrl: undefined,\r\n  refreshSheets: thunk(async (actions, _, { getState }) => {\r\n    const { parentSheetUrl } = getState();\r\n    if (parentSheetUrl) {\r\n      actions.fetchParentSheet(parentSheetUrl);\r\n    }\r\n  }),\r\n  requests: [],\r\n  setAppGoogleSheetData: action((state, googleSheet) => {\r\n    state.parentGoogleSheet = googleSheet;\r\n  }),\r\n  setCardDataGoogleSheet: action((state, sheet) => {\r\n    state.cardDataGoogleSheet = sheet;\r\n  }),\r\n  setCardSheetUrl: action((state, cardSheetUrl) => {\r\n    state.cardSheetUrl = cardSheetUrl;\r\n  }),\r\n  setFormUrl: action((state, formUrl) => {\r\n    state.formUrl = formUrl;\r\n  }),\r\n  setLayoutDataGoogleSheet: action((state, sheet) => {\r\n    state.layoutDataGoogleSheet = sheet;\r\n  }),\r\n  setLayoutsSheetUrl: action((state, layoutSheetUrl) => {\r\n    state.layoutSheetUrl = layoutSheetUrl;\r\n  }),\r\n  setParentSheetUrl: action((state, parentSheetUrl) => {\r\n    state.parentSheetUrl = parentSheetUrl;\r\n  }),\r\n  setUrlSheet: action((state, urlSheet) => {\r\n    state.urlSheet = urlSheet;\r\n  }),\r\n  sheetsAreLoaded: computed(\r\n    [\r\n      (state) => [\r\n        state.layoutDataGoogleSheet,\r\n        state.cardDataGoogleSheet,\r\n        state.parentGoogleSheet,\r\n      ],\r\n    ],\r\n    (sheets) => {\r\n      return sheets.every((s) => s !== null);\r\n    }\r\n  ),\r\n  urlSheet: null,\r\n};\r\n\r\nexport default googleSheetsModel;\r\n\r\n/**Converts the key for a google sheet into a url which can be used to fetch as .csv blob */\r\nfunction googleSheetUrlToCSVUrl(url: string): string {\r\n  const sections = url.split(\"/\");\r\n  const sheetKey = sections[5];\r\n  const sectionsGid = url.split(\"gid=\");\r\n  const gid = sectionsGid[1];\r\n  return `https://docs.google.com/spreadsheets/d/${sheetKey}/export?format=csv&gid=${gid}`;\r\n}\r\n\r\n/**Load a .csv file by url and parse it with Papaparse */\r\nfunction getSheetData(\r\n  sheetTitle: SheetNames,\r\n  sheetUrl: string\r\n): Promise<LoadSheetResult> {\r\n  let data;\r\n  return new Promise<LoadSheetResult>((resolve, reject) => {\r\n    try {\r\n      Papa.parse(sheetUrl, {\r\n        complete: (results) => {\r\n          data = results.data;\r\n          resolve({ rows: data, sheetTitle: sheetTitle });\r\n        },\r\n        delimiter: \",\",\r\n        download: true,\r\n        dynamicTyping: true,\r\n        header: true,\r\n      });\r\n    } catch {\r\n      reject(\"failed to get sheet\");\r\n    }\r\n  });\r\n}\r\n","import type { ExtendedLayout, GridSettings, LayoutSettings } from \"../data_structs/LayoutData\"\n\nconst layout = { \"lg\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"md\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"sm\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"xs\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }], \"xxs\": [{ \"w\": 2, \"h\": 1, \"x\": 0, \"y\": 0, \"i\": \"clock\", \"moved\": false, \"static\": true }, { \"w\": 2, \"h\": 2, \"x\": 2, \"y\": 0, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/DuBois_Racism.png\", \"moved\": false, \"static\": false }, { \"w\": 1, \"h\": 2, \"x\": 0, \"y\": 1, \"i\": \"https://raw.githubusercontent.com/wyhinton/dxl_content/master/images/VideoGames.jpeg\", \"moved\": false, \"static\": false }] }\n\nconst gridSettings: GridSettings = {\n    defaultBackgroundColor: \"red\"\n}\nconst layoutSettings: LayoutSettings  = {\n    gridSettings: gridSettings,\n    cardSettings: [],\n}\n\nconst extendedLayoutTest: ExtendedLayout = {\n    layout: layout,\n    layoutSettings: layoutSettings,\n    widgets: [],\n}\n\nexport default extendedLayoutTest","import type { Layout, Layouts } from \"react-grid-layout\";\n\nimport type { CardSwapEvent } from \"../interfaces/CardEvents\";\nimport type { CardSettings } from \"../interfaces/CardSettings\";\nimport type { GridPosition } from \"../interfaces/GridPosition\";\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\nimport extendedLayoutTest from \"../static/extendedLayoutTest\";\nimport widgets from \"../static/widgets\";\nimport type CardData from \"./CardData\";\nimport type WidgetData from \"./WidgetData\";\n\nexport interface GridSettings {\n  defaultBackgroundColor: string;\n}\nexport interface LayoutSettings {\n  cardSettings: CardSettings[];\n  gridSettings: GridSettings;\n}\n\nexport interface ExtendedLayout {\n  layout: Layouts;\n  layoutSettings: LayoutSettings;\n  widgets: WidgetData[];\n}\n\n//in case the layout doe not provide any card settings\nconst defaultCardSettings = {\n  backgroundColor: undefined,\n  objectPosition: \"center\",\n  scale: 1,\n};\n\nconst defaultGridSettings = {\n  defaultBackgroundColor: \"red\",\n};\n\nexport default class LayoutData {\n  readonly title: string;\n  readonly author: string;\n  readonly added: Date;\n  readonly id: string;\n  readonly sourceLayout: ExtendedLayout;\n  readonly layoutSettings: LayoutSettings;\n  layout: Layouts;\n  layoutWidgets: WidgetData[];\n\n  \n  constructor(row: RawLayoutRow) {\n    const { layout } = testGetLayout(row);\n    this.id = row.title + \"_\" + row.timestamp;\n    this.title = row.title;\n    this.author = row.author;\n    this.added = new Date(row.timestamp.split(\" \")[0]);\n    this.sourceLayout = JSON.parse(row.layout).layout;\n\n    this.layoutSettings = JSON.parse(row.layout).layoutSettings\n      ? JSON.parse(row.layout).layoutSettings\n      : {\n          cardSettings: layout.lg.map((l) => {\n            return {\n              id: l.i,\n              ...defaultCardSettings,\n            };\n          }),\n          gridSettings: defaultGridSettings,\n        };\n    this.layoutWidgets = JSON.parse(row.layout).layoutWidgets\n      ? JSON.parse(row.layout).layoutWidgets\n      : [];\n    this.layout = layout;\n  }\n\n  swapCard(swapInfo: CardSwapEvent): void {\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        if (layoutValue.i == swapInfo.targetId) {\n          v[index].i = swapInfo.sourceId;\n        }\n      }\n      this.layout[k] = v;\n    }\n  }\n\n  removeCard(toRemoveId: string): void {\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        this.layout[k] = v.filter((l) => l.i !== toRemoveId);\n      }\n    }\n  }\n\n  clearCards(): void {\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        this.layout[k] = [];\n      }\n    }\n  }\n\n  addCard(toAdd: CardData | WidgetData, pos: GridPosition): void {\n    if (!this.sources().includes(toAdd.id)) {\n      for (const [k, v] of Object.entries(this.layout)) {\n        const newItem: Layout = {\n          w: 1,\n          x: pos.x,\n          h: 1,\n          y: pos.y,\n          i: toAdd.id,\n        };\n        this.layout[k].push(newItem);\n      }\n      if (\n        !this.layoutSettings.cardSettings.map((cs) => cs.id).includes(toAdd.id)\n      ) {\n        this.layoutSettings.cardSettings.push({\n          backgroundColor: undefined,\n          id: toAdd.id,\n          objectPosition: \"center\",\n          scale: 1,\n        });\n      }\n    }\n  }\n  addWidget(toAdd: WidgetData, pos: GridPosition): void {\n    this.layoutWidgets.push(toAdd);\n    for (const [k, v] of Object.entries(this.layout)) {\n      const newItem: Layout = {\n        w: 1,\n        x: pos.x,\n        h: 1,\n        y: pos.y,\n        i: toAdd.id,\n      };\n      this.layout[k].push(newItem);\n    }\n  }\n  resetLayout(): void {\n    this.layout = JSON.parse(JSON.stringify(this.sourceLayout));\n  }\n  setGridLayout(newGridLayout: Layouts): void {\n    for (const [k, v] of Object.entries(this.layout)) {\n      for (const [index, layoutValue] of v.entries()) {\n        this.layout[k] = newGridLayout[k];\n      }\n    }\n  }\n  sources(): string[] {\n    const lg = this.layout.lg;\n    return lg.map((l: Layout) => l.i);\n  }\n  widgets(): string[] {\n    const lg = this.layout.lg;\n    const justWidgets = lg.filter((l: any) =>\n      Object.keys(widgets).includes(l.i)\n    );\n    return justWidgets.map((l: any) => l.i);\n  }\n  getCardSettings(cardId: string): CardSettings {\n    return this.layoutSettings.cardSettings.filter((c) => c.id === cardId)[0];\n  }\n  setCardScale(id: string, scale: number): void {\n    if (this.sources().includes(id)) {\n      this.layoutSettings.cardSettings.filter((cs) => cs.id === id)[0].scale =\n        scale;\n    }\n  }\n  setCardBackgroundColor(id: string, backgroundColor: string): void {\n    if (this.sources().includes(id)) {\n      this.layoutSettings.cardSettings.filter(\n        (cs) => cs.id === id\n      )[0].backgroundColor = backgroundColor;\n    }\n  }\n  setCardContentFit(id: string, contentFit: string): void {\n    if (this.sources().includes(id)) {\n      this.layoutSettings.cardSettings.filter(\n        (cs) => cs.id === id\n      )[0].contentFit = contentFit;\n    }\n  }\n  layoutToString(): string {\n    const object = {\n      layout: this.layout.lg,\n      layoutSettings: this.layoutSettings,\n    };\n    return JSON.stringify(object);\n  }\n}\nfunction testGetLayout(row: RawLayoutRow): ExtendedLayout {\n  const test = JSON.parse(row.layout);\n  return test.layout ? test : extendedLayoutTest;\n}\n","import type { AppDataModel } from \"./appModel\";\r\nimport appModel from \"./appModel\";\r\nimport type { AppSettingsModel } from \"./appSettingsModel\";\r\nimport appSettingsModel from \"./appSettingsModel\";\r\nimport type { GoogleSheetsModel } from \"./googleSheetsModel\";\r\nimport googleSheetsModel from \"./googleSheetsModel\";\r\nimport type { LayoutsModel } from \"./layoutsModel\";\r\nimport layoutsModel from \"./layoutsModel\";\r\n\r\n//**app store model */\r\nexport interface StoreModel {\r\n  appModel: AppDataModel;\r\n  appSettingsModel: AppSettingsModel;\r\n  googleSheetsModel: GoogleSheetsModel;\r\n  layoutsModel: LayoutsModel;\r\n}\r\n\r\nconst model: StoreModel = {\r\n  appModel,\r\n  appSettingsModel,\r\n  googleSheetsModel,\r\n  layoutsModel,\r\n};\r\n\r\nexport default model;\r\n","import type { Action, Computed, Thunk, ThunkOn } from \"easy-peasy\";\r\nimport { action, computed, thunk, thunkOn } from \"easy-peasy\";\r\nimport type { Layouts } from \"react-grid-layout\";\r\n\r\nimport LayoutData from \"../data_structs/LayoutData\";\r\nimport type AppError from \"../interfaces/AppError\";\r\nimport type { CardAddEvent, CardSwapEvent } from \"../interfaces/CardEvents\";\r\nimport type { CardSettings } from \"../interfaces/CardSettings\";\r\nimport type RawLayoutRow from \"../interfaces/RawLayoutRow\";\r\nimport appConfig from \"../static/appConfig\";\r\nimport backupData from \"../static/backupLayout.json\";\r\nimport type { StoreModel } from \"./index\";\r\n\r\nexport interface LayoutsModel {\r\n  /**The currently displayed Layout */\r\n  activeLayout: LayoutData | undefined;\r\n  addCard: Thunk<LayoutsModel, CardAddEvent, never, StoreModel>;\r\n  addLayoutError: Action<LayoutsModel, AppError>;\r\n  animationCounter: number;\r\n  bufferLayout: Layouts;\r\n  /**Background color of the currently editing card*/\r\n  cardBackgroundColor: string | undefined;\r\n  cardContentFit: string | undefined;\r\n  cardScale: number | undefined;\r\n  clearCards: Thunk<LayoutsModel, never, StoreModel>;\r\n  deleteCard: Thunk<LayoutsModel, string, StoreModel>;\r\n  /**Array of all layouts from the Layouts Google Sheet */\r\n  externalLayouts: LayoutData[];\r\n  //listeners\r\n  layoutErrors: AppError[];\r\n  layoutsString: Computed<LayoutsModel, string>;\r\n  onSetAppGoogleSheetData: ThunkOn<LayoutsModel, never, StoreModel>;\r\n  /**CSS Scale to apply to all cards in the active layout */\r\n  onToggleViewMode: ThunkOn<LayoutsModel, never, StoreModel>;\r\n  //simple setters\r\n  resetLayout: Thunk<LayoutsModel, never, StoreModel>;\r\n  setActiveLayout: Action<LayoutsModel, LayoutData>;\r\n  setAnimationCounter: Action<LayoutsModel, number>;\r\n  setBufferLayout: Action<LayoutsModel, Layouts>;\r\n  setCardBackgroundColor: Action<\r\n    LayoutsModel,\r\n    { cardId: string; color: string }\r\n  >;\r\n  setCardContentFit: Action<\r\n    LayoutsModel,\r\n    { cardId: string; contentFit: string }\r\n  >;\r\n  setCardScale: Action<LayoutsModel, { cardId: string; scale: number }>;\r\n  setCardSettings: Action<LayoutsModel, CardSettings>;\r\n  setExternalLayouts: Action<LayoutsModel, LayoutData[]>;\r\n  //update\r\n  setNextLayout: Thunk<LayoutsModel, never, StoreModel>;\r\n  swapCardContent: Thunk<LayoutsModel, CardSwapEvent, StoreModel>;\r\n  transitionLayout: Thunk<LayoutsModel, number>;\r\n  updateLayout: Action<LayoutsModel, CardSwapEvent>;\r\n}\r\n\r\nconst layoutsModel: LayoutsModel = {\r\n  activeLayout: undefined,\r\n  addCard: thunk((actions, cardAddEvent, { getState, getStoreState }) => {\r\n    const { availableCards, availableWidgets } = getStoreState().appModel;\r\n    const { sourceId, targetPosition } = cardAddEvent;\r\n    const cardToAdd = [...availableCards, ...availableWidgets].find(\r\n      (c) => c.id == sourceId\r\n    );\r\n    const { activeLayout } = getState();\r\n    if (activeLayout && cardToAdd) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.setGridLayout(buf);\r\n      activeLayout?.addCard(cardToAdd, targetPosition);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  addLayoutError: action((state, error) => {\r\n    const errorsString = state.layoutErrors.map(\r\n      (error) => JSON.stringify(error) as string\r\n    );\r\n    const newError = JSON.stringify(error);\r\n    if (!errorsString.includes(newError)) {\r\n      state.layoutErrors.push(error);\r\n    }\r\n  }),\r\n  animationCounter: 0,\r\n  bufferLayout: backupData as unknown as Layouts,\r\n  cardBackgroundColor: undefined,\r\n  cardContentFit: undefined,\r\n  cardScale: undefined,\r\n  clearCards: thunk((actions, _, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      activeLayout.clearCards();\r\n      actions.setBufferLayout(activeLayout.layout);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  deleteCard: thunk((actions, cardToDelete, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.layout = buf;\r\n      activeLayout.removeCard(cardToDelete);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  externalLayouts: [],\r\n  layoutErrors: [],\r\n  layoutsString: computed([(state) => state.bufferLayout], (bufferLayout) => {\r\n    return JSON.stringify(bufferLayout);\r\n  }),\r\n  onSetAppGoogleSheetData: thunkOn(\r\n    (actions, storeActions) =>\r\n      storeActions.googleSheetsModel.setAppGoogleSheetData,\r\n    (actions, target, { getState }) => {\r\n      target.payload\r\n        .getSheetRows<RawLayoutRow>(\"LAYOUTS\")\r\n        .then((rawLayoutRows) => {\r\n          const { externalLayouts } = getState();\r\n          const currentLayoutIds = new Set(\r\n            externalLayouts.map((layout) => layout.id)\r\n          );\r\n          const receivedLayoutsIds = new Set(\r\n            rawLayoutRows.map((row) => row.title + \"_\" + row.timestamp)\r\n          );\r\n\r\n          //for each of the layout data sheet rows, if the our current rows does not already contain the row, crete a new LayoutData and append\r\n          for (const row of rawLayoutRows) {\r\n            try {\r\n              const layoutId = row.title + \"_\" + row.timestamp;\r\n              if (!currentLayoutIds.has(layoutId)) {\r\n                const l = new LayoutData(row);\r\n                externalLayouts.push(l);\r\n              }\r\n            } catch {\r\n              actions.addLayoutError({\r\n                description: `failed to read layout row ${\r\n                  row.title ?? \"NO TITLE PROVIDED\"\r\n                }`,\r\n                errorType: \"failed to read layout row\",\r\n                link: \"none\",\r\n                source: row.title ?? \"NO TITLE PROVIDED\",\r\n              });\r\n            }\r\n          }\r\n          //in case a layout is deleted in the google sheet and then the layouts are refreshed, that needs to be reflected in the UI.\r\n          //so if the rows we received from the layout does not include a layout which we have previously made, remove it from our layout array.\r\n          for (const layout of externalLayouts) {\r\n            if (!receivedLayoutsIds.has(layout.id)) {\r\n              const indexOfLayoutToRemove = externalLayouts.indexOf(layout);\r\n              externalLayouts.splice(indexOfLayoutToRemove, 1);\r\n            }\r\n          }\r\n\r\n          const defaultLayout = externalLayouts[0];\r\n          if (defaultLayout) {\r\n            actions.setActiveLayout(defaultLayout);\r\n            actions.setBufferLayout(defaultLayout.layout);\r\n          }\r\n          actions.setExternalLayouts(externalLayouts);\r\n        });\r\n    }\r\n  ),\r\n  onToggleViewMode: thunkOn(\r\n    (actions, storeActions) => storeActions.appModel.manageViewModeChange,\r\n    (actions, target, { getState }) => {\r\n      const { activeLayout } = getState();\r\n      if (activeLayout) {\r\n        const buf = getState().bufferLayout;\r\n        activeLayout.layout = buf;\r\n        activeLayout.setGridLayout(buf);\r\n        actions.setActiveLayout(activeLayout);\r\n      }\r\n    }\r\n  ),\r\n  resetLayout: thunk((actions, _, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const buf = getState().activeLayout;\r\n      buf?.resetLayout();\r\n      if (buf) {\r\n        actions.setActiveLayout(buf);\r\n      }\r\n    }\r\n  }),\r\n  setActiveLayout: action((state, newActiveLayout) => {\r\n    state.activeLayout = newActiveLayout;\r\n    state.bufferLayout = JSON.parse(JSON.stringify(newActiveLayout.layout));\r\n  }),\r\n  setAnimationCounter: action((state, value) => {\r\n    state.animationCounter += 1;\r\n  }),\r\n  setBufferLayout: action((state, layouts) => {\r\n    state.bufferLayout = JSON.parse(JSON.stringify(layouts));\r\n  }),\r\n  setCardBackgroundColor: action((state, { cardId, color }) => {\r\n    state.activeLayout?.setCardBackgroundColor(cardId, color);\r\n    state.cardBackgroundColor = color;\r\n  }),\r\n  setCardContentFit: action((state, { cardId, contentFit }) => {\r\n    state.activeLayout?.setCardContentFit(cardId, contentFit);\r\n    state.cardContentFit = contentFit;\r\n  }),\r\n  setCardScale: action((state, { cardId, scale }) => {\r\n    const currentSettings = state.activeLayout?.layoutSettings.cardSettings;\r\n    state.activeLayout?.setCardScale(cardId, scale);\r\n    state.cardScale = scale;\r\n  }),\r\n  setCardSettings: action((state, settings) => {\r\n    const currentSettings =\r\n      state.activeLayout?.sourceLayout.layoutSettings.cardSettings;\r\n  }),\r\n  setExternalLayouts: action((state, newLayoutArray) => {\r\n    state.externalLayouts = newLayoutArray;\r\n  }),\r\n  setNextLayout: thunk((actions, _, { getState }) => {\r\n    const { externalLayouts, activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const currentIndex = externalLayouts\r\n        .map((l) => l.id)\r\n        .indexOf(activeLayout?.id);\r\n      const nextIndex = (currentIndex + 1) % externalLayouts.length;\r\n      const selectedRandom = externalLayouts[nextIndex];\r\n      actions.setActiveLayout(selectedRandom);\r\n    }\r\n  }),\r\n  swapCardContent: thunk((actions, swapInfo, { getState }) => {\r\n    const { activeLayout } = getState();\r\n    if (activeLayout) {\r\n      const buf = getState().bufferLayout;\r\n      activeLayout.layout = buf;\r\n      activeLayout.swapCard(swapInfo);\r\n      actions.setActiveLayout(activeLayout);\r\n    }\r\n  }),\r\n  transitionLayout: thunk((actions, value, { getState }) => {\r\n    actions.setAnimationCounter(getState().animationCounter + 1);\r\n    setTimeout(() => {\r\n      actions.setNextLayout();\r\n    }, 1000);\r\n  }),\r\n\r\n  updateLayout: action((state, swap) => {\r\n    const old = state.activeLayout;\r\n    if (old) {\r\n      old.swapCard(swap);\r\n      state.activeLayout = old;\r\n    }\r\n  }),\r\n};\r\n\r\nexport default layoutsModel;\r\n","import { action,createStore } from \"easy-peasy\";\n\nimport model from \"./model\";\n\nconst store = createStore(model, { name: \"Cuboard App Store\" });\n\nexport default store;\n","import { StoreProvider } from \"easy-peasy\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  //@ts-ignore\n  <StoreProvider store={store}>\n    <App />\n  </StoreProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}